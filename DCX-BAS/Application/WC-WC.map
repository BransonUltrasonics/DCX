Archive member included because of file (symbol)

C:/RTOS-WC/libRTOS-WC.a(Board_cpp.o)
                              obj-WC/WCTask_cpp.o (Board::GetI2C(int, int, int))
C:/RTOS-WC/libRTOS-WC.a(LED_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Board_cpp.o) (LED::Init())
C:/RTOS-WC/libRTOS-WC.a(BoardFlash_cpp.o)
                              obj-WC/InputTask_cpp.o (Board::GetFlash())
C:/RTOS-WC/libRTOS-WC.a(54455_CPU_cpp.o)
                              obj-WC/WCTask_cpp.o (CPU::DelayMs(int))
C:/RTOS-WC/libRTOS-WC.a(54455_Exception_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Board_cpp.o) (Exception::Init())
C:/RTOS-WC/libRTOS-WC.a(54455_Terminal_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Board_cpp.o) (Terminal::Init())
C:/RTOS-WC/libRTOS-WC.a(54455_PIT_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Board_cpp.o) (PIT::StopInt(int))
C:/RTOS-WC/libRTOS-WC.a(54455_Serial_cpp.o)
                              obj-WC/ReceiveCommandHandler_cpp.o (Serial::Init(int, int, int, int, bool))
C:/RTOS-WC/libRTOS-WC.a(54455_FEC_cpp.o)
                              obj-WC/InputTask_cpp.o (FEC::fecs)
C:/RTOS-WC/libRTOS-WC.a(54455_Cache_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Board_cpp.o) (Cache::Init(int, int))
C:/RTOS-WC/libRTOS-WC.a(54455_MMU_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(54455_CPU_cpp.o) (MMU::Map(unsigned long))
C:/RTOS-WC/libRTOS-WC.a(54455_DSPI_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Board_cpp.o) (DSPI::DSPI(int, int, int))
C:/RTOS-WC/libRTOS-WC.a(54455_I2C_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Board_cpp.o) (I2C::I2C(int, int, int, int))
C:/RTOS-WC/libRTOS-WC.a(54455_CPU_asm.o)
                              C:/RTOS-WC/Start.o (CPU::Init())
C:/RTOS-WC/libRTOS-WC.a(54455_Exception_asm.o)
                              C:/RTOS-WC/Start.o (AsmExceptionHandler)
C:/RTOS-WC/libRTOS-WC.a(54455_MCF5445xRTOS_asm.o)
                              C:/RTOS-WC/libRTOS-WC.a(54455_Exception_asm.o) (RTOS::TaskSwitch())
C:/RTOS-WC/libRTOS-WC.a(MCF_ArchDefs_cpp.o)
                              obj-WC/InputTask_cpp.o (EnterCritical())
C:/RTOS-WC/libRTOS-WC.a(MCF_FecBase_cpp.o)
                              obj-WC/InputTask_cpp.o (FecBase::PrintBDStatus())
C:/RTOS-WC/libRTOS-WC.a(MCF_MemoryInit_asm.o)
                              C:/RTOS-WC/libRTOS-WC.a(54455_CPU_asm.o) (MemoryInit)
C:/RTOS-WC/libRTOS-WC.a(MCF_ArchDefs_asm.o)
                              obj-WC/Main_cpp.o (memcpy)
C:/RTOS-WC/libRTOS-WC.a(stdlib_Assert_cpp.o)
                              obj-WC/ModBusRcvTask_cpp.o (SystemCrash(char*, char*, int))
C:/RTOS-WC/libRTOS-WC.a(stdlib_Alloc_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(MCF_FecBase_cpp.o) (MallocAlignedNoCache)
C:/RTOS-WC/libRTOS-WC.a(stdlib_PrintF_cpp.o)
                              obj-WC/LOG_cpp.o (sprintf)
C:/RTOS-WC/libRTOS-WC.a(stdlib_String_cpp.o)
                              obj-WC/Main_cpp.o (memset)
C:/RTOS-WC/libRTOS-WC.a(stdlib_StdLib_cpp.o)
                              obj-WC/InputTask_cpp.o (atoi)
C:/RTOS-WC/libRTOS-WC.a(API_CyGOS_cpp.o)
                              obj-WC/Main_cpp.o (CyGOS::GetTaskName(int))
C:/RTOS-WC/libRTOS-WC.a(API_TCPIP_cpp.o)
                              obj-WC/FirmWareUpgrade_cpp.o (CyGOS::GetNetworkInterface(int))
C:/RTOS-WC/libRTOS-WC.a(API_LinkedList_cpp.o)
                              obj-WC/DcxManagerHandler_cpp.o (LinkedListBase::LinkedListBase())
C:/RTOS-WC/libRTOS-WC.a(API_CRC_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(MCF_FecBase_cpp.o) (CalcCrc32_EDB88320)
C:/RTOS-WC/libRTOS-WC.a(API_FileSystems_cpp.o)
                              obj-WC/WebSite_cpp.o (CyGOS::FileLength(void*))
C:/RTOS-WC/libRTOS-WC.a(API_TFTP_cpp.o)
                              obj-WC/InputTask_cpp.o (CyGOS::TftpReceive(int, char*, int*, void*, ip_addr))
C:/RTOS-WC/libRTOS-WC.a(API_HTTP_cpp.o)
                              obj-WC/WebSite_cpp.o (CyGOS::AddHttpGetHandler(int, int, bool (*)(char*, HTTPReplyHeader&)))
C:/RTOS-WC/libRTOS-WC.a(API_SysLog_cpp.o)
                              obj-WC/LOG_cpp.o (CyGOS::RegisterSysLogCallback(void (*)(short, int, int, unsigned int, bool)))
C:/RTOS-WC/libRTOS-WC.a(RTOS_FIFO_cpp.o)
                              obj-WC/InputTask_cpp.o (FifoBase::FifoBase(int, int, char const*))
C:/RTOS-WC/libRTOS-WC.a(RTOS_RTOS_cpp.o)
                              obj-WC/InputTask_cpp.o (RTOS::tasks)
C:/RTOS-WC/libRTOS-WC.a(RTOS_Task_cpp.o)
                              obj-WC/WCTask_cpp.o (TaskBase::Tick())
C:/RTOS-WC/libRTOS-WC.a(RTOS_PrintfTask_cpp.o)
                              obj-WC/InputTask_cpp.o (getcharWait)
C:/RTOS-WC/libRTOS-WC.a(RTOS_Debug_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(stdlib_Assert_cpp.o) (Debug::Poll())
C:/RTOS-WC/libRTOS-WC.a(RTOS_Mutex_cpp.o)
                              obj-WC/ModBusSendTask_cpp.o (Mutex::~Mutex())
C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(API_CyGOS_cpp.o) (TaskDispLed::TaskDispLed(void (*)(int, int)))
C:/RTOS-WC/libRTOS-WC.a(RTOS_TaskManager_cpp.o)
                              obj-WC/Main_cpp.o (CyGOS::GetTaskTime(int))
C:/RTOS-WC/libRTOS-WC.a(Net_Ethernet_cpp.o)
                              obj-WC/ModBusSendTask_cpp.o (Ethernet::GetHardwareAddress() const)
C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(API_TCPIP_cpp.o) (TcpIp::AddNetIf(Ethernet*))
C:/RTOS-WC/libRTOS-WC.a(Net_PktBuf_cpp.o)
                              obj-WC/ModBusRcvTask_cpp.o (pbuf_free(PktBuf*))
C:/RTOS-WC/libRTOS-WC.a(Net_ARP_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o) (arp_init())
C:/RTOS-WC/libRTOS-WC.a(Net_IPv4_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_ARP_cpp.o) (PrintAddress(ip_addr*))
C:/RTOS-WC/libRTOS-WC.a(Net_Raw_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o) (raw_init())
C:/RTOS-WC/libRTOS-WC.a(Net_TCP_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o) (tcp_init())
C:/RTOS-WC/libRTOS-WC.a(Net_UDP_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o) (udp_init())
C:/RTOS-WC/libRTOS-WC.a(Net_ICMP_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o) (icmp_init())
C:/RTOS-WC/libRTOS-WC.a(Net_IGMP_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_IPv4_cpp.o) (igmp_lookfor_group(Ethernet*, ip_addr*))
C:/RTOS-WC/libRTOS-WC.a(Net_DhcpClient_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o) (dhcp_init())
C:/RTOS-WC/libRTOS-WC.a(Net_AutoIP_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o) (autoip_init())
C:/RTOS-WC/libRTOS-WC.a(Net_DnsClient_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_DhcpClient_cpp.o) (dns_setserver(int, ip_addr*))
C:/RTOS-WC/libRTOS-WC.a(Net_Socket_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o) (lwip_socket_init())
C:/RTOS-WC/libRTOS-WC.a(Net_NetBuf_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_Socket_cpp.o) (netbuf_free(NetBuf*))
C:/RTOS-WC/libRTOS-WC.a(Net_NetConn_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_Raw_cpp.o) (API_EVENT(NetConn*, netconn_evt, int))
C:/RTOS-WC/libRTOS-WC.a(Net_TcpServer_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(API_HTTP_cpp.o) (Ethernet::AddTcpServer(TcpServer*))
C:/RTOS-WC/libRTOS-WC.a(Net_TcpConnection_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_TcpServer_cpp.o) (TcpConnection::HasOutput())
C:/RTOS-WC/libRTOS-WC.a(Net_HttpServer_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(API_HTTP_cpp.o) (HttpServer::AddHttpGetHandler(bool (*)(char*, HTTPReplyHeader&)))
C:/RTOS-WC/libRTOS-WC.a(Net_HttpConnection_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_HttpServer_cpp.o) (HttpConnection::HttpConnection(int, char*, char*, HttpServer*))
C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(API_TFTP_cpp.o) (TftpClient::clients)
C:/RTOS-WC/libRTOS-WC.a(Net_DNSServer_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(API_TCPIP_cpp.o) (DNSServer::DNSServer(Ethernet*))
C:/RTOS-WC/libRTOS-WC.a(Net_DhcpServer_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(API_TCPIP_cpp.o) (DhcpServer::DhcpServer(Ethernet*, DhcpServerConfiguration&))
C:/RTOS-WC/libRTOS-WC.a(Flash_FlashM29W128G_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(BoardFlash_cpp.o) (FlashM29W128GL::FlashM29W128GL(unsigned int, int))
C:/RTOS-WC/libRTOS-WC.a(BlkDev_FileSystemManager_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(API_FileSystems_cpp.o) (FileSystemManager::FileClose(void*))
C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o)
                              obj-WC/Main_cpp.o (CreateRamDisk())
C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
                              obj-WC/Main_cpp.o (CreateFRAMDisk())
C:/RTOS-WC/libRTOS-WC.a(FileSys_FileSystem_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(BlkDev_FileSystemManager_cpp.o) (FileSystem::FileClose(File*))
C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
                              obj-WC/Main_cpp.o (RegisterTarFS(int, int))
C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
                              obj-WC/Main_cpp.o (RegisterFRAMFS(int, int))
C:/RTOS-WC/libRTOS-WC.a(Dev_TLV5604_cpp.o)
                              obj-WC/UserIO_cpp.o (TLV5604::TLV5604(SPI*, int, int, int))
C:/RTOS-WC/libRTOS-WC.a(Dev_MCP3208_cpp.o)
                              obj-WC/UserIO_cpp.o (MCP3208::MCP3208(SPI*, int, int))
C:/RTOS-WC/libRTOS-WC.a(Dev_24AA025E48_cpp.o)
                              obj-WC/WCTask_cpp.o (EUI_24AA025E48::Write(int, unsigned char const*, int))
C:/RTOS-WC/libRTOS-WC.a(Dev_I2CDevice_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Dev_24AA025E48_cpp.o) (I2CDevice::I2CDevice(I2C*, int))
C:/RTOS-WC/libRTOS-WC.a(Dev_PCF8563_cpp.o)
                              obj-WC/RTClock_cpp.o (PCF8563::Write(int, unsigned char const*, int))
C:/RTOS-WC/libRTOS-WC.a(OS_OS_Custom_cpp.o)
                              obj-WC/FieldbusTask_cpp.o (s_ulTime)
C:/RTOS-WC/libRTOS-WC.a(SRC_cifXDownload_cpp.o)
                              obj-WC/FieldbusTask_cpp.o (DEV_RemoveChannelFiles)
C:/RTOS-WC/libRTOS-WC.a(SRC_cifXFunctions_cpp.o)
                              obj-WC/FieldbusTask_cpp.o (xDriverOpen)
C:/RTOS-WC/libRTOS-WC.a(SRC_cifXInit_cpp.o)
                              obj-WC/FieldbusTask_cpp.o (cifXHandleWarmstartParameter)
C:/RTOS-WC/libRTOS-WC.a(SRC_cifXHWFunctions_cpp.o)
                              obj-WC/FieldbusTask_cpp.o (DEV_GetIOBitstate)
C:/RTOS-WC/libRTOS-WC.a(SRC_cifXInterrupt_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(SRC_cifXInit_cpp.o) (cifXTKitDSRHandler)
C:/RTOS-WC/libRTOS-WC.a(SRC_md5_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(SRC_cifXDownload_cpp.o) (md5_init)
C:/RTOS-WC/libRTOS-WC.a(USER_TKitUser_Custom_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(SRC_cifXInit_cpp.o) (USER_GetAliasName)
C:/RTOS-WC/libRTOS-WC.a(_double.o)
                              obj-WC/ScanResDetect_cpp.o (__adddf3)
C:/RTOS-WC/libRTOS-WC.a(_fixunsdfsi.o)
                              obj-WC/WebSite_cpp.o (__fixunsdfsi)
C:/RTOS-WC/libRTOS-WC.a(_floatex.o)
                              C:/RTOS-WC/libRTOS-WC.a(_double.o) (_fpCCR)
C:/RTOS-WC/libRTOS-WC.a(_gedf2.o)
                              C:/RTOS-WC/libRTOS-WC.a(_fixunsdfsi.o) (__gedf2)
C:/RTOS-WC/libRTOS-WC.a(fpgnulib.o)
                              obj-WC/WebSite_cpp.o (__floatunsidf)
C:/RTOS-WC/libRTOS-WC.a(BoardNet_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(API_TCPIP_cpp.o) (Board::GetMII(int))
C:/RTOS-WC/libRTOS-WC.a(Board_asm.o)
                              C:/RTOS-WC/libRTOS-WC.a(54455_CPU_asm.o) (Board::MultiBootMemoryInit())
C:/RTOS-WC/libRTOS-WC.a(54455_MCF5445xTask_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(RTOS_RTOS_cpp.o) (Task::GetTickAddress() const)
C:/RTOS-WC/libRTOS-WC.a(54455_WatchDog_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(API_CyGOS_cpp.o) (WatchDog::EnableWatchDog())
C:/RTOS-WC/libRTOS-WC.a(RTOS_Event_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_Socket_cpp.o) (Event::Event(char*))
C:/RTOS-WC/libRTOS-WC.a(RTOS_MailBox_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_TCP_cpp.o) (MailBox::Post(void*, int))
C:/RTOS-WC/libRTOS-WC.a(Net_LAN8701_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(BoardNet_cpp.o) (LAN8701::LAN8701(int, int))
C:/RTOS-WC/libRTOS-WC.a(Net_KSZ8863RLL_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(BoardNet_cpp.o) (KSZ8863RLL::KSZ8863RLL(int, int))
C:/RTOS-WC/libRTOS-WC.a(Flash_Flash_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Flash_FlashM29W128G_cpp.o) (Flash::access)
C:/RTOS-WC/libRTOS-WC.a(Flash_FlashAMD_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Flash_FlashM29W128G_cpp.o) (FlashAMD::UnlockChip())
C:/RTOS-WC/libRTOS-WC.a(BlkDev_BlockDevice_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o) (BlockDevice::Tick())
C:/RTOS-WC/libRTOS-WC.a(BlkDev_CacheBlock_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(BlkDev_BlockDevice_cpp.o) (CacheBlock::Initialize(int))
C:/RTOS-WC/libRTOS-WC.a(SRC_cifXEndianess_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(SRC_cifXFunctions_cpp.o) (cifXConvertEndianess(void*, int, CIFX_ENDIANESS_ENTRY_Ttag const*, int))
C:/RTOS-WC/libRTOS-WC.a(54455_MII_cpp.o)
                              C:/RTOS-WC/libRTOS-WC.a(Net_LAN8701_cpp.o) (MII::MII(int, int, int))

Discarded input sections

 _ZN9InputTaskD0Ev
                0x00000000        0x0 obj-WC/InputTask_cpp.o
 _ZN9InputTaskD1Ev
                0x00000000        0x0 obj-WC/InputTask_cpp.o
 _ZTV9InputTask
                0x00000000        0x0 obj-WC/InputTask_cpp.o
 _ZTV6WCTask    0x00000000        0x0 obj-WC/WCTask_cpp.o
 _ZN7MIATaskD0Ev
                0x00000000        0x0 obj-WC/MIATask_cpp.o
 _ZN7MIATaskD1Ev
                0x00000000        0x0 obj-WC/MIATask_cpp.o
 _ZTV7MIATask   0x00000000        0x0 obj-WC/MIATask_cpp.o
 _ZN4FifoItED1Ev
                0x00000000        0x0 obj-WC/WebSite_cpp.o
 _ZN14UploadFirmwareD0Ev
                0x00000000        0x0 obj-WC/UploadFirmWareTask_cpp.o
 _ZN14UploadFirmwareD1Ev
                0x00000000        0x0 obj-WC/UploadFirmWareTask_cpp.o
 _ZTV14UploadFirmware
                0x00000000        0x0 obj-WC/UploadFirmWareTask_cpp.o
 _ZN19FirmWareUpgradeTaskD1Ev
                0x00000000        0x0 obj-WC/FirmWareUpgrade_cpp.o
 _ZN19FirmWareUpgradeTaskD0Ev
                0x00000000        0x0 obj-WC/FirmWareUpgrade_cpp.o
 _ZTV19FirmWareUpgradeTask
                0x00000000        0x0 obj-WC/FirmWareUpgrade_cpp.o
 _ZN13ModBusRcvTaskD0Ev
                0x00000000        0x0 obj-WC/ModBusRcvTask_cpp.o
 _ZN13ModBusRcvTaskD1Ev
                0x00000000        0x0 obj-WC/ModBusRcvTask_cpp.o
 _ZN4FifoItED1Ev
                0x00000000        0x0 obj-WC/ModBusRcvTask_cpp.o
 _ZN4FifoI9MBMessageED1Ev
                0x00000000        0x0 obj-WC/ModBusRcvTask_cpp.o
 _ZTV13ModBusRcvTask
                0x00000000        0x0 obj-WC/ModBusRcvTask_cpp.o
 .text._ZN4FifoItED1Ev
                0x00000000        0x0 obj-WC/ModBusRcvTask_cpp.o
 _ZN21ReceiveCommandHandlerD0Ev
                0x00000000        0x0 obj-WC/ReceiveCommandHandler_cpp.o
 _ZN21ReceiveCommandHandlerD1Ev
                0x00000000        0x0 obj-WC/ReceiveCommandHandler_cpp.o
 _ZTV21ReceiveCommandHandler
                0x00000000        0x0 obj-WC/ReceiveCommandHandler_cpp.o
 _ZN14ModBusSendTaskD1Ev
                0x00000000        0x0 obj-WC/ModBusSendTask_cpp.o
 _ZN14ModBusSendTaskD0Ev
                0x00000000        0x0 obj-WC/ModBusSendTask_cpp.o
 _ZTV14ModBusSendTask
                0x00000000        0x0 obj-WC/ModBusSendTask_cpp.o
 _ZTV8FieldBus  0x00000000        0x0 obj-WC/FieldBus_cpp.o
 _ZN9NRTModbusD1Ev
                0x00000000        0x0 obj-WC/NRTModbusTask_cpp.o
 _ZN9NRTModbusD0Ev
                0x00000000        0x0 obj-WC/NRTModbusTask_cpp.o
 _ZTV9NRTModbus
                0x00000000        0x0 obj-WC/NRTModbusTask_cpp.o
 _ZTV8ProfiBus  0x00000000        0x0 obj-WC/ProfiBus_cpp.o
 _ZTV10EthernetIP
                0x00000000        0x0 obj-WC/EthernetIP_cpp.o
 _ZN16WelderSearchTaskD0Ev
                0x00000000        0x0 obj-WC/WelderSearchTask_cpp.o
 _ZN16WelderSearchTaskD1Ev
                0x00000000        0x0 obj-WC/WelderSearchTask_cpp.o
 _ZTV16WelderSearchTask
                0x00000000        0x0 obj-WC/WelderSearchTask_cpp.o
 _ZN12FieldbusTaskD1Ev
                0x00000000        0x0 obj-WC/FieldbusTask_cpp.o
 _ZN12FieldbusTaskD0Ev
                0x00000000        0x0 obj-WC/FieldbusTask_cpp.o
 _ZTV12FieldbusTask
                0x00000000        0x0 obj-WC/FieldbusTask_cpp.o
 _ZN12ShutDownTaskD0Ev
                0x00000000        0x0 obj-WC/ShutDownTask_cpp.o
 _ZN12ShutDownTaskD1Ev
                0x00000000        0x0 obj-WC/ShutDownTask_cpp.o
 _ZTV12ShutDownTask
                0x00000000        0x0 obj-WC/ShutDownTask_cpp.o
 _ZN18ExternalStatusTaskD1Ev
                0x00000000        0x0 obj-WC/ExternalStatusTask_cpp.o
 _ZN18ExternalStatusTaskD0Ev
                0x00000000        0x0 obj-WC/ExternalStatusTask_cpp.o
 _ZTV18ExternalStatusTask
                0x00000000        0x0 obj-WC/ExternalStatusTask_cpp.o
 _ZN12JSONWeldData7GetTypeEv
                0x00000000        0x0 obj-WC/DcxManagerHandler_cpp.o
 _ZN10JSONPreset7GetTypeEv
                0x00000000        0x0 obj-WC/DcxManagerHandler_cpp.o
 _ZN14JSONWeldResult7GetTypeEv
                0x00000000        0x0 obj-WC/DcxManagerHandler_cpp.o
 _ZN9JSONAlarm7GetTypeEv
                0x00000000        0x0 obj-WC/DcxManagerHandler_cpp.o
 _ZN15JSONCycleNumber7GetTypeEv
                0x00000000        0x0 obj-WC/DcxManagerHandler_cpp.o
 _ZN7PtrListI4JSONED1Ev
                0x00000000        0x0 obj-WC/DcxManagerHandler_cpp.o
 _ZTV15JSONCycleNumber
                0x00000000        0x0 obj-WC/DcxManagerHandler_cpp.o
 _ZTV9JSONAlarm
                0x00000000        0x0 obj-WC/DcxManagerHandler_cpp.o
 _ZTV14JSONWeldResult
                0x00000000        0x0 obj-WC/DcxManagerHandler_cpp.o
 _ZTV10JSONPreset
                0x00000000        0x0 obj-WC/DcxManagerHandler_cpp.o
 _ZTV12JSONWeldData
                0x00000000        0x0 obj-WC/DcxManagerHandler_cpp.o
 _ZTV4JSON      0x00000000        0x0 obj-WC/DcxManagerHandler_cpp.o
 _ZTV3FEC       0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_FEC_cpp.o)
 _ZTV4DSPI      0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_DSPI_cpp.o)
 _ZTV3SPI       0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_DSPI_cpp.o)
 _ZTV7FecBase   0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(MCF_FecBase_cpp.o)
 _ZN7PtrListI14HttpServerDescED1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(API_HTTP_cpp.o)
 _ZN8IdleTaskD0Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_RTOS_cpp.o)
 _ZN8IdleTaskD1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_RTOS_cpp.o)
 _ZTV8IdleTask  0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_RTOS_cpp.o)
 _ZTV4Task      0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_Task_cpp.o)
 _ZTV8TaskBase  0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_Task_cpp.o)
 _ZN10PrintfTaskD0Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_PrintfTask_cpp.o)
 _ZN10PrintfTaskD1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_PrintfTask_cpp.o)
 _ZTV10PrintfTask
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_PrintfTask_cpp.o)
 _ZN11TaskSlowLedD0Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
 _ZN11TaskSlowLedD1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
 _ZN11TaskFastLedD0Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
 _ZN11TaskFastLedD1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
 _ZN11TaskDispLedD0Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
 _ZN11TaskDispLedD1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
 _ZTV11TaskDispLed
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
 _ZTV11TaskFastLed
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
 _ZTV11TaskSlowLed
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
 _ZN11TaskManagerD0Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_TaskManager_cpp.o)
 _ZN11TaskManagerD1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_TaskManager_cpp.o)
 _ZTV11TaskManager
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_TaskManager_cpp.o)
 _ZN7PtrListI8EthernetED1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_Ethernet_cpp.o)
 _ZTV8Ethernet  0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_Ethernet_cpp.o)
 _ZN7PtrListI14CustomProtocolED1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o)
 _ZTV5TcpIp     0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o)
 _ZN7PtrListI10RouteTableED1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_IPv4_cpp.o)
 _ZTV9TcpServer
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_TcpServer_cpp.o)
 _ZTV13TcpConnection
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_TcpConnection_cpp.o)
 _ZTV10HttpServer
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_HttpServer_cpp.o)
 _ZTV14HttpConnection
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_HttpConnection_cpp.o)
 _ZN10TftpClientD0Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
 _ZN7PtrListI10TftpClientED1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
 _ZN10TftpClientD1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
 _ZTV10TftpClient
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
 _ZTV9DNSServer
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_DNSServer_cpp.o)
 _ZN10DhcpServerD0Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_DhcpServer_cpp.o)
 _ZN10DhcpServerD1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_DhcpServer_cpp.o)
 _ZTV10DhcpServer
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_DhcpServer_cpp.o)
 _ZTV14FlashM29W128GL
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Flash_FlashM29W128G_cpp.o)
 _ZTV17FileSystemManager
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_FileSystemManager_cpp.o)
 _ZNK11BlockDevice13GetSectorSizeEv
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o)
 _ZNK13RamDiskDevice12GetBlockSizeEv
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o)
 _ZNK13RamDiskDevice19IsPartitionedDeviceEv
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o)
 _ZTV13RamDiskDevice
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o)
 _ZNK14FRAMDiskDevice12GetBlockSizeEv
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
 _ZNK14FRAMDiskDevice13GetSectorSizeEv
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
 _ZNK14FRAMDiskDevice19IsPartitionedDeviceEv
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
 _ZTV14FRAMDiskDevice
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
 _ZTV10FileSystem
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FileSystem_cpp.o)
 _ZN4FileD0Ev   0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
 _ZN4FileD1Ev   0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
 _ZN13TarFileSystem7TarFileD1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
 _ZN13TarFileSystem7TarFileD0Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
 _ZTV13TarFileSystem
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
 _ZTVN13TarFileSystem7TarFileE
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
 _ZTV4File      0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
 _ZN4FileD0Ev   0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
 _ZN4FileD1Ev   0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
 _ZN14FRAMFileSystem8FRAMFileD1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
 _ZN14FRAMFileSystem8FRAMFileD0Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
 _ZTV14FRAMFileSystem
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
 _ZTVN14FRAMFileSystem8FRAMFileE
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
 _ZTV4File      0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
 .text._ZN4FileD0Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
 .text._ZN4FileD1Ev
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
 .rodata._ZTV4File
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
 _ZTV7TLV5604   0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_TLV5604_cpp.o)
 _ZTV3DAC       0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_TLV5604_cpp.o)
 _ZTV7MCP3208   0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_MCP3208_cpp.o)
 _ZTV3ADC       0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_MCP3208_cpp.o)
 _ZTV14EUI_24AA025E48
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_24AA025E48_cpp.o)
 _ZTV9I2CDevice
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_I2CDevice_cpp.o)
 _ZTV7PCF8563   0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_PCF8563_cpp.o)
 _ZTV8WatchDog  0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_WatchDog_cpp.o)
 _ZTV7LAN8701   0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_LAN8701_cpp.o)
 _ZTV10KSZ8863RLL
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_KSZ8863RLL_cpp.o)
 _ZTV11FlashAccess
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Flash_Flash_cpp.o)
 _ZTV5Flash     0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Flash_Flash_cpp.o)
 _ZTV8FlashAMD  0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(Flash_FlashAMD_cpp.o)
 _ZNK11BlockDevice13GetSectorSizeEv
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_BlockDevice_cpp.o)
 _ZNK11BlockDevice14GetSectorCountEv
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_BlockDevice_cpp.o)
 _ZTV11BlockDevice
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_BlockDevice_cpp.o)
 .text._ZNK11BlockDevice13GetSectorSizeEv
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_BlockDevice_cpp.o)
 _ZTV10CacheBlock
                0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_CacheBlock_cpp.o)
 _ZTV3MII       0x00000000        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_MII_cpp.o)

Memory Configuration

Name             Origin             Length             Attributes
vector_ram       0x40000000         0x00000500         xrw
vectors          0x50040000         0x00000400         xrw
config           0x50040400         0x00000100         xrw
sdram            0x50040500         0x07fbfb00         xrw
fram             0x0b000000         0x00020000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD C:/RTOS-WC/Start.o
LOAD obj-WC/Main_cpp.o
LOAD obj-WC/InputTask_cpp.o
LOAD obj-WC/WCTask_cpp.o
LOAD obj-WC/MIATask_cpp.o
LOAD obj-WC/GLOBALS_cpp.o
LOAD obj-WC/LOG_cpp.o
LOAD obj-WC/PasscodeConfig_cpp.o
LOAD obj-WC/preset_cpp.o
LOAD obj-WC/FRAM_cpp.o
LOAD obj-WC/WebSite_cpp.o
LOAD obj-WC/UploadFirmWareTask_cpp.o
LOAD obj-WC/WeldResultHistory_cpp.o
LOAD obj-WC/ScanResDetect_cpp.o
LOAD obj-WC/FirmWareUpgrade_cpp.o
LOAD obj-WC/RTClock_cpp.o
LOAD obj-WC/UserIO_cpp.o
LOAD obj-WC/StateMachineDrv_cpp.o
LOAD obj-WC/ModBusRcvTask_cpp.o
LOAD obj-WC/ReceiveCommandHandler_cpp.o
LOAD obj-WC/ModBusSendTask_cpp.o
LOAD obj-WC/FieldBus_cpp.o
LOAD obj-WC/NRTModbusTask_cpp.o
LOAD obj-WC/ProfiBus_cpp.o
LOAD obj-WC/EthernetIP_cpp.o
LOAD obj-WC/WelderSearchTask_cpp.o
LOAD obj-WC/VerifyPreset_cpp.o
LOAD obj-WC/ObjDictionary_cpp.o
LOAD obj-WC/counter_cpp.o
LOAD obj-WC/FieldbusTask_cpp.o
LOAD obj-WC/StateFunctions_cpp.o
LOAD obj-WC/StateTable_cpp.o
LOAD obj-WC/Alarms_cpp.o
LOAD obj-WC/FieldbusTable_cpp.o
LOAD obj-WC/ShutDownTask_cpp.o
LOAD obj-WC/ExternalStatusTask_cpp.o
LOAD obj-WC/BDMTask_cpp.o
LOAD obj-WC/BDM08_cpp.o
LOAD obj-WC/DcxManagerHandler_cpp.o
LOAD C:/RTOS-WC/libRTOS-WC.a

.textvect       0x50040000      0x400
                0x50040000                __FLASH_RAM = .
                0x50040000                __VECTOR_TABLE = .
                0x50040000                __INIT_SP = .
                0x50040000        0x4 LONG 0x5004050e _RAMstart
 */()
                0x50040004                __INIT_PC = .
                0x50040004        0x4 LONG 0x40500 (_start + __FLASH_DIFF)
 */()
 *(.textvect)
 .textvect      0x50040008      0x3f8 C:/RTOS-WC/Start.o

.config         0x50040400        0xc
                0x50040400                . = ALIGN (0x10)
                0x50040400                __SYSTEM_CLOCK = .
                0x50040400        0x4 LONG 0x7d
                0x50040404                __TERMINAL_PORT = .
                0x50040404        0x4 LONG 0x1
                0x50040408                __TERMINAL_BAUD = .
                0x50040408        0x4 LONG 0x1c200

.text           0x50040500    0x85160
                0x50040500                __TEXT_START = .
 *(.text)
 .text          0x50040500       0x42 C:/RTOS-WC/Start.o
                0x5004050e                _RAMstart
                0x50040500                _start
                0x50040526                _MultiBootStart
 *fill*         0x50040542        0x2 00
 .text          0x50040544     0x17de obj-WC/Main_cpp.o
                0x500405a8                SetFBStaticIPDefaults()
                0x50040a76                SetStaticIPDefaults()
                0x50040ad6                CheckAndPrintTPs()
                0x50040b94                SetDHCPServerIPDefaults()
                0x50040756                SetupLCDBoardSensor()
                0x50040cce                ColdStart()
                0x5004057c                SetStaticIPDefaultsOnDCPInterface()
                0x500405e0                ClearAllCounters()
                0x5004060e                SetupEportForSensingPowerDown()
                0x50040544                ByteCRC(unsigned char*, unsigned long)
                0x50040d06                CheckForColdStart()
                0x5004062c                StoreInfoAtCrash()
                0x50040f4a                main
                0x500408d0                TaskManCallback()
                0x50040c46                SetSystemConfigurationDefaults()
                0x500407a4                TaskManCallbackEvent(bool)
                0x50040eb2                InitializeDhcpServerConfiguration(long, int&)
                0x50040f1a                SetLeds(int, int)
 *fill*         0x50041d22        0x2 00
 .text          0x50041d24     0x1f72 obj-WC/InputTask_cpp.o
                0x5004254a                InputTask::PrintHelp()
                0x50042b50                InputTask::ProgramCompressedTarRegionFromSerial()
                0x5004289c                InputTask::InputTask()
                0x500428fc                InputTask::ProgramCompressedTarRegionFlash(int)
                0x50041d32                InputTask::Tick()
                0x50041d24                TestCheckForReset()
                0x50042626                ProgramCallback(int, int)
                0x50042d44                InputTask::ProgramFlash(int)
                0x500428cc                InputTask::InputTask()
                0x5004268e                InputTask::ProgramBootFlash(int)
                0x50041da6                PrintCurrentParameterSet()
                0x50042668                EraseCallback(int, int)
                0x50042f8e                InputTask::Run()
                0x50042526                TestCrash(int)
                0x500421a0                PrintDcpParameterSet()
 *fill*         0x50043c96        0x2 00
 .text          0x50043c98     0x1bf8 obj-WC/WCTask_cpp.o
                0x50044622                ModifyMACCHIPRWData()
                0x50043fdc                ReleaseAccessToken(CommIfc)
                0x50043ec0                UpdateMidBandAndMinMaxFreq()
                0x50044066                CheckForRTCBattery()
                0x500443f8                InitGlobalBuffers()
                0x50044f0e                WCTask::CycleRun()
                0x50045330                WCTask::~WCTask()
                0x50045374                WCTask::~WCTask()
                0x5004520c                WCTask::~WCTask()
                0x500445e4                ReadBootLoaderInfo()
                0x50044544                CheckForVersionChange()
                0x50045176                TimerInterruptCallback()
                0x500440dc                CheckForClockLost()
                0x50045128                WCTask::ConfigureResetforPHYandilscherWC()
                0x50044944                ReadMACAddressFromMacChip(unsigned char*)
                0x50043fc6                IsManualFunctionAvailable()
                0x500453b0                WCTask::Run()
                0x500449ae                SetDefaultMACCHIPRWData()
                0x50045248                WCTask::WCTask(MIATask*)
                0x50043f72                GetAccessToken(CommIfc)
                0x50044760                StoreWeldData()
                0x50044a2c                PowerUpInitialization()
                0x5004402e                UpdateFrequencyOffset()
                0x500440a8                CheckForWDReset()
                0x50044664                CheckforError()
                0x50044342                PrepareFBStatus()
                0x50044000                UpdatePeakPower()
                0x500444ae                UpdateFlashCRC()
                0x50043c98                CollectScanPoints()
                0x50043fb2                IsAccessTokenAvailable()
                0x50044e2a                CheckForPowerandLCDSensor()
                0x500452bc                WCTask::WCTask(MIATask*)
                0x50043eaa                SonicsOff()
                0x50044120                SetDCPTimeControlParams()
 .text          0x50045890      0x2bc obj-WC/MIATask_cpp.o
                0x50045a0c                MIATask::MIATask()
                0x50045890                MIATask::Run()
                0x50045aac                MIATask::MIATask()
 .text          0x50045b4c        0x0 obj-WC/GLOBALS_cpp.o
 .text          0x50045b4c      0xbda obj-WC/LOG_cpp.o
                0x50045d6e                Log::ReadWCEventLog(WebEventData*, long)
                0x5004628c                Log::WriteEventLog(EventID, long, long, unsigned long, TimeStamp*, bool)
                0x50045b4c                Log::GetEventStringFromID(EventID)
                0x50046508                Log::WriteSystemEventLog(short, int, int, unsigned int, bool)
                0x50045f2e                Log::ReadDCPEventLog(WebEventData*, long)
                0x500466ba                Log::Init()
                0x50046532                Log::ResetLog(ClearLog)
                0x500460a4                Log::WriteAlarmLog(Alarms, bool)
                0x50045c0c                Log::ReadAlarmLog(WebAlarmData*, long)
 *fill*         0x50046726        0x2 00
 .text          0x50046728      0x438 obj-WC/PasscodeConfig_cpp.o
                0x50046728                IsPasscodeRequired()
                0x500467ee                SetPasscodeRequired(bool)
                0x50046a3a                AddUser(unsigned char*, unsigned long, PRIVILEGE)
                0x5004692e                SetDefaultPasscodeConfiguration()
                0x500468cc                GetUsersDetail(UserInfo*)
                0x50046822                GetUserPrivilege(unsigned char*, unsigned long)
                0x5004673a                InvalidateUserEntries()
                0x50046982                GetUserID(unsigned long, char*)
                0x50046b0e                InitPasscodeConfiguration()
 .text          0x50046b60     0x747c obj-WC/preset_cpp.o
                0x5004a894                SavePreset(PRESET_NUMBER, HSPRESET_NUMBER)
                0x50046d44                SetDefaultRFswitch()
                0x5004814c                SetHDDefaults()
                0x50047bcc                InitFreqDependentParametersMinMaxDefault()
                0x5004dd30                RecallAndVerifyPreset(PRESET_NUMBER)
                0x5004db84                CheckPresetCRC(PRESET_NUMBER)
                0x50046ec8                SetDefaultAlarms()
                0x5004df18                RecallPreset(PRESET_NUMBER)
                0x50048458                VerifyPresetFromWebPage(PRESET_NUMBER, HSPRESET_NUMBER)
                0x50046cd2                SetMinMaxCycleParam()
                0x50046d9a                SetDefaultConfigurationSystem()
                0x5004a9aa                SaveHSStatusSet(HornFunction)
                0x5004822c                ClearMemoryFrequencyAtPowerup()
                0x5004a7d2                UpdateRunningPreset()
                0x5004a428                SetDefaultCutOffValues()
                0x5004b3e0                SetMaxMinValues(PSUPDATESPECIAL)
                0x50046f74                InitFreqAndLoopspeedDependantLoopConstantsMinMaxDefault()
                0x5004967e                UpdatePresetsOnLoopSpeedSwitching()
                0x5004a4f8                PrepareDCPPreset(bool)
                0x50049e38                SetDefaultValues(DEFAULT_PSCMD, PRESET_NUMBER)
                0x5004d02e                AutoNamePreset()
                0x50046b60                PrepareDCPWeldParam()
                0x5004a826                SetDefaultCycleParam()
                0x50048258                CalculateAndSavePresetCRC(SAVECRC_CMD, PRESET_NUMBER, HSPRESET_NUMBER, bool)
                0x5004d320                SetColdStartPresetValues(PSUPDATESPECIAL)
                0x5004ae8a                SaveWeldStatusSet()
                0x50049df4                SetDefaultSecretValues()
                0x50046dec                SetDefaultAdvRnd()
 .text          0x5004dfdc      0xe52 obj-WC/FRAM_cpp.o
                0x5004dfdc                CheckFRAMSections()
                0x5004e0e4                ConvertV4FRAM_to_V5FRAM()
                0x5004e04a                ConvertV3FRAM_to_V4FRAM()
                0x5004ec86                InitFRAM()
                0x5004e292                ConvertVer6RlsFRAM_to_V1FRAM()
                0x5004dfe4                FramCheck()
                0x5004e072                ConvertV2FRAM_to_V3FRAM()
                0x5004e09a                ConvertV1FRAM_to_V2FRAM()
 *fill*         0x5004ee2e        0x2 00
 .text          0x5004ee30    0x10f5e obj-WC/WebSite_cpp.o
                0x50051778                WebSite::StopIODiagnostic()
                0x50056218                WebSite::BransonFieldServiceGetDatahandler(char*, WebCommand)
                0x5004f1a8                WebSite::CheckForWebReset()
                0x5004ee46                WebSite::GenerateKey()
                0x5004f156                WebSite::CheckForWebScanCommand()
                0x5004f05e                WebSite::CheckForCycleParameterChange()
                0x5004eefa                inttoascii(unsigned int, char*, int)
                0x50050cfc                WebSite::ConfigurationAlarmPostDatahandler(char*, WebCommand)
                0x5004f7ae                WebSite::UpdateDiagnosticIO(char*)
                0x50057632                WebSite::SetupSeekPowerUpGetDatahandler(char*, WebCommand)
                0x50053aec                WebSite::SetupSeekPowerUpPostDatahandler(char*, WebCommand)
                0x50059462                GetContentType(char*)
                0x50051296                WebSite::GetFunctionString(long, long, long, char*)
                0x5004f1fe                CheckForCurrentFunction(short)
                0x5005def0                WebSite::WebGetHandler(char*, HTTPReplyHeader&)
                0x5004ef46                GetHSPercent()
                0x50051174                WebSite::FindLanguageString(unsigned long, char*, bool)
                0x5005201c                WebSite::BransonSpecialPresetGetDatahandler(char*, WebCommand)
                0x50050994                WebSite::BransonBoardTestPostDatahandler(char*, WebCommand)
                0x5004f03e                CalculateAmplitudeinPercent(short)
                0x50054408                WebSite::SetupLimitsPostDatahandler(char*, WebCommand)
                0x50055bac                WebSite::ConfigurationUserIOPostDatahandler(char*, WebCommand)
                0x5005f9ce                WebSite::BransonSecretValuesPostDatahandler(char*, WebCommand)
                0x50051c1c                WebSite::SetLanguageAndUserID(char*, WebCommand)
                0x50058118                WebSite::BransonSystemTestGetDatahandler(char*, WebCommand)
                0x50056ff4                WebSite::SetupAdvancedDiagnosticGetDatahandler(char*, WebCommand)
                0x50058f84                WebSite::DiagnosticUserIOGetDatahandler(char*, WebCommand)
                0x50052344                WebSite::BransonFieldServicePostDatahandler(char*, WebCommand)
                0x50050fc8                WebSite::DiagnosticHornSignaturePostDatahandler(char*, WebCommand)
                0x5005ac64                WebSite::DiagnosticFieldBusGetDatahandler(char*, WebCommand)
                0x500577f8                WebSite::SetupAmplitudeGetDatahandler(char*, WebCommand)
                0x5004f164                WebSite::CheckForWebScanAbortCommand()
                0x5005141c                WebSite::PrepareDiagnosticResponse(bool)
                0x5004f10c                WebSite::BransonFieldBusTestPostDatahandler(char*, WebCommand)
                0x5005cbe2                WebSite::SetupLimitsGetDatahandler(char*, WebCommand)
                0x5004f8ec                IPStrtoUint(char*)
                0x5005a938                WebSite::SetupSaveRecallGetDatahandler(char*, WebCommand)
                0x5004f1de                WebSite::CheckForManufacturingFlag()
                0x5004f738                WebSite::RestoreOutPutStatus()
                0x5004ee30                CopyLength(unsigned long, unsigned long, int)
                0x5005b82e                WebSite::ViewAlarmLogGetDatahandler(char*, WebCommand)
                0x500590ea                WebSite::ViewWeldGraphPostDatahandler(char*, WebCommand)
                0x50050824                WebSite::Tick(int)
                0x5004f68e                WebSite::DoDiagnosticLoopBackStart()
                0x500524a2                WebSite::SetupAdvancedDiagnosticPostDatahandler(char*, WebCommand)
                0x5004fd50                WebSite::DiagnosticHornSignatureGetDatahandler(char*, WebCommand)
                0x5004f550                WebSite::UpdateUser(unsigned long)
                0x50051cf0                WebSite::BransonSpecialPresetPostDatahandler(char*, WebCommand)
                0x50059750                WebSite::ConfigurationPasscodesGetDatahandler(char*, WebCommand)
                0x5005a60c                WebSite::ConfigurationSystemPostDatahandler(char*, WebCommand)
                0x500566fe                WebSite::ProcessMFSavesystemSetupCommand(char*)
                0x50058d4e                WebSite::DiagnosticUserIOPostDatahandler(char*, WebCommand)
                0x5005b504                WebSite::ViewEventLogGetDatahandler(char*, WebCommand)
                0x5005c638                WebSite::SetupSaveRecallPostDatahandler(char*, WebCommand)
                0x500517a0                WebSite::ViewSystemInfoGetDatahandler(char*, WebCommand)
                0x50058060                SetManFDefaultFromWeb()
                0x50053dec                WebSite::SetupAmplitudePostDatahandler(char*, WebCommand)
                0x5004efa6                ClearScanFlags()
                0x5004f31c                PrepareTimeStamp(char*, unsigned char&, unsigned char&, unsigned char, unsigned char, char)
                0x5004f582                WebSite::GetWebToken(char*, WebCommand)
                0x5005ab16                WebSite::ConfigurationSystemGetDatahandler(char*, WebCommand)
                0x50059220                WebSite::ConfigurationAlarmGetDatahandler(char*, WebCommand)
                0x50056c80                WebSite::ProcessScanCommand(char*, WebCommand)
                0x500598c4                WebSite::ConfigurationIPSetupGetDatahandler(char*, WebCommand)
                0x5005d772                WebSite::SetLanguageFileBuffer(Language)
                0x5004f1b6                WebSite::ResetWebResetFlag()
                0x5005f742                WebSite::BransonAdvRnDTestGetDatahandler(char*, WebCommand)
                0x5005ef10                WebSite::ConfigurationIPSetupPostDatahandler(char*, WebCommand)
                0x5004efc6                CalculateFreqinPercent(unsigned long)
                0x5005f2e6                SetDCPTimingParam(WebCommand)
                0x5005d81c                WebSite::WebPostHandler(char*, char*, HTTPReplyHeader&)
                0x50050ef4                WebSite::PostResponse(char*, unsigned long)
                0x50052e06                WebSite::SetupAdvancedPostDatahandler(char*, WebCommand)
                0x5004f172                WebSite::ResetScanFlags(bool)
                0x50055296                WebSite::SetupWeldPostDatahandler(char*, WebCommand)
                0x5004fcb2                WebSite::BransonBoardTestGetDatahandler(char*, WebCommand)
                0x5005911e                WebSite::ConfigurationRFSwitchGetDatahandler(char*, WebCommand)
                0x5005f3de                WebSite::BransonAdvRnDTestPostDatahandler(char*, WebCommand)
                0x5004f130                WebSite::ResetTestFlag()
                0x500501be                WebSite::DiagnosticSeekGetDatahandler(char*, WebCommand)
                0x5004f01e                CalculatePowerinPercent(short)
                0x5005bc6e                WebSite::SetupAdvancedGetDatahandler(char*, WebCommand)
                0x5005d244                FormatCycleResults()
                0x5005d388                WebSite::DownLoadRequest(char*, char*)
                0x5004f114                WebSite::CheckForWebTestCommand()
                0x5005fbf8                WebSite::BransonSecretValuesGetDatahandler(char*, WebCommand)
                0x5004f5de                WebSite::HandleInitiateUpload()
                0x5005b000                WebSite::ViewHistoryGetDatahandler(char*, WebCommand)
                0x5004ee6e                SetupMinMaxPresetIndexes()
                0x50050ba2                WebSite::ConfigurationRFSwitchPostDatahandler(char*, WebCommand)
                0x50059f10                WebSite::ConfigurationUserIOGetDatahandler(char*, WebCommand)
                0x500568b2                WebSite::DiagnosticSeekPostDatahandler(char*, WebCommand)
                0x500580e4                GetCurrentStateOnManufacturing()
                0x5004f19a                WebSite::CheckForDiagnosticFlag()
                0x50050ac2                WebSite::ProcessMFStartStopCommand(char*)
                0x5004eed2                WebSite::GetUserID()
                0x50050258                WebSite::ViewWeldGraphGetDatahandler(char*, WebCommand)
                0x5004f1d0                WebSite::CheckForMFBoardTestFlag()
                0x50057bcc                WebSite::SetupWeldGetDatahandler(char*, WebCommand)
                0x5005d606                WebSite::WebFileUploadHandler(char*, int, char*, char*)
                0x5004f602                WebSite::DoDiagnosticLoopBack()
                0x50056660                SendRTCSyncCommandToDCP()
                0x5005dd64                WebSite::InitWebSite(long, long)
                0x50059560                WebSite::ConfigurationPasscodesPostDatahandler(char*, WebCommand)
                0x5005a8b4                SetDefaultTime(PRESET_NUMBER)
                0x5004f95e                WebSite::BransonFieldBusTestGetDatahandler(char*, WebCommand)
                0x50059334                ReplaceURLSpecialChar(char*, char const*)
 *fill*         0x5005fd8e        0x2 00
 .text          0x5005fd90      0xc02 obj-WC/UploadFirmWareTask_cpp.o
                0x50060136                UploadFirmware::ProgramFlash(char*, long, FlashArea)
                0x5006004a                UploadFirmware::ProgramFirmware(FileType, char*, long, char*)
                0x500603c2                UploadFirmware::SendDCPdata(char*, long, BinFileType)
                0x5005ffae                UploadFirmware::RestoreDataToFRAM(char*, long)
                0x50060400                UploadFirmware::Run()
                0x500607ee                UploadFirmware::UploadFirmware()
                0x500608c0                UploadFirmware::UploadFirmware()
                0x50060396                UploadFirmware::SendLCDAdata(char*, long)
                0x5005fd90                UploadFirmware::CopyDataToFRAM(char*, long)
 *fill*         0x50060992        0x2 00
 .text          0x50060994      0x434 obj-WC/WeldResultHistory_cpp.o
                0x50060994                GetWeldHistory(WebHistoryData*, long)
                0x50060a70                WriteWeldHistory()
 .text          0x50060dc8      0xaf6 obj-WC/ScanResDetect_cpp.o
                0x50061804                DetectResonance()
                0x50060e78                LineFit(unsigned long*, short*, unsigned short)
                0x50061240                LowestImpedencePoint(unsigned short)
                0x50060e20                ApplyFilter(short*, short)
                0x50060dc8                FindZeroCrossing(short*, short)
                0x5006134c                FindResonanceInCluster()
                0x50061134                HighestImpedencePoint(unsigned short)
 *fill*         0x500618be        0x2 00
 .text          0x500618c0      0x7a0 obj-WC/FirmWareUpgrade_cpp.o
                0x50061d18                FirmWareUpgradeTask::FUWriteQueue(FirmwareUpgradeCommand const&)
                0x50061952                FirmWareUpgradeTask::SendFileToLCDA(unsigned char*, long)
                0x50061a44                FirmWareUpgradeTask::SendFileToNode(ip_addr, unsigned short, unsigned char*, long, FirmWareUpgradeTask::FUPacketType)
                0x500618c0                FirmWareUpgradeTask::SendFirmwareUpgradeProgressToWebsite(char*)
                0x50061bdc                FirmWareUpgradeTask::FirmWareUpgradeTask(int)
                0x50061dee                FirmWareUpgradeTask::Run()
                0x50061c7a                FirmWareUpgradeTask::FirmWareUpgradeTask(int)
                0x500618c8                FirmWareUpgradeTask::CreateUpgradeSocket()
 .text          0x50062060      0x330 obj-WC/RTClock_cpp.o
                0x50062234                RTClock::GetCurrentTime(RTCTime*)
                0x50062106                RTClock::SetCurrentTime(RTCTime*)
                0x500620b2                RTClock::Bcd2Bin8(unsigned char)
                0x5006230a                RTClock::InitRTC()
                0x50062060                RTClock::Bin2Bcd8(unsigned char)
 .text          0x50062390     0x1c08 obj-WC/UserIO_cpp.o
                0x50063bbe                UserIO::ConfigureBransonDefaultUserIOs()
                0x50062b44                UserIO::GetAnalogOUTPutValue(ANALOG_OUTPUTS)
                0x500627e8                UserIO::SetActuaterHome(bool)
                0x50062f82                UserIO::ReadInputs()
                0x50062678                UserIO::CheckForCycleRunning()
                0x50062e48                UserIO::CheckForHornScan()
                0x50062390                InitExternalToFreqOffsetMapping()
                0x500626e4                UserIO::SetSeekOut(bool)
                0x50063e02                UserIO::ResetUserIO()
                0x5006284e                UserIO::SetWeldCycleComplete(bool)
                0x50062976                UserIO::SetOutputAmplitude(long)
                0x50062e1c                UserIO::CheckForHornDownMode()
                0x50062c72                UserIO::GetDigINPutValue(DIGITAL_INPUTS)
                0x50062aa0                UserIO::SetCustomAlarmOutput(bool)
                0x50062758                UserIO::SetAfterBurstTimeActive(bool)
                0x50062722                UserIO::SetAmlitudeDecay(bool)
                0x50062e5e                UserIO::CheckForGroundDetect()
                0x5006276a                UserIO::SetPlusTimeLimitAlarm(bool)
                0x50062ea0                CheckForLoadNewPreset()
                0x50062dca                UserIO::CheckForULS()
                0x50062ef2                UserIO::CheckForLockOutChange()
                0x50062520                UserIO::WriteOutputs()
                0x50062a36                UserIO::GetDigitaloutputActivityStatus(long)
                0x500633fa                UserIO::AssignAnalogOutputFunction(ANALOG_OUTPUTS, unsigned short, bool)
                0x50062afc                UserIO::SetAnalogOUTPutValue(ANALOG_OUTPUTS, long)
                0x500627a0                UserIO::SetMinusEnergyLimitAlarm(bool)
                0x50063270                UserIO::ClearFRAMIOConfig()
                0x500626b2                UserIO::SetGenAlarm(bool)
                0x500626d2                UserIO::SetStatusOutput(bool)
                0x500625f6                UserIO::CheckForCableDetect()
                0x50062de0                UserIO::CheckForStartCycle()
                0x50062f1e                UserIO::CheckForExternalStart()
                0x50062c26                UserIO::GetDigOutPutValue(DIGITAL_OUTPUTS)
                0x500628a8                UserIO::SetStartSignalRelease(bool)
                0x5006397a                UserIO::ConfigureRFDefaultUserIOs()
                0x50062ab2                ClearAlarmOutputs()
                0x500629ae                UserIO::SetOutputFrequency(long)
                0x500631ea                UserIO::CheckForExtRecallPreset()
                0x5006278e                UserIO::SetPlusEnergyLimitAlarm(bool)
                0x50062860                UserIO::SetPreloadedCycleCountReached(bool)
                0x50062df6                UserIO::CheckForPartInPlace()
                0x50062698                UserIO::SetSonicsActive(bool)
                0x500634b4                UserIO::AssignDigitalInputFunction(DIGITAL_INPUTS, unsigned short, bool)
                0x50062710                UserIO::SetPresetChanged(bool)
                0x50063ce0                UserIO::ConfigureUserIOsFromFRAM()
                0x50063a9c                UserIO::ConfigureActuatorDefaultUserIOs()
                0x50062666                UserIO::SetCycleStartOut(bool)
                0x50062624                UserIO::InitCableDetectEnabledFlag()
                0x5006277c                UserIO::SetMinusTimeLimitAlarm(bool)
                0x500627fa                UserIO::SetRfselect(int)
                0x50062db4                UserIO::CheckForActuatorPresent()
                0x50062a06                UserIO::SetAutomationOP1(long)
                0x50062d3c                UserIO::CheckSignalActive(bool)
                0x500623f6                UserIO::DigFilterMIAAin(long, ANALOG_INPUTS)
                0x500627d6                UserIO::SetOverloadAlarm(bool)
                0x50062edc                UserIO::CheckForSonicsDisable()
                0x500624fc                UserIO::WriteDigitalIO(long)
                0x50062a18                UserIO::GetDigitalinputActivityStatus(long)
                0x50062eb6                UserIO::CheckForInterLockInPlace()
                0x50062932                UserIO::GetCustomAIn2()
                0x50062992                UserIO::SetOutputPower(long)
                0x500627b2                UserIO::SetPlusPeakPowerLimitAlarm(bool)
                0x50062612                UserIO::SetCableDetectEnabledFlag(bool)
                0x500628ba                UserIO::GetExternalAmplitude()
                0x50062bdc                UserIO::SetDigOutPutValue(DIGITAL_OUTPUTS, bool)
                0x50062f34                UserIO::CheckForLoadNewPreset()
                0x50063844                UserIO::ConfigureCustomDefaultUserIOs()
                0x50062872                UserIO::SetInHorndownMode(bool)
                0x50062f6c                UserIO::CheckForExternalAmpStep()
                0x50062686                UserIO::SetReady(bool)
                0x50062954                UserIO::GetCustomAIn1()
                0x500627c4                UserIO::SetMinusPeakPowerLimitAlarm(bool)
                0x50062da0                UserIO::CheckForTrigger()
                0x50062b90                UserIO::GetAnalogINPutValue(ANALOG_INPUTS)
                0x50062e32                UserIO::CheckForExternalTest()
                0x50062746                UserIO::SetAfterBurstDelayActive(bool)
                0x50062cec                UserIO::CheckForRfswitchfeedback()
                0x50062cbe                UserIO::GetAlarmStatus()
                0x50062896                UserIO::SetAmplitude1_2(bool)
                0x50063290                UserIO::AssignAnalogInputFunction(ANALOG_INPUTS, unsigned short, bool)
                0x50062d8c                UserIO::CheckForRfStatusfeedback()
                0x50062f08                UserIO::CheckForExternalSonicsDelay()
                0x50062734                UserIO::SetHoldTimeActive(bool)
                0x50062e8a                UserIO::CheckForCycleAbort()
                0x5006247c                UserIO::ReadDigitalIO()
                0x50062884                UserIO::SetEndOfHoldTime(bool)
                0x500628f4                UserIO::GetExternalFrequency()
                0x50063e30                UserIO::InitUserIO()
                0x50062e74                UserIO::CheckForMemoryClear()
                0x50062604                UserIO::CheckForCableDetectEanbled()
                0x500626fe                UserIO::SetCycleOK(bool)
                0x50062a54                UserIO::FanEnable(bool)
                0x500626c4                UserIO::GetReadyFlag()
                0x500636c4                UserIO::AssignDigitalOutputFunction(DIGITAL_OUTPUTS, unsigned short, bool)
 .text          0x50063f98      0x250 obj-WC/StateMachineDrv_cpp.o
                0x50063fc8                SelectWeldSequence()
                0x5006419a                PrintStateName()
                0x500640ba                Restart()
                0x50063fa8                ResetStateMachine()
                0x50063f98                StartStateMachine()
                0x500640a8                SelectWCSequence()
                0x500640ca                StateMachine()
 .text          0x500641e8      0x726 obj-WC/ModBusRcvTask_cpp.o
                0x50064346                ModBusRcvTask::CreateAndBindSocket()
                0x500643d8                ModBusRcvTask::ModBusRcvTask(long)
                0x50064430                ModBusRcvTask::ModBusRcvTask(long)
                0x50064488                ModBusRcvTask::ProcessModBusReply(long)
                0x5006431a                ModBusRcvTask::CloseSocket()
                0x500642d8                ModBusRcvTask::Block()
                0x50064704                ModBusRcvTask::Run()
 *fill*         0x5006490e        0x2 00
 .text          0x50064910     0x3212 obj-WC/ReceiveCommandHandler_cpp.o
                0x50067754                ReceiveCommandHandler::Run()
                0x50064958                ReceiveCommandHandler::xtoi(char)
                0x50064dfc                ReceiveCommandHandler::GetMaxParameterValues()
                0x500679fe                ReceiveCommandHandler::ReceiveCommandHandler()
                0x50065200                ReceiveCommandHandler::ProcessRegUpdateCommand(DataReg, unsigned long)
                0x50066d4e                ReceiveCommandHandler::TransmitPollingCommandReply(unsigned char, unsigned short)
                0x50064910                ReceiveCommandHandler::HexToAscii(void*, int, unsigned char*)
                0x500673c2                ReceiveCommandHandler::ProcessCommand(unsigned char*)
                0x50066bd8                ReceiveCommandHandler::PrepareDCXStatusByte()
                0x500664a0                ReceiveCommandHandler::UpdateLCDData()
                0x50065030                ReceiveCommandHandler::Tick()
                0x50064a20                ReceiveCommandHandler::VerifyCheckSum(unsigned char*, unsigned char)
                0x50067a90                ReceiveCommandHandler::ReceiveCommandHandler()
                0x50066a5a                ReceiveCommandHandler::TransmitAsciiCommand(SerialCommand*)
                0x5006646a                ReceiveCommandHandler::SetAllColdStartParameter()
                0x50065008                UpdateMinMaxLCDPreset(PSUPDATESPECIAL)
                0x500649c4                ReceiveCommandHandler::AsciiToHex(void*, int, unsigned char*)
                0x50064f9c                ReceiveCommandHandler::CheckIfChanged(int)
                0x50064c68                ReceiveCommandHandler::GetMinParameterValues()
                0x50064ac0                ReceiveCommandHandler::GetDefaultParameterValues()
                0x50065160                ReceiveCommandHandler::SetDefaultIPSetUp()
 *fill*         0x50067b22        0x2 00
 .text          0x50067b24      0xcfe obj-WC/ModBusSendTask_cpp.o
                0x50067c3e                MBRegHoldingCB(unsigned char*, unsigned short, unsigned short, MBRegisterMode, unsigned char*, int)
                0x5006804e                ModBusSendTask::NotifyReadWriteEvent(long)
                0x50067fbc                ModBusSendTask::CreateAndBindSocket()
                0x50067f4a                ModBusSendTask::NonBlock()
                0x500680e6                ModBusSendTask::ModBusSendTask(long)
                0x50067f90                ModBusSendTask::CloseSocket()
                0x50067db8                ModBusSendTask::ReadWriteMultipleRegisters(unsigned long, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
                0x50068582                ModBusSendTask::Run()
                0x500682ba                ModBusSendTask::StartPowerupCommunicationWithDCP()
                0x50067bee                ModBusSendTask::Tick()
                0x500681d0                ModBusSendTask::ModBusSendTask(long)
                0x50067b24                ModBusSendTask::BuildQueryBasis(unsigned long, unsigned long, unsigned short, unsigned short, unsigned short, unsigned short)
 *fill*         0x50068822        0x2 00
 .text          0x50068824      0xa6a obj-WC/FieldBus_cpp.o
                0x50068824                FieldBus::PrepareStatusSignal()
                0x50068c06                FieldBus::CheckForRfswitchfeedback()
                0x50068cc0                FieldBus::ProcessControlSignal()
                0x50068c3c                FieldBus::GetExternalAmplitude()
                0x50068c6c                FieldBus::GetExternalFrequencyOffset()
                0x50068caa                FieldBus::CheckForMemoryClear()
                0x5006906c                FieldBus::RegisterApp(void*)
                0x50068bfe                FieldBus::ProtocolSpecificInit(void*)
                0x50069226                FieldBus::FieldBus()
                0x50068e82                FindFieldBusType()
                0x50068c14                FieldBus::SetRfSelect(unsigned short)
                0x500691be                FieldBus::FieldBus()
                0x50069044                FieldBus::ReadCommonStatus(void*)
                0x50068cb8                FieldBus::GetFaultData(unsigned long)
 *fill*         0x5006928e        0x2 00
 .text          0x50069290      0xabc obj-WC/NRTModbusTask_cpp.o
                0x50069370                NRTModbus::Run()
                0x50069300                NRTModbus::NRTModbus()
                0x50069290                NRTModbus::NRTModbus()
 .text          0x50069d4c     0x2e06 obj-WC/ProfiBus_cpp.o
                0x50069f86                ProfiBus::ProcessAnalogOutput()
                0x5006beb0                ProfiBus::UpdateOutputCyclic(unsigned char*)
                0x5006cb1c                ProfiBus::ProfiBus()
                0x5006bb3c                ProfiBus::ProcessMailBox(CIFX_PACKETtag*)
                0x5006ac22                ProfiBus::ProcessPKW()
                0x5006a080                HandleValue(unsigned short, ParaType, unsigned short, unsigned char, void*)
                0x5006b9ec                ProfiBus::GetWarmStartParams(CIFX_PACKETtag*)
                0x5006cae6                ProfiBus::ProfiBus()
                0x5006c308                ProfiBus::UpdateInputCyclic(unsigned char*)
                0x50069d4c                ProfiBus::HandleNewParameterData()
                0x50069f20                ProfiBus::ProcessAnalogInput()
                0x5006aeb2                ProfiBus::HandleNewConfigData()
                0x5006abfa                ProfiBus::ReadExtendedStatus(void*)
 *fill*         0x5006cb52        0x2 00
 .text          0x5006cb54     0x255a obj-WC/EthernetIP_cpp.o
                0x5006db3e                EthernetIP::RegisterVendorSpecificClass(void*, unsigned long, bool)
                0x5006cf38                EthernetIP::RegisterService(void*, unsigned long)
                0x5006cb66                HandleValueEthIP(unsigned long, unsigned long, unsigned char, void*, unsigned long*)
                0x5006d402                EthernetIP::EthernetIP()
                0x5006d1d0                EthernetIP::UpdateOutputCyclic(unsigned char*)
                0x5006cb54                EthernetIP::CheckConnIndicationDetails(EIP_OBJECT_PACKET_CONNECTION_IND_Ttag*)
                0x5006dca8                EthernetIP::ProtocolSpecificInit(void*)
                0x5006cffa                EthernetIP::RegisterForMSNSChange(void*)
                0x5006d24c                EthernetIP::UpdateInputCyclic(unsigned char*)
                0x5006df1e                EthernetIP::ProcessMailBox(CIFX_PACKETtag*)
                0x5006ef9c                EthernetIP::GetFaultData(unsigned long)
                0x5006d096                EthernetIP::RegisterAssembly(void*, unsigned long, unsigned long, unsigned long, unsigned long)
                0x5006d2fc                EthernetIP::EthernetIP()
                0x5006cd30                EthernetIP::ProcessExplicitMsgRequest(unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long*)
                0x5006dd3a                EthernetIP::HandleResetServiceIndication(EIP_OBJECT_PACKET_RESET_IND_Ttag*)
                0x5006d508                EthernetIP::GetWarmStartParams(CIFX_PACKETtag*)
                0x5006cb5e                EthernetIP::ReadExtendedStatus(void*)
 *fill*         0x5006f0ae        0x2 00
 .text          0x5006f0b0      0x9b6 obj-WC/WelderSearchTask_cpp.o
                0x5006f5d4                WelderSearchTask::CloseSocket()
                0x5006f0b0                WelderSearchTask::SendDcxMdata(unsigned long)
                0x5006f7b6                WelderSearchTask::PrepareFDSets()
                0x5006f830                WelderSearchTask::Run()
                0x5006f600                WelderSearchTask::CreateAndBindSocket()
                0x5006f692                WelderSearchTask::WelderSearchTask(long)
                0x5006f56e                WelderSearchTask::Poll()
                0x5006f6de                WelderSearchTask::WelderSearchTask(long)
                0x5006f72a                WelderSearchTask::Tick()
                0x5006f5ae                WelderSearchTask::NonBlock()
 *fill*         0x5006fa66        0x2 00
 .text          0x5006fa68     0x1354 obj-WC/VerifyPreset_cpp.o
                0x5006fa68                VerifyPreset(bool)
 .text          0x50070dbc      0x100 obj-WC/ObjDictionary_cpp.o
                0x50070dcc                ObjDictionary::ObjDictionary(MODBusODEntry const*)
                0x50070ddc                ObjDictionary::FindOdEntry(unsigned short)
                0x50070e3c                ObjDictionary::FindOdEntry(unsigned short, unsigned short*)
                0x50070dbc                ObjDictionary::ObjDictionary(MODBusODEntry const*)
 .text          0x50070ebc       0x82 obj-WC/counter_cpp.o
                0x50070ebc                ResetManFErrorCounter(bool)
                0x50070f04                ReadManFErrorCounter()
                0x50070f16                IncrementManFErrorCycleCounter()
 *fill*         0x50070f3e        0x2 00
 .text          0x50070f40     0x1090 obj-WC/FieldbusTask_cpp.o
                0x5007195c                FieldbusTask::FieldbusTask(FieldBus*)
                0x50070f8e                FieldbusTask::UpdateMailBox(CHANNELINSTANCEtag*)
                0x50071824                FieldbusTask::DPMMain()
                0x500710c0                FieldbusTask::UpdateIOImage(CHANNELINSTANCEtag*)
                0x50071672                FieldbusTask::GetVersionInfo()
                0x50070f40                BasicDPRAMTest()
                0x50071a5e                FieldbusTask::FieldbusTask(FieldBus*)
                0x50071b60                FieldbusTask::Run()
                0x500714b6                FieldbusTask::SendWarmStart()
                0x500715b4                FbTaskMSTick()
 .text          0x50071fd0     0x45be obj-WC/StateFunctions_cpp.o
                0x500743fe                HoldOffTimeExit()
                0x50073d28                ErrorExit()
                0x500721e6                EnergyBrakeEntry()
                0x50072c4e                PreReadyPassNoAct()
                0x50074e96                ReadyEntry()
                0x50075164                ReadyPassACT()
                0x50074ac8                PreReadyPassAct()
                0x50071fd8                PreReadyEntry()
                0x50074426                SonicsEntry()
                0x50074ce0                UpdatePresetPassAct()
                0x50072016                ClearMemoryFrequency()
                0x500735fa                ScanPass()
                0x50072260                HoldOffTimePassNoAct()
                0x50075fb2                CheckLimitsPass()
                0x500746a8                WaitforULSTRSEntry()
                0x500724e6                HoldOffTimePassAct()
                0x50072236                EnergyBrakeExit()
                0x5007409a                AfterBurstEntry()
                0x50072f4c                MfgCycleRunPass()
                0x5007205e                CheckForCustomCutoffSetup()
                0x500720ac                UpdatePresetExit()
                0x50072006                PreReadyExit()
                0x500746ea                CheckCustomCutoffs()
                0x50075acc                SeekPass()
                0x50073140                EnergyBrakePassNoAct()
                0x50072162                SonicsExit()
                0x5007321c                ScanEntry()
                0x50072998                ActSonicCheckGDDetctMode()
                0x50074f0c                ReadyPassNoACT()
                0x50074744                SonicsPassNoAct()
                0x50074dd2                ReadyExit()
                0x50073d6a                ErrorPass()
                0x50075594                PowerUpPass()
                0x50072288                SeekExit()
                0x500726b4                SelectRFRelayIO(unsigned short)
                0x500736fa                TestExit()
                0x50072370                CheckforRFSwitching()
                0x50074bee                UpdatePresetPassNoAct()
                0x50072590                SelectRFRelayFB(unsigned short)
                0x5007244c                HandleRFSwitching()
                0x500748e8                WaitforULSTRSPass()
                0x50073188                EnergyBrakePassAct()
                0x50074252                AfterBurstExit()
                0x500727ec                NoActSonicCheckGDDetctMode()
                0x50074636                SonicsEntryAct()
                0x50076290                UpdatePresetEntry()
                0x500742a8                CheckLimitsExit()
                0x50072eea                MfgCycleExit()
                0x50072cf6                CheckForStepping()
                0x50074004                CheckLimitsEntry()
                0x5007252e                ActSonicCheckTimeEngPwrMode()
                0x5007329c                ScanExit()
                0x50072122                NoActSonicCheckTimeEngPwrMode()
                0x50073c82                SeekEntry()
                0x50071fd0                Nothing()
                0x50073f6e                CycleAbortEntry()
                0x500720ee                NoActSonicCheckContMode()
                0x50072b68                CheckMemClearReset()
                0x500758dc                TestPass()
                0x500743b2                HoldOffTimeEntry()
                0x50075e56                CycleAbortPass()
                0x50072e40                CheckForPresetChange()
                0x500722b6                MfgCycleStartEntry()
                0x500745d0                SonicsEntryNoAct()
                0x50073898                TestEntry()
                0x50073e82                CycleAbortExit()
                0x500720c2                ActSonicCheckContMode()
                0x50074816                SonicsPassAct()
                0x50075494                PowerUpEntry()
                0x50072be0                CheckForNoInput()
                0x50074106                AfterBurstPass()
                0x500757dc                ErrorEntry()
 *fill*         0x5007658e        0x2 00
 .text          0x50076590       0x8a obj-WC/StateTable_cpp.o
 *fill*         0x5007661a        0x2 00
 .text          0x5007661c      0x72c obj-WC/Alarms_cpp.o
                0x50076670                CreateAlarm()
                0x50076932                CreateDCPGeneralAlarm(unsigned long)
                0x50076774                AlarmQueueWrite(Alarms)
                0x500769aa                CreateOverloadAlarm(unsigned long)
                0x5007661c                GetAlarmStringFromID(Alarms)
                0x500766d8                PrepareAlarmData()
 .text          0x50076d48     0x35e2 obj-WC/FieldbusTable_cpp.o
                0x50077ce6                ParamAccessPostCallback(unsigned short, void*, long, unsigned char, unsigned long*)
                0x50076d84                InitBaseIndexes()
                0x5007a260                SetMinMaxParamForFbTable(PSUPDATESPECIAL)
                0x5007982e                WriteParamEthIP(bool, void*, unsigned long*, unsigned long, unsigned long)
                0x50079526                ReadParam(ParaType, ParamSpecialAccess, void*, unsigned long, unsigned short)
                0x50079d94                WriteParam(ParaType, ParamSpecialAccess, bool, void*, unsigned long, unsigned short)
                0x50076fb6                GetParameterIndexInTable(unsigned short)
                0x500791a6                ReadParamEthIP(void*, unsigned long*, unsigned long, unsigned long)
                0x50078196                ParamAccessPreCallback(unsigned short, void*, long, unsigned char, unsigned long*)
 *fill*         0x5007a32a        0x2 00
 .text          0x5007a32c      0x138 obj-WC/ShutDownTask_cpp.o
                0x5007a3c2                ShutDownTask::ShutDownTask()
                0x5007a3fa                ShutDownTask::Run()
                0x5007a32c                ShutDownTask::ShutDown()
                0x5007a38a                ShutDownTask::ShutDownTask()
 .text          0x5007a464      0x2f8 obj-WC/ExternalStatusTask_cpp.o
                0x5007a6ee                ExternalStatusTask::ExternalStatusTask()
                0x5007a680                ExternalStatusTask::ExternalStatusTask()
                0x5007a464                ExternalStatusTask::Tick()
                0x5007a554                ExternalStatusTask::Run()
 .text          0x5007a75c     0x4072 obj-WC/BDMTask_cpp.o
                0x5007c2a8                LoopBkgdDir()
                0x5007befc                LoopBkgd()
                0x5007be00                LoopReset()
                0x5007bb3e                BdmTest()
                0x5007c48c                BdmProgram(unsigned char*, int)
                0x5007c0a4                LoopInput()
                0x5007a764                WriteSomeMoreData(BDM08)
                0x5007ba5e                BdmTestBreakpoint(BDM08&, int)
                0x5007a75c                Expect(int, int)
                0x5007bb04                BdmBackground(BDM08&)
 *fill*         0x5007e7ce        0x2 00
 .text          0x5007e7d0     0x1450 obj-WC/BDM08_cpp.o
                0x5007ef38                BDM08::ReadBkpt()
                0x5007ec94                BDM08::Transfer(unsigned char*, int, unsigned char*, int)
                0x5007ef82                BDM08::Background()
                0x5007f130                BDM08::VerifyHXBlank(int, int)
                0x5007f2e8                BDM08::WriteA(int)
                0x5007fa22                BDM08::Reset10usBkgd()
                0x5007e7e8                BDM08::Send(int)
                0x5007ead8                BDM08::Recv(unsigned char*, int)
                0x5007f408                BDM08::Sync()
                0x5007f490                BDM08::WriteCCR(int)
                0x5007e7d0                BDM08::~BDM08()
                0x5007fae2                BDM08::Reset()
                0x5007f59c                BDM08::WritePC(int)
                0x5007f552                BDM08::ReadSP()
                0x5007e7e0                BDM08::Expect(int, int)
                0x5007efb8                BDM08::Go()
                0x5007f036                BDM08::ReadHX()
                0x5007ed1e                BDM08::WriteByte(int, int)
                0x5007ee16                BDM08::ReadByte(int, unsigned char*, int)
                0x5007f326                BDM08::ReadA()
                0x5007fb6c                BDM08::BDM08()
                0x5007e8e0                BDM08::SyncCycle(int)
                0x5007edd2                BDM08::ReadByte(int)
                0x5007f230                BDM08::WriteNext(int, unsigned char)
                0x5007f3d8                BDM08::PrepareProgram()
                0x5007f948                BDM08::ProgramFlashByte(int, int)
                0x5007f78a                BDM08::ProgramFlash(int, unsigned char*, int)
                0x5007f1b0                BDM08::WriteNext(int, unsigned char*, int)
                0x5007f916                BDM08::ProgramFlashWord(int, int)
                0x5007f96e                BDM08::BDM08()
                0x5007f4ce                BDM08::ReadCCR()
                0x5007e7d8                BDM08::~BDM08()
                0x5007ee8e                BDM08::PrepareCalculateChecksum()
                0x5007eef0                BDM08::WriteBkpt(int)
                0x5007f360                BDM08::WriteSCR(int)
                0x5007f50a                BDM08::WriteSP(int)
                0x5007f080                BDM08::VerifyHX(int, unsigned char*, int)
                0x5007f5e4                BDM08::ReadPC()
                0x5007f258                BDM08::ReadNext(int, unsigned char*, int)
                0x5007efee                BDM08::WriteHX(int)
                0x5007ed66                BDM08::WriteByte(int, unsigned char*, int)
                0x5007f39e                BDM08::ReadSCR()
                0x5007f62e                BDM08::CalculateChecksum(int, int)
 .text          0x5007fc20     0x1f6c obj-WC/DcxManagerHandler_cpp.o
                0x50081150                JSONAlarm::CreateJsonObj()
                0x50081b2a                ClearJsonObjects()
                0x500803d4                WritePresetForDCXM(bool)
                0x5007fc7e                DcxMangerHandler::JSONSetHandler(ip_addr, char*, char*)
                0x50081920                WriteWeldResultForDCXM(WeldResult*, unsigned long)
                0x5008010e                WriteWeldDatForDCXM(HornWeldPointData*, unsigned long)
                0x500811a4                JSONWeldResult::CreateJsonObj()
                0x50081780                JSONHandler(char*, HTTPReplyHeader&, char*, ip_addr)
                0x50081480                DcxMangerHandler::InitDcxMangerHandler(long, long)
                0x500810d0                CycleDataSend(ip_addr, long*)
                0x5007fcb6                DcxMangerHandler::JSONStopHandler(ip_addr, char*)
                0x500814d2                DcxMangerHandler::JSONGetHandler(ip_addr, char*)
                0x5007fcf6                InitJsonObjsKeys()
                0x5007fef6                WriteAlarmForDCXM(long*, bool)
                0x50081242                JSONWeldData::CreateJsonObj()
                0x50081204                JSONPreset::CreateJsonObj()
                0x5007fff6                WriteCycleCounterForDCXM(bool, bool, long, bool, long*, bool)
                0x50081368                JSONCycleNumber::CreateJsonObj()
 .text          0x50081b8c      0x5aa C:/RTOS-WC/libRTOS-WC.a(Board_cpp.o)
                0x50081f74                Board::UpdateLEDs(unsigned char*)
                0x50081ed4                Board::FreeAlignedNoCache(void*)
                0x50081b8c                Board::SetupforSensingVoltageonAA13andAB14()
                0x50081eba                Board::SetupSlowCS8bit(int, int, void volatile*)
                0x50081dbe                Board::StopTimer(int)
                0x50081e4a                Board::GetSPI(int, int, int)
                0x50081ca0                Board::InitProfilerTimer(int)
                0x50081ef2                Board::AllocAlignedNoCache(unsigned long, int)
                0x50081dca                Board::StartTimer(int)
                0x50081c36                Board::InitRTC()
                0x50081fea                Board::Init(bool)
                0x50081dd6                Board::InstallTimer(int, void (*)(), int)
                0x50081f8e                Board::CheckforVoltageSignalonAB14Resistor4()
                0x50081c48                Board::InitDMATimer(int)
                0x50081c3e                Board::GetRTCTime()
                0x50081fbc                Board::CheckforVoltageSignalonAA13Resistor3()
                0x50081bdc                Board::EnableWatchDog()
                0x50081d4a                Board::GetI2C(int, int, int)
 *fill*         0x50082136        0x2 00
 .text          0x50082138      0x13e C:/RTOS-WC/libRTOS-WC.a(LED_cpp.o)
                0x50082156                LED::Set(int, int)
                0x50082138                LED::Init()
                0x5008226e                LED::SetAll(unsigned char*)
 *fill*         0x50082276        0x2 00
 .text          0x50082278       0x2e C:/RTOS-WC/libRTOS-WC.a(BoardFlash_cpp.o)
                0x50082278                Board::GetFlash()
 *fill*         0x500822a6        0x2 00
 .text          0x500822a8      0x46c C:/RTOS-WC/libRTOS-WC.a(54455_CPU_cpp.o)
                0x500822a8                CPU::InstallTaskSwitchRoutine(void (*)())
                0x50082346                CPU::Restart()
                0x5008235c                CPU::ClearExternalInterrupt(int)
                0x50082608                CPU::SetupChipSelect(int, int, int, void volatile*)
                0x50082426                CPU::InstallRtosTimer(int, void (*)(), int)
                0x50082398                CPU::DisableExternalInterrupt(int)
                0x500822ba                CPU::DelayMs(int)
                0x500822f8                CPU::DelayUs(int)
                0x50082480                CPU::SetupHandler(void (*)(int, void*), CpuInterrupt, int, int, int)
                0x500823e2                CPU::EnableExternalInterrupt(int)
                0x50082568                CPU::InitExternalInterrupt(void (*)(int, void*), int, int, int, CpuInterruptMode, bool)
 .text          0x50082714      0xe8a C:/RTOS-WC/libRTOS-WC.a(54455_Exception_cpp.o)
                0x50082714                Exception::Init()
                0x50082730                Exception::DefaultHandler(int, void*)
                0x500833fe                Exception::FirstHandler(void*)
                0x500833c2                Exception::Set(int, void (*)(int, void*), int)
 *fill*         0x5008359e        0x2 00
 .text          0x500835a0      0x280 C:/RTOS-WC/libRTOS-WC.a(54455_Terminal_cpp.o)
                0x500835d0                Terminal::In()
                0x50083652                Terminal::Out(int)
                0x50083600                Terminal::Peek()
                0x500835a0                Terminal::OutPoll(int)
                0x5008367e                Terminal::Init()
                0x50083624                Terminal::OutPoll(char*)
 .text          0x50083820      0x58a C:/RTOS-WC/libRTOS-WC.a(54455_PIT_cpp.o)
                0x50083d50                PIT::IntHandler2(int, void*)
                0x500838dc                PIT::StartInt(int)
                0x5008389a                PIT::StopInt(int)
                0x50083842                PIT::IntHandler1(int, void*)
                0x50083ae6                PIT::PIT(int, int, int, int, void (*)(), int)
                0x50083820                PIT::ResetInt(int)
                0x50083c9e                PIT::IntHandler0(int, void*)
                0x5008392e                PIT::PIT(int, int, int, int, void (*)(), int)
                0x50083cf6                PIT::IntHandler3(int, void*)
 *fill*         0x50083daa        0x2 00
 .text          0x50083dac      0x8f6 C:/RTOS-WC/libRTOS-WC.a(54455_Serial_cpp.o)
                0x500844ac                Serial::Send(Task*, unsigned char, int)
                0x500843fc                Serial::Serial(int, int)
                0x50083dd6                Serial::EnableUARTInterrupt()
                0x50083e1e                Serial::IntHandler()
                0x50083dac                Serial::WriteIMR(int)
                0x50084086                Serial::Init(int, int, int, int, bool)
                0x5008434c                Serial::Serial(int, int)
                0x50084616                Serial::Receive(Task*, unsigned char&, int)
                0x5008401c                Serial::IntHandler(int, void*)
                0x50084562                Serial::FlushOutputBuffer()
 *fill*         0x500846a2        0x2 00
 .text          0x500846a4      0x522 C:/RTOS-WC/libRTOS-WC.a(54455_FEC_cpp.o)
                0x500846fa                FEC::~FEC()
                0x500846d0                FEC::~FEC()
                0x500846a4                FEC::IntHandler1(int, void*)
                0x50084726                FEC::FEC(int, MII*, bool, unsigned char*)
                0x500846ba                FEC::IntHandler0(int, void*)
                0x50084710                FEC::~FEC()
                0x50084976                FEC::FEC(int, MII*, bool, unsigned char*)
 *fill*         0x50084bc6        0x2 00
 .text          0x50084bc8       0x5c C:/RTOS-WC/libRTOS-WC.a(54455_Cache_cpp.o)
                0x50084bc8                Cache::Init(int, int)
 .text          0x50084c24      0x62c C:/RTOS-WC/libRTOS-WC.a(54455_MMU_cpp.o)
                0x50084cf0                MMU::Init()
                0x50084c24                MMU::Map(int, int, int, int, int, int, int, int, int, int)
                0x50085048                MMU::AccessError(void*)
                0x50084ed0                MMU::UnMap(int, int)
                0x50084f48                MMU::RemapCodeData(bool, bool)
                0x50084c7e                MMU::Map(unsigned long)
 .text          0x50085250      0x99c C:/RTOS-WC/libRTOS-WC.a(54455_DSPI_cpp.o)
                0x50085b36                DSPI::DSPI(int, int, int)
                0x5008560e                DSPI::LongWordTransfer(int, unsigned char*, int, int)
                0x500855a6                DSPI::ReadInput()
                0x500855c0                DSPI::SetSignals(int, int, int)
                0x50085250                DSPI::ConfigureSPIPins()
                0x50085b16                DSPI::~DSPI()
                0x500855da                DSPI::EnableGPIO()
                0x50085890                DSPI::EnableSPI(bool, int, int, bool, bool)
                0x50085a40                DSPI::~DSPI()
                0x50085a60                DSPI::DSPI(int, int, int)
                0x50085574                DSPI::InterruptHandler(int, void*)
                0x5008574c                DSPI::GetBaudRate(unsigned long, unsigned long, bool, bool)
                0x50085268                DSPI::SingleTransfer(int, unsigned short*, int, bool)
                0x50085404                DSPI::IntHandler()
                0x500855f4                DSPI::ReadByte(unsigned char, int)
 .text          0x50085bec      0x5b4 C:/RTOS-WC/libRTOS-WC.a(54455_I2C_cpp.o)
                0x50085c66                I2C::I2C(int, int, int, int)
                0x50085c1a                I2C::Release()
                0x50085bec                I2C::InterruptHandler()
                0x5008616e                I2C::Acquire(int)
                0x50085ec6                I2C::Read(int, int, int, unsigned char*, int&, int)
                0x50085d96                I2C::I2C(int, int, int, int)
                0x50085bf4                I2C::WaitForInterrupt()
                0x50085c40                I2C::InterruptHandler(int, void*)
                0x5008607a                I2C::Write(int, int, int, unsigned char const*, int)
 .text          0x500861a0       0x3e C:/RTOS-WC/libRTOS-WC.a(54455_CPU_asm.o)
                0x500861ba                CPU::MultiBootInit()
                0x500861a0                CPU::Init()
                0x500861d4                CPU::SwitchStack(void*)
 *fill*         0x500861de        0x2 00
 .text          0x500861e0       0x3a C:/RTOS-WC/libRTOS-WC.a(54455_Exception_asm.o)
                0x500861e0                AsmExceptionHandler
 *fill*         0x5008621a        0x2 00
 .text          0x5008621c       0x2c C:/RTOS-WC/libRTOS-WC.a(54455_MCF5445xRTOS_asm.o)
                0x5008622e                RTOS::ExecuteFirstTask()
                0x5008621c                RTOS::TaskSwitch()
 .text          0x50086248       0x6e C:/RTOS-WC/libRTOS-WC.a(MCF_ArchDefs_cpp.o)
                0x5008625a                ExitCritical(short)
                0x50086248                EnterCritical()
                0x5008629c                __cxa_pure_virtual
                0x50086294                __cxa_atexit
                0x50086268                DisableInterrupts()
                0x5008628c                __cxa_guard_release
                0x50086276                EnableInterrupts()
                0x50086284                __cxa_guard_acquire
 *fill*         0x500862b6        0x2 00
 .text          0x500862b8      0xf9e C:/RTOS-WC/libRTOS-WC.a(MCF_FecBase_cpp.o)
                0x50086582                FecBase::TxContinue()
                0x50086428                FecBase::PrintBDStatus()
                0x50086750                FecBase::Stop()
                0x5008653a                FecBase::~FecBase()
                0x5008637e                FecBase::GetLinkStatus()
                0x5008630a                FecBase::TxStop()
                0x50086516                FecBase::~FecBase()
                0x500862b8                FecBase::IrqEnable()
                0x500862dc                FecBase::IrqDisable()
                0x5008638e                FecBase::DebounceLinkStatus(bool)
                0x50086c26                FecBase::IntHandler()
                0x50087146                FecBase::Receive(unsigned char*, int)
                0x500868f2                FecBase::FecBase(int, unsigned char*)
                0x500865c2                FecBase::TxHandler()
                0x50086360                FecBase::ReleaseBD(FECBD*)
                0x5008655e                FecBase::~FecBase()
                0x500862f0                FecBase::RxContinue()
                0x50086854                FecBase::SetAddress(unsigned char const*)
                0x50086ea6                FecBase::Init(bool)
                0x50086b1e                FecBase::RxHandler()
                0x500864fc                FecBase::Resend()
                0x500863fc                FecBase::ReadLinkStatus()
                0x50086ce2                FecBase::InitBD()
                0x5008702a                FecBase::Transmit(PktBuf*, int)
                0x5008683a                FecBase::HashAddress(unsigned char const*)
                0x50086a08                FecBase::FecBase(int, unsigned char*)
 *fill*         0x50087256        0x2 00
 .text          0x50087258       0xc8 C:/RTOS-WC/libRTOS-WC.a(MCF_MemoryInit_asm.o)
                0x50087258                MemoryInit
 .text          0x50087320       0x6a C:/RTOS-WC/libRTOS-WC.a(MCF_ArchDefs_asm.o)
                0x50087320                memcpy
 *fill*         0x5008738a        0x2 00
 .text          0x5008738c      0x1d8 C:/RTOS-WC/libRTOS-WC.a(stdlib_Assert_cpp.o)
                0x5008738c                SystemCrash(char*, char*, int)
                0x50087478                AssertFailed(char*, char*, int)
 .text          0x50087564      0xd88 C:/RTOS-WC/libRTOS-WC.a(stdlib_Alloc_cpp.o)
                0x500875f2                MemHeader::FillDeallocatedData()
                0x50087a30                operator new(unsigned long)
                0x500879d8                malloc
                0x50087dd4                MemHeader::SafetyTest(bool)
                0x500882e2                operator delete(void*)
                0x5008820c                Memrealloc
                0x50087a7e                operator new[](unsigned long, char*, int)
                0x50087cb8                ShowMemory
                0x500879f2                calloc
                0x500876fc                MallocAlignedNoCache
                0x500876ae                InitMemoryAllocation
                0x500876e6                FreeAlignedNoCache
                0x500879be                mallocNoInit
                0x500882d8                operator delete[](void*)
                0x50087564                MemHeader::FillSafetyAreas(bool)
                0x50087a98                MemHeader::PTrace()
                0x50087a4a                operator new(unsigned long, char*, int)
                0x50087a64                operator new[](unsigned long)
                0x50087708                CallocAlignedNoCache
                0x50087f60                CheckMemory(char*)
                0x50087fda                free
 .text          0x500882ec      0x968 C:/RTOS-WC/libRTOS-WC.a(stdlib_PrintF_cpp.o)
                0x50088b72                putchar
                0x50088b10                printf
                0x50088bda                puts
                0x50088aa0                sprintf
                0x50088ade                pprintf
 .text          0x50088c54      0x504 C:/RTOS-WC/libRTOS-WC.a(stdlib_String_cpp.o)
                0x50088d0e                strcpy
                0x50088f88                strlower
                0x50088fc0                strrchr
                0x50088df8                stricmp
                0x50088cda                strcat
                0x50088d9c                memchr
                0x5008900c                strstr
                0x50088edc                strncmp
                0x50089102                memmove(void*, void const*, unsigned int)
                0x50089072                strncpy
                0x50088d36                memcmp
                0x500890ba                strdup
                0x50088c54                memset
                0x50088d6e                strcmp
                0x50088e6e                strnicmp
                0x50088f50                strupr
                0x50088cb6                strlen
                0x50088dd0                strchr
 .text          0x50089158      0x114 C:/RTOS-WC/libRTOS-WC.a(stdlib_StdLib_cpp.o)
                0x500891ca                xtoi
                0x5008923a                otoi
                0x50089158                atoi
 .text          0x5008926c      0x1e2 C:/RTOS-WC/libRTOS-WC.a(API_CyGOS_cpp.o)
                0x50089342                CyGOS::InstallTimer(int, void (*)(), int)
                0x50089296                CyGOS::ResetTimeSpentForTasks()
                0x5008932a                CyGOS::StopTimer(int)
                0x500892fa                CyGOS::DisableWatchDog()
                0x5008931e                CyGOS::InitWatchDog(int)
                0x50089312                CyGOS::EnableWatchDog()
                0x50089436                CyGOS::Start(int)
                0x500892a6                CyGOS::RegisterTaskLoadLogCallback(void (*)(bool))
                0x5008934e                CyGOS::Restart()
                0x5008942a                CyGOS::Stop()
                0x5008929e                CyGOS::ResetTimeSpentForInterrupts()
                0x500892b8                CyGOS::LogTaskLoad()
                0x50089306                CyGOS::KickWatchDog()
                0x50089382                CyGOS::CreateLedTasks(int, int, void (*)(int, int))
                0x50089376                CyGOS::PrintStatus(PrintStatusMode)
                0x50089442                CyGOS::Init()
                0x5008935a                CyGOS::CreateTask(Task*, int&)
                0x50089336                CyGOS::StartTimer(int)
                0x500892e4                CyGOS::ApplicationCrashCallBack()
                0x5008926c                CyGOS::GetTaskName(int)
                0x500892d2                CyGOS::RegisterAppCrashCallback(void (*)())
 *fill*         0x5008944e        0x2 00
 .text          0x50089450      0x714 C:/RTOS-WC/libRTOS-WC.a(API_TCPIP_cpp.o)
                0x50089450                CyGOS::GetNetworkInterface(int)
                0x500894b0                CyGOS::SetupInterface(int, bool, bool)
                0x50089a04                CyGOS::SetGW(int, unsigned long)
                0x5008984c                CyGOS::GetSubnetMaskStr(int)
                0x50089966                CyGOS::CreateDhcpServerTask(int, DhcpServerConfiguration&, int&)
                0x5008972a                CyGOS::GetGatewayAddress(int)
                0x50089ab0                CyGOS::SetupAddress(int, unsigned long, unsigned long)
                0x5008979a                CyGOS::GetIPAddress(int)
                0x5008951c                CyGOS::CreateTcpipTasks(int&)
                0x500898d0                CyGOS::CreateDNSServerTask(int, int&)
                0x5008988e                CyGOS::GetIPAddressStr(int)
                0x5008956a                CyGOS::AddTcpInterface(int, int&, unsigned char*)
                0x50089484                CyGOS::GetNetworkConfiguration(int)
                0x5008980a                CyGOS::GetGatewayAddressStr(int)
                0x50089a58                CyGOS::IsNetworkConfigured(int)
                0x50089762                CyGOS::GetSubnetMask(int)
                0x50089b0a                CyGOS::SetupHostName(int, char*)
                0x500896bc                CyGOS::SetEthernetLinkDebouncing(bool)
                0x500897d2                CyGOS::IsDhcpEnabled(int)
                0x500896ee                CyGOS::GetMacAddress(int)
 .text          0x50089b64      0x2fc C:/RTOS-WC/libRTOS-WC.a(API_LinkedList_cpp.o)
                0x50089be4                LinkedListBase::GetNext(void*&) const
                0x50089b88                LinkedListBase::GetCount() const
                0x50089c80                LinkedListBase::RemoveTail()
                0x50089d4a                LinkedListBase::~LinkedListBase()
                0x50089cf4                LinkedListBase::AddHead(void*)
                0x50089b76                LinkedListBase::LinkedListBase()
                0x50089bc6                LinkedListBase::GetTail() const
                0x50089e06                LinkedListBase::AddTail(void*)
                0x50089c12                LinkedListBase::RemoveAt(void*)
                0x50089d88                LinkedListBase::RemoveHead()
                0x50089cb6                LinkedListBase::~LinkedListBase()
                0x50089dbc                LinkedListBase::Find(void*) const
                0x50089baa                LinkedListBase::GetHead() const
                0x50089b64                LinkedListBase::LinkedListBase()
 .text          0x50089e60      0x12c C:/RTOS-WC/libRTOS-WC.a(API_CRC_cpp.o)
                0x50089f20                CalcCrc32_EDB88320
                0x50089ebe                CalcCrc16_1021
                0x50089e60                CalcCrc7_09
 .text          0x50089f8c      0x24e C:/RTOS-WC/libRTOS-WC.a(API_FileSystems_cpp.o)
                0x50089fc4                CyGOS::FileClose(void*)
                0x5008a114                CyGOS::ReadSector(int, int, int, void*)
                0x5008a036                ReadTarRegionFlash(int, unsigned char*, int)
                0x5008a016                CyGOS::InitDriveImage(int, void*, int)
                0x50089f8c                CyGOS::FileLength(void*)
                0x5008a0f0                CyGOS::WriteSector(int, int, int, void*)
                0x50089fde                CyGOS::FileOpen(char const*, int, File**)
                0x50089ffe                CyGOS::RemoveDrive(int)
                0x5008a182                CyGOS::InitFileSystems(int&)
                0x5008a138                CyGOS::CreateBlockDevice(BlockDevice*, char const*, int&)
                0x50089fa4                CyGOS::FileRead(void*, void*, int*)
 *fill*         0x5008a1da        0x2 00
 .text          0x5008a1dc      0x2d4 C:/RTOS-WC/libRTOS-WC.a(API_TFTP_cpp.o)
                0x5008a300                CyGOS::TftpReceive(int, char*, int*, void*)
                0x5008a1dc                CyGOS::TftpReceive(int, char*, int*, void*, ip_addr)
                0x5008a392                CyGOS::TftpTransmit(int, char*, int, void*, ip_addr)
                0x5008a26a                CyGOS::CreateTftpClientTask(int, int&)
                0x5008a420                CyGOS::TftpTransmit(int, char*, int, void*)
 .text          0x5008a4b0      0x484 C:/RTOS-WC/libRTOS-WC.a(API_HTTP_cpp.o)
                0x5008a5f0                CyGOS::CreateHttpServerTask(int, int, int&)
                0x5008a704                CyGOS::AddJSONHandler(int, int, bool (*)(char*, HTTPReplyHeader&, char*, ip_addr))
                0x5008a790                CyGOS::AddHttpFileUploadHandler(int, int, bool (*)(char*, int, char*, char*))
                0x5008a8a8                CyGOS::AddHttpPostHandler(int, int, bool (*)(char*, char*, HTTPReplyHeader&))
                0x5008a564                CyGOS::AddHttpGetHandler(int, int, bool (*)(char*, HTTPReplyHeader&))
                0x5008a81c                CyGOS::AddTickCallbackForWebSite(int, int, void (*)(int))
 .text          0x5008a934       0xea C:/RTOS-WC/libRTOS-WC.a(API_SysLog_cpp.o)
                0x5008a9a0                CyGOS::GetSysEventStrigFromID(int)
                0x5008a96e                CyGOS::WriteSystemEvent(int, int, int, unsigned int, bool)
                0x5008a95c                CyGOS::RegisterSysLogCallback(void (*)(short, int, int, unsigned int, bool))
                0x5008a934                CyGOS::RegisterBoardTestCallback(void (*)())
                0x5008a946                CyGOS::DOBoardTest()
 *fill*         0x5008aa1e        0x2 00
 .text          0x5008aa20      0x2b4 C:/RTOS-WC/libRTOS-WC.a(RTOS_FIFO_cpp.o)
                0x5008ab04                FifoBase::WriteTest(Task*, int)
                0x5008aa48                FifoBase::FifoBase(int, int, char const*)
                0x5008aaba                FifoBase::WriteCleanup()
                0x5008aa20                FifoBase::FifoBase(int, int, char const*)
                0x5008aa70                FifoBase::ReadCleanup()
                0x5008ac28                FifoBase::ReadTest(Task*, int)
 .text          0x5008acd4      0x826 C:/RTOS-WC/libRTOS-WC.a(RTOS_RTOS_cpp.o)
                0x5008b18a                RTOS::Delete(Task*)
                0x5008b1f6                RTOS::Create(Task*, int)
                0x5008b3a4                RTOS::Init()
                0x5008af10                RTOS::DelayUs(int)
                0x5008ad28                RTOS::RemoveFromTickChain(Task*)
                0x5008ad74                RTOS::Gettaskloadinformation()
                0x5008b482                RTOS::Create(Task*, int, int)
                0x5008ad82                RTOS::PrintStatus(PrintStatusMode)
                0x5008b370                IdleTask::IdleTask()
                0x5008b284                RTOS::Start(int)
                0x5008b35e                IdleTask::Run()
                0x5008b44e                IdleTask::IdleTask()
                0x5008af64                RTOS::DelayMs(int)
                0x5008acd4                RTOS::InsertIntoTickChain(Task*)
                0x5008afe2                RTOS::TickHandler()
                0x5008afb6                RTOS::Stop()
                0x5008b0c0                RTOS::Schedule()
 *fill*         0x5008b4fa        0x2 00
 .text          0x5008b4fc      0x438 C:/RTOS-WC/libRTOS-WC.a(RTOS_Task_cpp.o)
                0x5008b760                Task::Suspend()
                0x5008b54e                TaskBase::~TaskBase()
                0x5008b5f4                Task::Task(char*, int)
                0x5008b5a2                Task::~Task()
                0x5008b868                Task::Delay(long)
                0x5008b560                TaskBase::~TaskBase()
                0x5008b4fc                TaskBase::Tick()
                0x5008b51e                TaskBase::Run()
                0x5008b8d8                Task::Wakeup()
                0x5008b504                Task::ReturnFromTask()
                0x5008b572                Task::~Task()
                0x5008b538                TaskBase::~TaskBase()
                0x5008b6aa                Task::Task(char*, int)
                0x5008b5ca                Task::~Task()
                0x5008b7c6                Task::Resume()
 .text          0x5008b934      0x344 C:/RTOS-WC/libRTOS-WC.a(RTOS_PrintfTask_cpp.o)
                0x5008b934                getcharWait
                0x5008b980                gets
                0x5008ba8a                PrintfTask::Run()
                0x5008bb74                PrintfTask::PrintfTask()
                0x5008b972                getchar
                0x5008ba00                PrintfTask::Print(unsigned char)
                0x5008bbf6                PrintfTask::PrintfTask()
 .text          0x5008bc78      0x368 C:/RTOS-WC/libRTOS-WC.a(RTOS_Debug_cpp.o)
                0x5008bf12                Debug::Poll()
                0x5008bd78                Debug::ReadMemory(int, int)
                0x5008be0c                Debug::Run()
                0x5008bcec                Debug::ReadLine()
                0x5008bc78                Debug::HexToInt(char*&, int)
                0x5008bfa6                Debug::Init()
                0x5008bf56                Debug::Debug(int)
                0x5008bf7e                Debug::Debug(int)
 .text          0x5008bfe0      0x374 C:/RTOS-WC/libRTOS-WC.a(RTOS_Mutex_cpp.o)
                0x5008c080                Mutex::Release(Task*)
                0x5008c2d8                Mutex::Mutex(char*)
                0x5008c1a2                Mutex::Acquire(Task*, int)
                0x5008bfe0                Mutex::~Mutex()
                0x5008c030                Mutex::~Mutex()
                0x5008c18a                Mutex::Unlock()
                0x5008c338                Mutex::Lock()
                0x5008c308                Mutex::Mutex(char*)
 .text          0x5008c354      0x572 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
                0x5008c4e0                TaskFastLed::TaskFastLed(int)
                0x5008c582                TaskSlowLed::TaskSlowLed(int)
                0x5008c474                TaskDispLed::TaskDispLed(void (*)(int, int))
                0x5008c516                TaskFastLed::TaskFastLed(int)
                0x5008c4aa                TaskDispLed::TaskDispLed(void (*)(int, int))
                0x5008c54c                TaskSlowLed::TaskSlowLed(int)
                0x5008c354                TaskDispLed::Run()
                0x5008c7ae                TaskFastLed::Run()
                0x5008c5b8                TaskSlowLed::Run()
 *fill*         0x5008c8c6        0x2 00
 .text          0x5008c8c8      0x47c C:/RTOS-WC/libRTOS-WC.a(RTOS_TaskManager_cpp.o)
                0x5008ccec                CyGOS::CreateTaskManager(int&, int, void (*)())
                0x5008c8c8                CyGOS::GetTaskTime(int)
                0x5008ca2e                TaskManager::Run()
                0x5008c940                CyGOS::GetIntrTimeHighest(int)
                0x5008cc00                TaskManager::TaskManager(void (*)(), int)
                0x5008c96a                CyGOS::GetIntCount(int)
                0x5008cc76                TaskManager::TaskManager(void (*)(), int)
                0x5008c92a                CyGOS::GetIntrTime(int)
                0x5008c980                TaskManager::Tick()
                0x5008c8de                CyGOS::GetTaskTimeHighest(int)
 .text          0x5008cd44      0x95c C:/RTOS-WC/libRTOS-WC.a(Net_Ethernet_cpp.o)
                0x5008cf3c                HasLocalIP(ip_addr)
                0x5008d068                Ethernet::~Ethernet()
                0x5008d382                Ethernet::Run()
                0x5008d00c                Ethernet::~Ethernet()
                0x5008cd5a                Ethernet::SetLinkDebouncing(bool)
                0x5008d1e2                Ethernet::Ethernet(FEC*, bool)
                0x5008ceca                netif_loop_output(Ethernet*, PktBuf*, ip_addr*)
                0x5008d0c4                Ethernet::Ethernet(FEC*, bool)
                0x5008cd44                Ethernet::GetHardwareAddress() const
                0x5008d300                RemoveFromNetIfList(Ethernet*)
                0x5008ce8e                Ethernet::low_level_output(PktBuf*)
                0x5008cf8a                AddToNetIfList(Ethernet*)
                0x5008cdd4                Ethernet::Tick()
                0x5008cee0                Ethernet::~Ethernet()
 .text          0x5008d6a0      0x902 C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o)
                0x5008dd92                TcpIp::~TcpIp()
                0x5008d808                TcpIp::Tick100ms()
                0x5008d6a0                TcpIp::AddNetIf(Ethernet*)
                0x5008ddce                TcpIp::~TcpIp()
                0x5008d718                TcpIp::Tick()
                0x5008db0e                TcpIp::TcpIp()
                0x5008daca                TcpIp::~TcpIp()
                0x5008dedc                TcpIp::SendApiMessage(api_msg*)
                0x5008de0a                TcpIp::SendCallbackMessage(void (*)(void*), void*)
                0x5008d94a                TcpIp::Run()
                0x5008dbd8                TcpIp::AddCustomProtocol(unsigned short, protocolHandler*, Ethernet*)
                0x5008dc80                TcpIp::InitCustom()
                0x5008dcc8                TcpIp::TcpIp()
 *fill*         0x5008dfa2        0x2 00
 .text          0x5008dfa4      0x920 C:/RTOS-WC/libRTOS-WC.a(Net_PktBuf_cpp.o)
                0x5008e4b8                pbuf_free(PktBuf*)
                0x5008e05a                pbuf_chain(PktBuf*, PktBuf*)
                0x5008dfa4                pbuf_clen(PktBuf*)
                0x5008dfde                pbuf_cat(PktBuf*, PktBuf*)
                0x5008e07e                pbuf_take(PktBuf*, void const*, int)
                0x5008e34c                alloc_pool_pbuf()
                0x5008e85e                pbuf_coalesce(PktBuf*, pbuf_layer)
                0x5008e170                pbuf_copy_partial(PktBuf*, void*, int, int)
                0x5008e620                pbuf_alloc(pbuf_layer, int, pbuf_type)
                0x5008e5be                pbuf_realloc(PktBuf*, int)
                0x5008e52c                pbuf_dechain(PktBuf*)
                0x5008e3a8                pbuf_header(PktBuf*, int)
                0x5008dfc4                pbuf_ref(PktBuf*)
                0x5008e1fe                pbuf_copy(PktBuf*, PktBuf*)
 .text          0x5008e8c4      0xde6 C:/RTOS-WC/libRTOS-WC.a(Net_ARP_cpp.o)
                0x5008eb36                etharp_gratuitous(Ethernet*)
                0x5008e930                etharp_send_mb(Ethernet*, PktBuf*, EthAddr*, EthAddr*)
                0x5008eb4c                free_etharp_q(ArpQueueEntry*)
                0x5008f624                arp_input(PktBuf*, Ethernet*)
                0x5008f494                etharp_ip_input(Ethernet*, PktBuf*)
                0x5008e994                etharp_raw(Ethernet*, EthAddr const*, EthAddr const*, EthAddr const*, ip_addr const*, EthAddr const*, ip_addr const*, unsigned short)
                0x5008e8c4                arp_init()
                0x5008f52a                etharp_output(Ethernet*, PktBuf*, ip_addr*)
                0x5008f2d4                etharp_arp_input(Ethernet*, EthAddr*, PktBuf*)
                0x5008e8cc                etharp_send_ip(Ethernet*, PktBuf*, EthAddr*, EthAddr*)
                0x5008ef32                etharp_find_addr(Ethernet*, ip_addr*, EthAddr**, ip_addr**)
                0x5008eaee                etharp_request(Ethernet*, ip_addr*)
                0x5008ec6a                find_entry(ip_addr*, unsigned char)
                0x5008f18a                update_arp_entry(Ethernet*, ip_addr*, EthAddr*, unsigned char)
                0x5008ebe4                etharp_tmr()
                0x5008ef94                etharp_query(Ethernet*, ip_addr*, PktBuf*)
 *fill*         0x5008f6aa        0x2 00
 .text          0x5008f6ac     0x15c4 C:/RTOS-WC/libRTOS-WC.a(Net_IPv4_cpp.o)
                0x5008fe28                ip_output_if_opt(PktBuf*, ip_addr*, ip_addr*, int, int, int, Ethernet*, void*, int)
                0x5008f922                ResolveGateway(ip_addr*, ip_addr*, Ethernet*)
                0x50090b62                ip_forward(PktBuf*, IPv4Header*, Ethernet*)
                0x5008f6ac                PrintAddress(ip_addr*)
                0x50090364                ip_reass(PktBuf*)
                0x5008f830                inet_chksum_pbuf(PktBuf*)
                0x5009019e                inet_chksum_pseudo(PktBuf*, ip_addr*, ip_addr*, int, int)
                0x5008fc02                ip_frag(PktBuf*, Ethernet*, ip_addr*)
                0x500900f0                ip_output(PktBuf*, ip_addr*, ip_addr*, int, int, int)
                0x50090c38                PrintRoutingTable()
                0x5008f7e0                inet_chksum(void*, int)
                0x5008f736                ip_check(Ethernet*, IPv4Header*)
                0x50090188                ip_init()
                0x5008f6d4                ip_addr_isbroadcast(ip_addr*, Ethernet*)
                0x5008f6b4                ip_addr_ismulticast(ip_addr*)
                0x500902bc                set_route(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
                0x5008f7f6                IP_ADDRESSES_AND_ID_MATCH(IPv4Header*, IPv4Header*)
                0x5008fb30                ip_reass_tmr()
                0x5009085a                ip_input(PktBuf*, Ethernet*)
                0x5009006c                ip_route(ip_addr*, ip_addr*)
                0x50090148                ip_addr::ToString()
                0x50090040                ip_output_if(PktBuf*, ip_addr*, ip_addr*, int, int, int, Ethernet*)
 .text          0x50090c70      0x422 C:/RTOS-WC/libRTOS-WC.a(Net_Raw_cpp.o)
                0x50090eb6                recv_raw(void*, RawSocket*, PktBuf*, ip_addr*)
                0x50091066                raw_connect(RawSocket*, ip_addr*)
                0x50090fc8                raw_new(int)
                0x5009103e                raw_bind(RawSocket*, ip_addr*)
                0x50090c70                raw_init()
                0x50090d14                raw_recv(RawSocket*, bool (*)(void*, RawSocket*, PktBuf*, ip_addr*), void*)
                0x50090d84                raw_sendto(RawSocket*, PktBuf*, ip_addr*)
                0x50090d2c                raw_remove(RawSocket*)
                0x50090c78                raw_input(PktBuf*, Ethernet*)
                0x50090e9c                raw_send(RawSocket*, PktBuf*)
 *fill*         0x50091092        0x2 00
 .text          0x50091094     0x3e64 C:/RTOS-WC/libRTOS-WC.a(Net_TCP_cpp.o)
                0x50093ada                tcp_slowtmr()
                0x5009202e                tcp_keepalive(TcpSocket*)
                0x50094004                tcp_process(TcpSocket*)
                0x5009154c                err_tcp(void*, int)
                0x50091622                recv_tcp(void*, TcpSocket*, PktBuf*, int)
                0x5009385c                tcp_abandon(TcpSocket*, bool)
                0x500913e0                setup_tcp(NetConn*)
                0x50091764                tcp_pcb_purge(TcpSocket*)
                0x50091184                tcp_output_set_header(TcpSocket*, PktBuf*, int, unsigned long)
                0x50093666                tcp_listen_with_backlog(TcpSocket*, int)
                0x50091ec8                tcp_write(TcpSocket*, void const*, int, int)
                0x5009112e                tcp_err(TcpSocket*, void (*)(void*, int))
                0x50091840                tcp_eff_send_mss(int, ip_addr*)
                0x500910f8                tcp_arg(TcpSocket*, void*)
                0x5009374c                tcp_connect(TcpSocket*, ip_addr*, int, int (*)(void*, TcpSocket*, int))
                0x500927dc                tcp_recved(TcpSocket*, int)
                0x5009286c                tcp_ack(TcpSocket*)
                0x50092612                tcp_rexmit(TcpSocket*)
                0x50091214                tcp_parseopt(TcpSocket*)
                0x50094736                tcp_listen_input(TcpSocketListen*)
                0x50094900                tcp_new()
                0x50094604                tcp_kill_prio(int)
                0x500921e2                tcp_output_segment(TcpSeg*, TcpSocket*)
                0x500918da                tcp_enqueue(TcpSocket*, void*, int, int, int, int)
                0x50092672                tcp_rexmit_rto(TcpSocket*)
                0x50091f32                tcp_send_ctrl(TcpSocket*, int)
                0x50091700                tcp_seg_free(TcpSeg*)
                0x50092786                tcp_timewait_input(TcpSocket*)
                0x500912d0                tcp_update_rcv_ann_wnd(TcpSocket*)
                0x50093aa8                tcp_recv_null(void*, TcpSocket*, PktBuf*, int)
                0x50094990                tcp_tmr()
                0x5009116a                tcp_next_iss()
                0x500926b0                tcp_pcb_remove(TcpSocket**, TcpSocket*)
                0x500920e8                tcp_rst(unsigned long, unsigned long, ip_addr*, ip_addr*, int, int)
                0x50091152                tcp_poll(TcpSocket*, int (*)(void*, TcpSocket*), int)
                0x50091140                tcp_accept(TcpSocket*, int (*)(void*, TcpSocket*, int))
                0x50091334                tcp_new_port()
                0x500949e0                tcp_input(PktBuf*, Ethernet*)
                0x50093956                tcp_close(TcpSocket*)
                0x50091884                tcp_seg_copy(TcpSeg*)
                0x50091736                tcp_segs_free(TcpSeg*)
                0x50091f50                tcp_zero_window_probe(TcpSocket*)
                0x5009110a                tcp_recv(TcpSocket*, int (*)(void*, TcpSocket*, PktBuf*, int))
                0x50093518                tcp_bind(TcpSocket*, ip_addr*, int)
                0x50094664                tcp_alloc(int)
                0x50091202                tcp_setprio(TcpSocket*, int)
                0x500945b8                tcp_kill_timewait()
                0x50091438                DebugPCBs()
                0x5009289c                tcp_receive(TcpSocket*)
                0x500910e6                tcp_init()
                0x50094910                tcp_fasttmr()
                0x500910ee                tcp_accept_null(void*, TcpSocket*, int)
                0x5009111c                tcp_sent(TcpSocket*, int (*)(void*, TcpSocket*, int))
                0x50092772                tcp_ack_now(TcpSocket*)
                0x50092316                tcp_output(TcpSocket*)
 .text          0x50094ef8      0x83c C:/RTOS-WC/libRTOS-WC.a(Net_UDP_cpp.o)
                0x50094f00                udp_recv(UdpSocket*, void (*)(void*, UdpSocket*, PktBuf*, ip_addr*, int), void*)
                0x500954b6                udp_disconnect(UdpSocket*)
                0x50094f84                udp_bind(UdpSocket*, ip_addr*, int)
                0x500952a4                udp_send(UdpSocket*, PktBuf*)
                0x5009542e                udp_connect(UdpSocket*, ip_addr*, int)
                0x5009522a                udp_sendto(UdpSocket*, PktBuf*, ip_addr*, int)
                0x5009531a                recv_udp(void*, UdpSocket*, PktBuf*, ip_addr*, int)
                0x500954d6                udp_input(PktBuf*, Ethernet*)
                0x50095072                udp_sendto_if(UdpSocket*, PktBuf*, ip_addr*, int, Ethernet*)
                0x50094ef8                udp_init()
                0x500952c2                udp_remove(UdpSocket*)
                0x50094f18                udp_new()
 .text          0x50095734      0x3dc C:/RTOS-WC/libRTOS-WC.a(Net_ICMP_cpp.o)
                0x5009583e                icmp_dest_unreach(PktBuf*, icmp_dur_type)
                0x5009581e                icmp_time_exceeded(PktBuf*, icmp_te_type)
                0x5009585e                icmp_input(PktBuf*, Ethernet*)
                0x5009573c                icmp_send_response(PktBuf*, unsigned char, unsigned char)
                0x50095734                icmp_init()
 .text          0x50095b10      0xe60 C:/RTOS-WC/libRTOS-WC.a(Net_IGMP_cpp.o)
                0x500963d2                igmp_input(PktBuf*, Ethernet*, ip_addr*)
                0x500966fa                igmp_leavegroup(ip_addr*, ip_addr*)
                0x50095cb8                igmp_send(IgmpGroup*, int)
                0x50095c7a                igmp_ip_output_if(PktBuf*, ip_addr*, ip_addr*, int, int, Ethernet*)
                0x50095b70                igmp_report_groups(Ethernet*)
                0x50095b10                igmp_start_timer(IgmpGroup*, int)
                0x50095bc2                igmp_lookfor_group(Ethernet*, ip_addr*)
                0x50095ece                igmp_tmr()
                0x500966de                igmp_init()
                0x50095bfa                igmp_remove_group(IgmpGroup*)
                0x50095bb2                igmp_stop_timer(IgmpGroup*)
                0x500960e8                igmp_start(Ethernet*)
                0x500961b0                igmp_joingroup(ip_addr*, ip_addr*)
                0x50095b22                igmp_delaying_member(IgmpGroup*, int)
                0x50095e50                igmp_timeout(IgmpGroup*)
                0x50095f12                igmp_lookup_group(Ethernet*, ip_addr*)
                0x50096026                igmp_stop(Ethernet*)
 .text          0x50096970     0x1b28 C:/RTOS-WC/libRTOS-WC.a(Net_DhcpClient_cpp.o)
                0x5009802a                dhcp_timeout(Ethernet*)
                0x500978c0                dhcp_handle_offer(Ethernet*)
                0x500981bc                dhcp_recv(void*, UdpSocket*, PktBuf*, ip_addr*, int)
                0x5009764e                dhcp_renew(Ethernet*)
                0x500974f0                dhcp_t2_timeout(Ethernet*)
                0x50096970                dhcp_init()
                0x50096bf6                dhcp_option_string(DHCP*, char*, int)
                0x5009776a                dhcp_select(Ethernet*)
                0x50096fc8                dhcp_unfold_reply(DHCP*, PktBuf*)
                0x50096996                dhcp_get_option_ptr(DHCP*, int)
                0x50096d40                dhcp_option_byte(DHCP*, int)
                0x50096a88                dhcp_get_option_byte(unsigned char*)
                0x50096a96                dhcp_get_option_long(unsigned char*)
                0x50096ce2                dhcp_option_short(DHCP*, int)
                0x50097736                dhcp_t1_timeout(Ethernet*)
                0x50097406                dhcp_rebind(Ethernet*)
                0x50096ac0                dhcp_check(Ethernet*)
                0x50097352                dhcp_decline(Ethernet*)
                0x50098154                dhcp_arp_reply(Ethernet*, ip_addr*)
                0x50097dfe                dhcp_handle_nak(Ethernet*)
                0x50098418                dhcp_coarse_tmr()
                0x50096f8a                dhcp_free_reply(DHCP*)
                0x50097524                dhcp_reboot(Ethernet*)
                0x500980ec                dhcp_fine_tmr()
                0x50097132                dhcp_create_request(Ethernet*)
                0x500970b8                dhcp_delete_request(Ethernet*)
                0x50097cdc                dhcp_release(Ethernet*)
                0x50097f04                dhcp_bind(Ethernet*)
                0x50096ddc                dhcp_handle_ack(Ethernet*)
                0x5009793a                dhcp_discover(Ethernet*)
                0x50096b58                dhcp_option_trailer(DHCP*)
                0x50097e5a                netif_set_up(Ethernet*)
                0x50097a86                dhcp_start(Ethernet*)
                0x50096d80                dhcp_option(DHCP*, int, int)
                0x50097c4c                netif_set_down(Ethernet*)
                0x50096c5a                dhcp_option_long(DHCP*, long)
                0x50096978                dhcp_set_state(DHCP*, DhcpState)
 .text          0x50098498      0x5ba C:/RTOS-WC/libRTOS-WC.a(Net_AutoIP_cpp.o)
                0x50098498                autoip_init()
                0x50098558                autoip_arp_announce(Ethernet*)
                0x50098964                autoip_arp_reply(Ethernet*, etharp_hdr*)
                0x500985fc                autoip_bind(Ethernet*)
                0x50098780                autoip_create_addr(Ethernet*, ip_addr*)
                0x5009890e                autoip_handle_arp_conflict(Ethernet*)
                0x50098820                autoip_stop(Ethernet*)
                0x50098652                autoip_tmr()
                0x500984c6                LWIP_AUTOIP_RAND(Ethernet*)
                0x50098512                autoip_start_probing(Ethernet*)
                0x500985a8                autoip_arp_probe(Ethernet*)
                0x500984a0                LWIP_AUTOIP_CREATE_SEED_ADDR(Ethernet*)
                0x5009883c                autoip_start(Ethernet*)
 *fill*         0x50098a52        0x2 00
 .text          0x50098a54       0x38 C:/RTOS-WC/libRTOS-WC.a(Net_DnsClient_cpp.o)
                0x50098a54                dns_setserver(int, ip_addr*)
 .text          0x50098a8c     0x237e C:/RTOS-WC/libRTOS-WC.a(Net_Socket_cpp.o)
                0x5009977a                alloc_socket(NetConn*)
                0x50099d1e                lwip_close(int)
                0x5009a970                lwip_select(int, fd_set*, fd_set*, fd_set*, timeval*)
                0x5009a3a8                lwip_connect(int, sockaddr const*, int)
                0x50098ed6                lwip_getsockopt(int, int, int, void*, int*)
                0x50098b34                get_socket(int)
                0x50099ce0                lwip_read(int, void*, unsigned long)
                0x50098a8c                lwip_socket_init()
                0x5009a522                event_callback(NetConn*, netconn_evt, int)
                0x50098b8c                lwip_ioctl(int, long, void*)
                0x50099a58                lwip_recvfrom(int, void*, unsigned long, int, sockaddr*, int*)
                0x5009a2e6                lwip_bind(int, sockaddr const*, unsigned long)
                0x50099d8c                lwip_listen(int, int)
                0x500998c6                lwip_write(int, void const*, unsigned long)
                0x50099744                lwip_getsockname(int, sockaddr*, int*)
                0x50099cfe                lwip_recv(int, void*, unsigned long, int)
                0x5009a734                lwip_selscan(int, fd_set*, fd_set*, fd_set*)
                0x5009a4ba                printset(char*, fd_set*)
                0x50099e28                pcb_new(api_msg_msg*)
                0x50099ff2                lwip_socket(int, int, int)
                0x5009a0ec                lwip_accept(int, sockaddr*, int*)
                0x500998e0                lwip_sendto(int, void const*, unsigned long, int, sockaddr const*, int)
                0x50099f98                tcpip_apimsg(api_msg*)
                0x50099760                lwip_getpeername(int, sockaddr*, int*)
                0x50099816                lwip_send(int, void const*, unsigned long, int)
                0x50098c80                lwip_setsockopt(int, int, int, void const*, int)
                0x50098c5e                lwip_errno(int)
 *fill*         0x5009ae0a        0x2 00
 .text          0x5009ae0c      0x270 C:/RTOS-WC/libRTOS-WC.a(Net_NetBuf_cpp.o)
                0x5009ae0c                netbuf_data(NetBuf*, void**, int*)
                0x5009ae5c                netbuf_next(NetBuf*)
                0x5009aee4                netbuf_free(NetBuf*)
                0x5009ae9c                netbuf_chain(NetBuf*, NetBuf*)
                0x5009ae88                netbuf_first(NetBuf*)
                0x5009af58                netbuf_ref(NetBuf*, void const*, int)
                0x5009af24                netbuf_delete(NetBuf*)
                0x5009afe4                netbuf_alloc(NetBuf*, unsigned short)
 .text          0x5009b07c     0x1772 C:/RTOS-WC/libRTOS-WC.a(Net_NetConn_cpp.o)
                0x5009bec0                netconn_listen_with_backlog(NetConn*, int)
                0x5009bc28                netconn_recv(NetConn*)
                0x5009b428                do_writemore(NetConn*)
                0x5009b280                netconn_send(NetConn*, NetBuf*)
                0x5009b228                netconn_connect(NetConn*, ip_addr*, int)
                0x5009c344                do_close(api_msg_msg*)
                0x5009b07c                API_EVENT(NetConn*, netconn_evt, int)
                0x5009b80e                poll_tcp(void*, TcpSocket*)
                0x5009b5bc                do_close_internal(NetConn*)
                0x5009b0d2                do_connected(void*, TcpSocket*, int)
                0x5009bf12                do_disconnect(api_msg_msg*)
                0x5009c382                do_bind(api_msg_msg*)
                0x5009c160                do_getaddr(api_msg_msg*)
                0x5009b864                do_newconn(api_msg_msg*)
                0x5009b2f8                netconn_bind(NetConn*, ip_addr*, int)
                0x5009b134                do_connect(api_msg_msg*)
                0x5009b350                netconn_alloc(netconn_type, void (*)(NetConn*, netconn_evt, int))
                0x5009bf5e                do_send(api_msg_msg*)
                0x5009b980                netconn_new_with_proto_and_callback(netconn_type, int, void (*)(NetConn*, netconn_evt, int))
                0x5009ba6c                netconn_accept(NetConn*)
                0x5009bb14                netconn_write(NetConn*, void const*, unsigned long, int)
                0x5009b2d2                netconn_sendto(NetConn*, NetBuf*, ip_addr*, int)
                0x5009b8a6                do_delconn(api_msg_msg*)
                0x5009bb90                netconn_getaddr(NetConn*, ip_addr*, int*, int)
                0x5009c47a                netconn_free(NetConn*)
                0x5009c074                do_write(api_msg_msg*)
                0x5009b094                netconn_close(NetConn*)
                0x5009be74                netconn_disconnect(NetConn*)
                0x5009c65a                netconn_delete(NetConn*)
                0x5009c29e                do_join_leave_group(api_msg_msg*)
                0x5009c0e8                do_recv(api_msg_msg*)
                0x5009c696                do_listen(api_msg_msg*)
                0x5009b76c                sent_tcp(void*, TcpSocket*, int)
                0x5009c5aa                accept_function(void*, TcpSocket*, int)
                0x5009be24                netconn_join_leave_group(NetConn*, ip_addr*, ip_addr*, netconn_igmp)
 *fill*         0x5009c7ee        0x2 00
 .text          0x5009c7f0      0xbf6 C:/RTOS-WC/libRTOS-WC.a(Net_TcpServer_cpp.o)
                0x5009c822                TcpServer::Linger()
                0x5009d2ca                TcpServer::~TcpServer()
                0x5009d352                TcpServer::~TcpServer()
                0x5009c7f0                TcpServer::GetIpAddress()
                0x5009cebc                TcpServer::PrepareFDSets()
                0x5009c818                TcpServer::ReuseAddress()
                0x5009ca86                TcpServer::AcceptNewConnections()
                0x5009cd76                Ethernet::AddTcpServer(TcpServer*)
                0x5009c8a0                TcpServer::ProcessOutput()
                0x5009cba0                TcpServer::Listen()
                0x5009d004                TcpServer::Run()
                0x5009ce34                TcpServer::~TcpServer()
                0x5009ccf6                TcpServer::TcpServer(char*, int, Ethernet*, int)
                0x5009cbe4                TcpServer::Bind(int)
                0x5009c834                TcpServer::ProcessInput()
                0x5009c82c                TcpServer::SleepIfNoClients()
                0x5009ca60                TcpServer::NonBlock()
                0x5009cc46                TcpServer::SetUp(bool)
                0x5009c804                TcpServer::IsLinkUp()
                0x5009cde2                Ethernet::TcpServerLinkCallback(Ethernet*)
                0x5009c90c                TcpServer::ProcessExceptions()
                0x5009cb46                TcpServer::Poll()
                0x5009d24a                TcpServer::TcpServer(char*, int, Ethernet*, int)
 *fill*         0x5009d3e6        0x2 00
 .text          0x5009d3e8      0x366 C:/RTOS-WC/libRTOS-WC.a(Net_TcpConnection_cpp.o)
                0x5009d3e8                TcpConnection::HasOutput()
                0x5009d3fe                TcpConnection::CloseConnection()
                0x5009d5ca                TcpConnection::~TcpConnection()
                0x5009d498                TcpConnection::WriteToOutput(void const*, int)
                0x5009d6d0                TcpConnection::TcpConnection(int)
                0x5009d652                TcpConnection::TcpConnection(int)
                0x5009d60e                TcpConnection::~TcpConnection()
                0x5009d57e                TcpConnection::~TcpConnection()
                0x5009d504                TcpConnection::ProcessInput()
                0x5009d42a                TcpConnection::ProcessOutput()
 *fill*         0x5009d74e        0x2 00
 .text          0x5009d750      0x372 C:/RTOS-WC/libRTOS-WC.a(Net_HttpServer_cpp.o)
                0x5009d9da                HttpServer::~HttpServer()
                0x5009da1a                HttpServer::HttpServer(Ethernet*, int)
                0x5009da6e                HttpServer::HttpServer(Ethernet*, int)
                0x5009d7aa                HttpServer::HandleFileUpload(char*, int, char*, char*)
                0x5009d7de                HttpServer::Tick()
                0x5009d90a                HttpServer::CreateNewConnection(int)
                0x5009d99a                HttpServer::~HttpServer()
                0x5009d798                HttpServer::AddJSONHandler(bool (*)(char*, HTTPReplyHeader&, char*, ip_addr))
                0x5009d880                HttpServer::HandlePostEvent(char*, char*, HTTPReplyHeader&, ip_addr)
                0x5009d762                HttpServer::AddHttpPostHandler(bool (*)(char*, char*, HTTPReplyHeader&))
                0x5009d800                HttpServer::HandleGetEvent(char*, HTTPReplyHeader&, ip_addr)
                0x5009d786                HttpServer::AddFileUploadHandler(bool (*)(char*, int, char*, char*))
                0x5009d950                HttpServer::~HttpServer()
                0x5009d774                HttpServer::AddTickCallback(void (*)(int))
                0x5009d750                HttpServer::AddHttpGetHandler(bool (*)(char*, HTTPReplyHeader&))
 *fill*         0x5009dac2        0x2 00
 .text          0x5009dac4     0x18b8 C:/RTOS-WC/libRTOS-WC.a(Net_HttpConnection_cpp.o)
                0x5009e318                HttpConnection::SendError(char*, bool, HttpConnection::HttpError)
                0x5009e0ec                HttpConnection::WriteStringToOutput(char*)
                0x5009dccc                HttpConnection::ProcessInputLine()
                0x5009dac4                HttpConnection::WriteDataToOutput()
                0x5009e91a                HttpConnection::HandleRequestGet()
                0x5009f1b4                HttpConnection::~HttpConnection()
                0x5009f14e                HttpConnection::~HttpConnection()
                0x5009ec28                HttpConnection::CheckForFileEnd()
                0x5009e734                HttpConnection::HandleRequestPost()
                0x5009ec9c                HttpConnection::ProcessInput()
                0x5009f2f4                HttpConnection::HttpConnection(int, char*, char*, HttpServer*)
                0x5009dbb4                HttpConnection::ProcessRequestLine()
                0x5009db54                HttpConnection::VerifyFileExtension(char*)
                0x5009f210                HttpConnection::~HttpConnection()
                0x5009dae8                HttpConnection::VerifyFileLength(char*, int)
                0x5009e49a                HttpConnection::ProcessFileUpload(char*, int, char*)
                0x5009dad6                HttpConnection::WritefileToOutput()
                0x5009e13e                HttpConnection::SendBackUploadDataAsAttachMent(char*, int, char*)
                0x5009f26c                HttpConnection::HttpConnection(int, char*, char*, HttpServer*)
                0x5009eafc                HttpConnection::GetMoreData()
                0x5009e23e                HttpConnection::SendErrorNotFound(char*)
 .text          0x5009f37c     0x18ba C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
                0x5009f4d2                TftpClient::GetFileLength(char*, ip_addr)
                0x500a0322                TftpClient::TftpClient(Ethernet*)
                0x5009f506                TftpClient::SendDataPkt(unsigned char*, int, unsigned short)
                0x5009fd26                TftpClient::CreateRRQPkt(char*, int)
                0x5009f8b2                TftpClient::SendErrorPkt(TftpClient::TFTPErr, char*)
                0x5009f720                TftpClient::ExtractOptions(int)
                0x500a02a0                TftpClient::TftpClient(Ethernet*)
                0x5009f4ec                TftpClient::GetFileLength(TftpClient::TftpRequest&)
                0x500a0060                TftpClient::TransmitFile(char*, int, void*, ip_addr)
                0x500a089c                TftpClient::TransmitFile(TftpClient::TftpRequest&)
                0x5009f37c                TftpClient::Reset(TftpClient::TftpRequest&)
                0x5009f688                TftpClient::ProcessDATAOpcode(int)
                0x500a0b38                TftpClient::Run()
                0x5009f92e                TftpClient::CheckOptions()
                0x5009f58a                TftpClient::ProcessACKOpcode()
                0x5009fe6a                TftpClient::CreateWRQPkt(char*, int)
                0x5009faf0                TftpClient::ProcessOACKOpcode(int)
                0x5009ffc8                TftpClient::CreateSocket()
                0x5009ff58                TftpClient::SendWriteRequest(char*, int, ip_addr)
                0x5009f42a                TftpClient::Receive(int)
                0x500a05fe                TftpClient::ReceiveFile(TftpClient::TftpRequest&)
                0x5009f7de                TftpClient::SendOAckPkt()
                0x5009fc66                TftpClient::ProcessPacket(int)
                0x500a03a4                TftpClient::ReceiveFile(char*, int*, void*, ip_addr)
                0x5009fbca                TftpClient::ProcessWRQOpcode(int)
                0x5009f62c                TftpClient::SendAckPkt(unsigned char*, unsigned short)
                0x5009fdfa                TftpClient::SendReadRequest(char*, int, ip_addr)
 *fill*         0x500a0c36        0x2 00
 .text          0x500a0c38      0xb1a C:/RTOS-WC/libRTOS-WC.a(Net_DNSServer_cpp.o)
                0x500a0fd8                DNSServer::SendReply(unsigned char*)
                0x500a0e1e                DNSServer::ParsePacket(unsigned char*)
                0x500a1432                DNSServer::~DNSServer()
                0x500a12c8                DNSServer::SendErrorReply(unsigned char)
                0x500a0c38                DNSServer::Tick()
                0x500a0f58                DNSServer::ChangetoDnsNameFormat(unsigned char*, unsigned char*)
                0x500a0c72                DNSServer::dns_get_short(unsigned char*)
                0x500a0d42                DNSServer::ReadName(unsigned char*, unsigned char*, int*)
                0x500a13fe                DNSServer::~DNSServer()
                0x500a14c0                DNSServer::DNSServer(Ethernet*)
                0x500a0edc                DNSServer::DNS_hasEntry(unsigned char*)
                0x500a14f6                DNSServer::Run()
                0x500a0c40                DNSServer::AddAnswers(RES_RECORD*, unsigned char*, unsigned char*)
                0x500a145e                DNSServer::~DNSServer()
                0x500a148a                DNSServer::DNSServer(Ethernet*)
                0x500a0c88                DNSServer::Cleanup()
                0x500a0cd8                DNSServer::ParseHostNameOnly(unsigned char*, unsigned char*)
 *fill*         0x500a1752        0x2 00
 .text          0x500a1754      0xef6 C:/RTOS-WC/libRTOS-WC.a(Net_DhcpServer_cpp.o)
                0x500a1964                DhcpServer::VerifyRequestedIPNetmask(DhcpMsg&)
                0x500a1bf0                DhcpServer::HandleDiscover(DhcpMsg&, sockaddr_in&)
                0x500a2028                DhcpServer::HandleRequest(DhcpMsg&, sockaddr_in&)
                0x500a19fe                DhcpServer::GetClientHostName(DhcpMsg&)
                0x500a1f0e                DhcpServer::AddDNSEntry(DhcpMsg&, ip_addr)
                0x500a17a8                DhcpServer::Tick()
                0x500a18d0                DhcpServer::EndOption(unsigned char*&)
                0x500a1842                DhcpServer::ProcessLeaseTable()
                0x500a1e48                DhcpServer::HandleRelease(DhcpMsg&, sockaddr_in&)
                0x500a184a                DhcpServer::StringOption(unsigned char*&, DhcpOption, int, unsigned char*)
                0x500a1eaa                DhcpServer::HandleDecline(DhcpMsg&, sockaddr_in&)
                0x500a1d90                DhcpServer::RemoveDNSEntry(DhcpMsg&, ip_addr)
                0x500a1a7a                DhcpServer::SendNAK(DhcpMsg&, sockaddr_in&)
                0x500a17a0                DhcpMsg::Print()
                0x500a22ea                DhcpServer::DhcpServer(Ethernet*, DhcpServerConfiguration&)
                0x500a1754                DhcpMsg::GetType()
                0x500a183a                DhcpServer::HandleInform(DhcpMsg&, sockaddr_in&)
                0x500a1898                DhcpServer::LongOption(unsigned char*&, DhcpOption, int)
                0x500a23e8                DhcpServer::Run()
                0x500a187c                DhcpServer::ByteOption(unsigned char*&, DhcpOption, int)
                0x500a21ec                DhcpServer::DhcpServer(Ethernet*, DhcpServerConfiguration&)
                0x500a1b96                DhcpServer::FindLease(unsigned char*)
                0x500a18e4                DhcpServer::FindLease()
 *fill*         0x500a264a        0x2 00
 .text          0x500a264c      0x514 C:/RTOS-WC/libRTOS-WC.a(Flash_FlashM29W128G_cpp.o)
                0x500a2706                FlashM29W128GL::Erase(void*, int, void (*)(int, int))
                0x500a264c                FlashM29W128GL::GetSectorSize(int)
                0x500a28b2                FlashM29W128GL::Program(void*, void*, int, void (*)(int, int))
                0x500a2a00                FlashM29W128GL::ReadFlashType()
                0x500a26c6                FlashM29W128GL::FlashM29W128GL(unsigned int, int)
                0x500a2686                FlashM29W128GL::FlashM29W128GL(unsigned int, int)
 .text          0x500a2b60      0xe6a C:/RTOS-WC/libRTOS-WC.a(BlkDev_FileSystemManager_cpp.o)
                0x500a2e0a                FileSystemManager::FindDrive(int)
                0x500a3404                FileSystemManager::NotifyMediaDetected(BlockDevice*)
                0x500a2d4e                FileSystemManager::Remove(char const*)
                0x500a2f62                FileSystemManager::MediaLost(FileSystemManager::FSMessage&)
                0x500a34fe                FileSystemManager::InitDriveImage(int, void*, int)
                0x500a2f10                FileSystemManager::RegisterDrive(BlockDevice*, char const*)
                0x500a330c                FileSystemManager::Run()
                0x500a2c28                FileSystemManager::FileLength(void*)
                0x500a36ac                FileSystemManager::FileSystemManager()
                0x500a2dc0                FileSystemManager::FileOpen(char const*, int, File**)
                0x500a34b6                FileSystemManager::RemoveDrive(int)
                0x500a375c                FileSystemManager::~FileSystemManager()
                0x500a37b2                FileSystemManager::FileSystemManager()
                0x500a38b8                FileSystemManager::~FileSystemManager()
                0x500a3604                FileSystemManager::ReadSector(int, int, int, void*)
                0x500a355c                FileSystemManager::WriteSector(int, int, int, void*)
                0x500a3862                FileSystemManager::~FileSystemManager()
                0x500a2c82                FileSystemManager::FileRead(void*, void*, int*)
                0x500a2e72                FileSystemManager::RegisterFS(int, char const*, FileSystem* (*)(BlockDevice*, int, int, int), int, int)
                0x500a2bd0                FileSystemManager::FileClose(void*)
                0x500a2b60                FileSystemManager::FindDriveNumber(char const*)
                0x500a2cdc                FileSystemManager::Unlink(char const*)
                0x500a300c                FileSystemManager::MediaDetected(FileSystemManager::FSMessage&)
                0x500a3916                FileSystemManager::NotifyMediaLost(BlockDevice*)
 *fill*         0x500a39ca        0x2 00
 .text          0x500a39cc      0x41a C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o)
                0x500a39dc                RamDiskDevice::GetSectorCount() const
                0x500a3cea                RamDiskDevice::Initialize(int, void const*)
                0x500a39cc                RamDiskDevice::DetectMedia()
                0x500a3bd0                RamDiskDevice::~RamDiskDevice()
                0x500a3b78                RamDiskDevice::Remove()
                0x500a3b96                RamDiskDevice::~RamDiskDevice()
                0x500a3c74                RamDiskDevice::RamDiskDevice(char*)
                0x500a3c30                RamDiskDevice::RamDiskDevice(char*)
                0x500a3c00                RamDiskDevice::~RamDiskDevice()
                0x500a39ec                RamDiskDevice::WriteDiskSector(int, unsigned char*)
                0x500a3cb8                CreateRamDisk()
                0x500a3ab2                RamDiskDevice::ReadDiskSector(int, unsigned char*)
 *fill*         0x500a3de6        0x2 00
 .text          0x500a3de8      0x392 C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
                0x500a3e12                FRAMDiskDevice::ReadDiskSector(int, unsigned char*)
                0x500a3edc                FRAMDiskDevice::Remove()
                0x500a3f64                FRAMDiskDevice::~FRAMDiskDevice()
                0x500a3f34                FRAMDiskDevice::~FRAMDiskDevice()
                0x500a3f94                FRAMDiskDevice::FRAMDiskDevice(char*)
                0x500a3fe4                FRAMDiskDevice::FRAMDiskDevice(char*)
                0x500a3de8                FRAMDiskDevice::DetectMedia()
                0x500a3df8                FRAMDiskDevice::GetSectorCount() const
                0x500a4078                FRAMDiskDevice::Initialize(int, void const*)
                0x500a4034                CreateFRAMDisk()
                0x500a3efa                FRAMDiskDevice::~FRAMDiskDevice()
                0x500a3e08                FRAMDiskDevice::WriteDiskSector(int, unsigned char*)
 *fill*         0x500a417a        0x2 00
 .text          0x500a417c     0x12ac C:/RTOS-WC/libRTOS-WC.a(FileSys_FileSystem_cpp.o)
                0x500a4ae0                FileSystem::Remove(char const*)
                0x500a4294                FileSystem::FileSystem(char*, int, BlockDevice*, int, int)
                0x500a419a                FileSystem::ReadSector(int, unsigned char*)
                0x500a473c                FileSystem::FileLength(File*)
                0x500a4560                FileSystem::FileOpen(char const*, int, File**)
                0x500a417c                FileSystem::WriteSector(int, unsigned char*)
                0x500a4910                FileSystem::Unlink(char const*)
                0x500a4e90                FileSystem::FileRead(File*, void*, int*)
                0x500a41b8                FileSystem::RegisterFileSystems(FileSystemManager*)
                0x500a4cb0                FileSystem::FileWrite(File*, void const*, int*)
                0x500a4390                FileSystem::FileClose(File*)
                0x500a5070                FileSystem::Run()
                0x500a4310                FileSystem::~FileSystem()
                0x500a41dc                FileSystem::~FileSystem()
                0x500a434c                FileSystem::~FileSystem()
                0x500a4218                FileSystem::FileSystem(char*, int, BlockDevice*, int, int)
 .text          0x500a5428      0x79c C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
                0x500a5498                TarFileSystem::MsgFileLength(void*)
                0x500a5648                TarFileSystem::MsgFileRead(File*, void*, int*)
                0x500a5606                TarFileSystem::MsgFindOpen(char const*, int)
                0x500a598a                TarFileSystem::MsgFileOpen(char const*, int, File**)
                0x500a5b06                TarFileSystem::CreateFileSystem(BlockDevice*, int, int, int)
                0x500a5a76                TarFileSystem::~TarFileSystem()
                0x500a57bc                TarFileSystem::FindFirst(char const*, TarFileSystem::TarFsFileFind*, int)
                0x500a55e0                TarFileSystem::MsgFindClose(void*)
                0x500a5b60                TarFileSystem::TarFileSystem(BlockDevice*, int, int)
                0x500a5aa2                TarFileSystem::TarFileSystem(BlockDevice*, int, int)
                0x500a5428                TarFileSystem::MsgFileClose(File*)
                0x500a5536                TarFileSystem::MsgFileRemove(char const*)
                0x500a54f4                TarFileSystem::MsgFileRename(char const*, char*)
                0x500a5582                TarFileSystem::MsgFileWrite(File*, void const*, int*)
                0x500a54a8                TarFileSystem::MsgRemoveDir(char const*)
                0x500a54ce                TarFileSystem::MsgCreateDir(char const*)
                0x500a5a4a                TarFileSystem::~TarFileSystem()
                0x500a5a16                TarFileSystem::~TarFileSystem()
                0x500a555c                TarFileSystem::MsgFileUnlink(char const*)
                0x500a59f8                RegisterTarFS(int, int)
                0x500a58be                TarFileSystem::OpenFile(char const*, int, File**)
                0x500a59ca                TarFileSystem::RegisterFileSystems(FileSystemManager*, int, int)
                0x500a5446                TarFileSystem::MsgFileSeek(void*, int, int)
 .text          0x500a5bc4      0x748 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
                0x500a5d7c                FRAMFileSystem::MsgFindClose(void*)
                0x500a5cf8                FRAMFileSystem::MsgFileUnlink(char const*)
                0x500a5c44                FRAMFileSystem::MsgRemoveDir(char const*)
                0x500a5f58                FRAMFileSystem::FindFirst(char const*, FRAMFileSystem::FRAMFsFileFind*, int)
                0x500a607e                FRAMFileSystem::MsgFileOpen(char const*, int, File**)
                0x500a6188                FRAMFileSystem::~FRAMFileSystem()
                0x500a5c90                FRAMFileSystem::MsgFileRename(char const*, char*)
                0x500a6294                FRAMFileSystem::FRAMFileSystem(BlockDevice*, int, int)
                0x500a5bc4                FRAMFileSystem::MsgFileClose(File*)
                0x500a5de4                FRAMFileSystem::MsgFileRead(File*, void*, int*)
                0x500a60be                FRAMFileSystem::RegisterFileSystems(FileSystemManager*, int, int)
                0x500a5c6a                FRAMFileSystem::MsgCreateDir(char const*)
                0x500a5da2                FRAMFileSystem::MsgFindOpen(char const*, int)
                0x500a5d1e                FRAMFileSystem::MsgFileWrite(File*, void const*, int*)
                0x500a5cd2                FRAMFileSystem::MsgFileRemove(char const*)
                0x500a5c34                FRAMFileSystem::MsgFileLength(void*)
                0x500a60f8                RegisterFRAMFS(int, int)
                0x500a615c                FRAMFileSystem::~FRAMFileSystem()
                0x500a5fb2                FRAMFileSystem::OpenFile(char const*, int, File**)
                0x500a5be2                FRAMFileSystem::MsgFileSeek(void*, int, int)
                0x500a622c                FRAMFileSystem::CreateFileSystem(BlockDevice*, int, int, int)
                0x500a61b4                FRAMFileSystem::FRAMFileSystem(BlockDevice*, int, int)
                0x500a6128                FRAMFileSystem::~FRAMFileSystem()
 .text          0x500a630c      0x4f2 C:/RTOS-WC/libRTOS-WC.a(Dev_TLV5604_cpp.o)
                0x500a65cc                TLV5604::WriteOutputs(int, int*)
                0x500a6562                TLV5604::~TLV5604()
                0x500a6578                TLV5604::~TLV5604()
                0x500a659c                TLV5604::TLV5604(SPI*, int, int, int)
                0x500a633c                TLV5604::WriteOutput(int, int)
                0x500a630c                TLV5604::TLV5604(SPI*, int, int, int)
                0x500a658a                TLV5604::~TLV5604()
 *fill*         0x500a67fe        0x2 00
 .text          0x500a6800      0x2e0 C:/RTOS-WC/libRTOS-WC.a(Dev_MCP3208_cpp.o)
                0x500a6940                MCP3208::~MCP3208()
                0x500a69a4                MCP3208::ReadInputs(int, int*)
                0x500a697a                MCP3208::MCP3208(SPI*, int, int)
                0x500a6968                MCP3208::~MCP3208()
                0x500a6800                MCP3208::MCP3208(SPI*, int, int)
                0x500a6956                MCP3208::~MCP3208()
                0x500a682a                MCP3208::ReadInput(int)
 .text          0x500a6ae0      0x244 C:/RTOS-WC/libRTOS-WC.a(Dev_24AA025E48_cpp.o)
                0x500a6c1a                EUI_24AA025E48::~EUI_24AA025E48()
                0x500a6c70                EUI_24AA025E48::EUI_24AA025E48(I2C*, int)
                0x500a6ae0                EUI_24AA025E48::Write(int, unsigned char const*, int)
                0x500a6b42                EUI_24AA025E48::Write(int, int)
                0x500a6b78                EUI_24AA025E48::Read(int, unsigned char*, int&, int)
                0x500a6c5a                EUI_24AA025E48::~EUI_24AA025E48()
                0x500a6cca                EUI_24AA025E48::EUI_24AA025E48(I2C*, int)
                0x500a6bf0                EUI_24AA025E48::Read(int, int)
                0x500a6c44                EUI_24AA025E48::~EUI_24AA025E48()
 .text          0x500a6d24      0x150 C:/RTOS-WC/libRTOS-WC.a(Dev_I2CDevice_cpp.o)
                0x500a6d88                I2CDevice::~I2CDevice()
                0x500a6d60                I2CDevice::~I2CDevice()
                0x500a6d24                I2CDevice::I2CDevice(I2C*, int)
                0x500a6d76                I2CDevice::~I2CDevice()
                0x500a6d9a                I2CDevice::Read(int, int, unsigned char*, int, int)
                0x500a6d42                I2CDevice::I2CDevice(I2C*, int)
                0x500a6e06                I2CDevice::Write(int, int, unsigned char const*, int)
 .text          0x500a6e74      0x276 C:/RTOS-WC/libRTOS-WC.a(Dev_PCF8563_cpp.o)
                0x500a6f82                PCF8563::~PCF8563()
                0x500a6ea4                PCF8563::Write(int, int)
                0x500a6ed8                PCF8563::Read(int, unsigned char*, int&, int)
                0x500a6e74                PCF8563::Write(int, unsigned char const*, int)
                0x500a6f58                PCF8563::~PCF8563()
                0x500a6f26                PCF8563::Read(int, int)
                0x500a6f98                PCF8563::~PCF8563()
                0x500a6fae                PCF8563::PCF8563(I2C*, int, int)
                0x500a704c                PCF8563::PCF8563(I2C*, int, int)
 *fill*         0x500a70ea        0x2 00
 .text          0x500a70ec      0x24c C:/RTOS-WC/libRTOS-WC.a(OS_OS_Custom_cpp.o)
                0x500a72ec                OS_Memfree
                0x500a71a6                OS_MapUserPointer
                0x500a70fa                OS_GetMilliSecCounter
                0x500a7168                OS_DeleteLock
                0x500a7256                OS_Strcmp
                0x500a7160                OS_DeleteMutex
                0x500a7296                OS_Memmove
                0x500a7232                OS_Strncpy
                0x500a7170                OS_FileOpen
                0x500a7194                OS_WritePCIConfig
                0x500a7108                OS_CreateEvent
                0x500a71e6                OS_DisableInterrupts
                0x500a7112                OS_SetEvent
                0x500a7158                OS_LeaveLock
                0x500a7262                OS_Sleep
                0x500a728a                OS_Memcpy
                0x500a711a                OS_DeleteEvent
                0x500a71c2                OS_Init
                0x500a72f8                OS_Memcmp
                0x500a7318                OS_Memrealloc
                0x500a719c                OS_ReadPCIConfig
                0x500a720c                OS_EnableInterrupts
                0x500a7304                OS_Memset
                0x500a713e                OS_WaitMutex
                0x500a726e                OS_Memalloc
                0x500a71b8                OS_UnmapUserPointer
                0x500a723e                OS_Strlen
                0x500a712c                OS_CreateMutex
                0x500a717a                OS_FileClose
                0x500a70ec                ReadByte(unsigned long)
                0x500a718c                OS_Deinit
                0x500a7136                OS_CreateLock
                0x500a7148                OS_EnterLock
                0x500a7150                OS_ReleaseMutex
                0x500a7182                OS_FileRead
                0x500a7122                OS_WaitEvent
                0x500a724a                OS_Strnicmp
 .text          0x500a7338     0x1642 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXDownload_cpp.o)
                0x500a74c4                DEV_UploadFile
                0x500a810e                DEV_CheckForDownload
                0x500a84dc                DEV_RemoveFWFiles
                0x500a8418                DEV_GetFWTransferTypeFromFileName
                0x500a873a                DEV_ProcessFWDownload
                0x500a8318                DEV_IsNXOFile
                0x500a85ce                DEV_RemoveChannelFiles
                0x500a7ad2                DEV_DownloadFile
                0x500a82ca                DEV_IsNXFFile
                0x500a737a                DEV_DeleteFile
                0x500a8366                DEV_IsFWFile
 *fill*         0x500a897a        0x2 00
 .text          0x500a897c     0x26e8 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXFunctions_cpp.o)
                0x500aaa2c                xChannelGetPacket
                0x500aabb4                xChannelGetMBXState
                0x500aa8c0                xSysdeviceReset
                0x500a8b6a                HwIfRead32(void*, void*)
                0x500aae4a                xSysdeviceBootstart
                0x500a8b44                HwIfWrite8(void*, void*, void*)
                0x500aacde                xChannelOpen
                0x500a8c7a                xChannelSyncState
                0x500a8ba6                HwIfRead8(void*, void*)
                0x500a9bf8                xSysdeviceInfo
                0x500a897c                xSysdeviceClose
                0x500aad98                xSysdeviceOpen
                0x500a9696                xChannelWatchdog
                0x500aa088                xChannelPLCActivateWrite
                0x500a95b0                xDriverGetErrorDescription
                0x500a89a0                xDriverOpen
                0x500a9600                xDriverGetInformation
                0x500a99aa                xChannelPLCMemoryPtr
                0x500aaa90                xSysdeviceGetPacket
                0x500aabcc                xChannelDownload
                0x500a9fb2                xChannelPLCActivateRead
                0x500aa15e                xChannelPLCIsWriteReady
                0x500a9206                xSysdeviceFindNextFile
                0x500aaaf4                xChannelPutPacket
                0x500aabc0                xSysdeviceGetMBXState
                0x500aa248                xChannelPLCIsReadReady
                0x500a958e                xChannelFindFirstFile
                0x500a8b1e                HwIfWrite16(void*, void*, void*)
                0x500a9ae6                xDriverEnumBoards
                0x500a8bc4                xChannelIOReadSendData
                0x500aab54                xSysdevicePutPacket
                0x500a9650                xChannelHostState
                0x500a898e                xChannelClose
                0x500a91d4                xChannelUpload
                0x500aa474                xChannelControlBlock
                0x500aa5fa                xChannelIOWrite
                0x500aa4f6                xChannelIOInfo
                0x500a8b88                HwIfRead16(void*, void*)
                0x500aae56                xSysdeviceDownload
                0x500a8af8                HwIfWrite32(void*, void*, void*)
                0x500a93c0                xChannelFindNextFile
                0x500a96a2                xChannelInfo
                0x500a8c1e                xChannelGetSendPacket
                0x500a89ca                xDriverClose
                0x500a93e2                xSysdeviceFindFirstFile
                0x500aa75e                xChannelIORead
                0x500aa8cc                xChannelReset
                0x500aa394                xChannelExtendedStatusBlock
                0x500a8e76                xChannelRegisterNotification
                0x500aa3e4                xChannelCommonStatusBlock
                0x500aa910                xChannelBusState
                0x500a89fa                xChannelUnregisterNotification
                0x500aa330                xChannelUserBlock
                0x500a987a                xDriverMemoryPointer
                0x500a980a                xDriverEnumChannels
                0x500aa91c                xChannelConfigLock
                0x500a9116                xSysdeviceUpload
 .text          0x500ab064     0x2706 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXInit_cpp.o)
                0x500ad43e                cifXStartModule(DEVICEINSTANCEtag*, unsigned long, char*, unsigned long, void (*)(CIFX_PACKETtag*, void*), void*)
                0x500ad300                cifXTKitAddDevice
                0x500ab098                cifXTKitDisableHWInterrupt
                0x500abcbe                cifXReadFirmwareIdent(DEVICEINSTANCEtag*, unsigned long, void (*)(CIFX_PACKETtag*, void*), void*)
                0x500ad6fe                cifXTKitCyclicTimer
                0x500ab56e                cifXTKitDeinit
                0x500ab81c                IntHandlerExternal(int, void*)
                0x500ab0c8                cifXHandleWarmstartParameter
                0x500ab640                cifXTKitInit
                0x500ab064                cifXTKitEnableHWInterrupt
                0x500ab6fc                cifXTKitRemoveDevice
 *fill*         0x500ad76a        0x2 00
 .text          0x500ad76c     0x1d08 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXHWFunctions_cpp.o)
                0x500adcdc                DEV_GetMBXState
                0x500adc2c                DEV_IsReady
                0x500adb40                DEV_TriggerWatchdog
                0x500aee92                DEV_BusState
                0x500adfe2                DEV_WaitForReady_Poll
                0x500adde4                DEV_ToggleSyncBit
                0x500ae86e                DEV_WaitForBitState
                0x500ad76c                DEV_GetIOBitstate
                0x500adeda                DEV_WaitForRunning_Poll
                0x500aed14                DEV_CheckCOSFlags
                0x500adca8                DEV_GetHostState
                0x500aec32                DEV_SetHostState
                0x500af04a                DEV_GetPacket
                0x500adf4c                DEV_WaitForNotRunning_Poll
                0x500add52                DEV_IsCommunicating
                0x500ade32                DEV_ReadWriteBlock
                0x500af170                DEV_PutPacket
                0x500ae726                DEV_WaitForSyncState
                0x500ae0fa                DEV_WaitForNotReady_Poll
                0x500af286                DEV_TransferPacket
                0x500ad914                DEV_ReadHandshakeFlags
                0x500ae218                DEV_DoSystemBootstart
                0x500aea28                DEV_DoHostCOSChange
                0x500ad7d8                DEV_ToggleBit
                0x500ada48                DEV_GetHandshakeBitState
                0x500aeb24                DEV_DoChannelInit
                0x500adab0                DEV_IsRunning
                0x500af388                DEV_DeleteConfig
                0x500ad824                DEV_ReadHostFlags
                0x500ad8d8                DEV_WriteHandshakeFlags
                0x500ae4d6                DEV_DoSystemStart
 .text          0x500af474      0x7fa C:/RTOS-WC/libRTOS-WC.a(SRC_cifXInterrupt_cpp.o)
                0x500afa12                cifXTKitISRHandler
                0x500af59a                cifXTKitDSRHandler
 *fill*         0x500afc6e        0x2 00
 .text          0x500afc70     0x20da C:/RTOS-WC/libRTOS-WC.a(SRC_md5_cpp.o)
                0x500b1b9e                md5_init
                0x500afc70                md5_memcpy(void*, void const*, long)
                0x500b1cb8                md5_finish
                0x500b1bd8                md5_append
 *fill*         0x500b1d4a        0x2 00
 .text          0x500b1d4c       0x5e C:/RTOS-WC/libRTOS-WC.a(USER_TKitUser_Custom_cpp.o)
                0x500b1d6a                USER_GetConfigurationFile
                0x500b1d8e                USER_GetWarmstartParameters
                0x500b1d56                USER_GetFirmwareFile
                0x500b1d74                USER_GetOSFile
                0x500b1da0                USER_GetInterruptEnable
                0x500b1d4c                USER_GetFirmwareFileCount
                0x500b1d98                USER_Trace
                0x500b1d60                USER_GetConfigurationFileCount
                0x500b1d7e                USER_GetBootloaderFile
                0x500b1d86                USER_GetAliasName
 *fill*         0x500b1daa        0x2 00
 .text          0x500b1dac      0xba0 C:/RTOS-WC/libRTOS-WC.a(_double.o)
                0x500b28aa                __cmpdf2
                0x500b1e0c                __adddf3
                0x500b2774                __negdf2
                0x500b2484                __divdf3
                0x500b27d2                __cmpdf2_internal
                0x500b22a8                __muldf3
                0x500b1e06                __subdf3
 .text          0x500b294c       0x76 C:/RTOS-WC/libRTOS-WC.a(_fixunsdfsi.o)
                0x500b294c                __fixunsdfsi
 *fill*         0x500b29c2        0x2 00
 .text          0x500b29c4       0x74 C:/RTOS-WC/libRTOS-WC.a(_floatex.o)
                0x500b29d0                $_exception_handler
                0x500b29c4                __clear_sticky_bit
 .text          0x500b2a38       0x22 C:/RTOS-WC/libRTOS-WC.a(_gedf2.o)
                0x500b2a38                __gedf2
 *fill*         0x500b2a5a        0x2 00
 .text          0x500b2a5c      0x4b4 C:/RTOS-WC/libRTOS-WC.a(fpgnulib.o)
                0x500b2ef6                __fixsfsi
                0x500b2ba0                __floatsidf
                0x500b2c74                __extendsfdf2
                0x500b2b32                __floatunsidf
                0x500b2e74                __fixdfsi
                0x500b2c5a                __floatsisf
                0x500b2cf8                __truncdfsf2
                0x500b2a5c                __unordsf2
                0x500b2c40                __floatunsisf
                0x500b2ab8                __unorddf2
 .text          0x500b2f10       0x7a C:/RTOS-WC/libRTOS-WC.a(BoardNet_cpp.o)
                0x500b2f10                Board::GetMII(int)
 *fill*         0x500b2f8a        0x2 00
 .text          0x500b2f8c      0x13c C:/RTOS-WC/libRTOS-WC.a(Board_asm.o)
                0x500b2f8c                Board::MultiBootMemoryInit()
 .text          0x500b30c8       0xda C:/RTOS-WC/libRTOS-WC.a(54455_MCF5445xTask_cpp.o)
                0x500b30c8                Task::GetRunAddress() const
                0x500b30da                Task::GetTickAddress() const
                0x500b30ec                Task::Initialize()
 *fill*         0x500b31a2        0x2 00
 .text          0x500b31a4      0x1b6 C:/RTOS-WC/libRTOS-WC.a(54455_WatchDog_cpp.o)
                0x500b31a4                WatchDog::WatchDog()
                0x500b31e8                WatchDog::DisableWatchDog()
                0x500b3320                WatchDog::~WatchDog()
                0x500b3336                WatchDog::~WatchDog()
                0x500b3214                WatchDog::IntHandler(int, void*)
                0x500b31c8                WatchDog::EnableWatchDog()
                0x500b32e4                WatchDog::InitWatchDog(int)
                0x500b31fe                WatchDog::kickWatchDog()
                0x500b3348                WatchDog::~WatchDog()
                0x500b31b6                WatchDog::WatchDog()
 *fill*         0x500b335a        0x2 00
 .text          0x500b335c      0x1b0 C:/RTOS-WC/libRTOS-WC.a(RTOS_Event_cpp.o)
                0x500b33b4                Event::~Event()
                0x500b338c                Event::~Event()
                0x500b3426                Event::Wait(int)
                0x500b335c                Event::Event(char*)
                0x500b33dc                Event::SetEvent()
                0x500b3374                Event::Event(char*)
 .text          0x500b350c      0x366 C:/RTOS-WC/libRTOS-WC.a(RTOS_MailBox_cpp.o)
                0x500b35f2                MailBox::TryFetch(void**)
                0x500b350c                MailBox::Post(void*, int)
                0x500b3798                MailBox::Fetch(void**, int)
                0x500b370a                MailBox::TryPost(void*)
                0x500b36c2                MailBox::MailBox(int)
                0x500b367a                MailBox::MailBox(int)
 *fill*         0x500b3872        0x2 00
 .text          0x500b3874      0x1fa C:/RTOS-WC/libRTOS-WC.a(Net_LAN8701_cpp.o)
                0x500b3a0e                LAN8701::LAN8701(int, int)
                0x500b3874                LAN8701::ReadLinkStatus()
                0x500b39f8                LAN8701::~LAN8701()
                0x500b39b8                LAN8701::~LAN8701()
                0x500b3a3e                LAN8701::LAN8701(int, int)
                0x500b389e                LAN8701::WriteSMIRegister(int, int)
                0x500b3894                LAN8701::GetLinkStatus()
                0x500b394e                LAN8701::Verify()
                0x500b39e2                LAN8701::~LAN8701()
 *fill*         0x500b3a6e        0x2 00
 .text          0x500b3a70      0x2c0 C:/RTOS-WC/libRTOS-WC.a(Net_KSZ8863RLL_cpp.o)
                0x500b3b0e                KSZ8863RLL::~KSZ8863RLL()
                0x500b3ac4                KSZ8863RLL::GetLinkStatus()
                0x500b3b24                KSZ8863RLL::Verify()
                0x500b3cd0                KSZ8863RLL::KSZ8863RLL(int, int)
                0x500b3d00                KSZ8863RLL::KSZ8863RLL(int, int)
                0x500b3ace                KSZ8863RLL::~KSZ8863RLL()
                0x500b3a70                KSZ8863RLL::ReadLinkStatus()
                0x500b3af8                KSZ8863RLL::~KSZ8863RLL()
 .text          0x500b3d30      0x164 C:/RTOS-WC/libRTOS-WC.a(Flash_Flash_cpp.o)
                0x500b3d30                FlashAccess::FlashAccess(int)
                0x500b3d50                FlashAccess::FlashAccess(int)
                0x500b3d96                FlashAccess::Read(unsigned int)
                0x500b3e24                Flash::Flash(char*, unsigned int, int, int, int)
                0x500b3db4                Flash::Flash(char*, unsigned int, int, int, int)
                0x500b3d70                FlashAccess::Write(unsigned int, unsigned int)
 .text          0x500b3e94      0x65a C:/RTOS-WC/libRTOS-WC.a(Flash_FlashAMD_cpp.o)
                0x500b42da                FlashAMD::ReadFlashType()
                0x500b3ee2                FlashAMD::Unlock(void*, int)
                0x500b413e                FlashAMD::Program(void*, void*, int, void (*)(int, int))
                0x500b3f06                FlashAMD::FlashAMD(char*, unsigned int, int, int, int)
                0x500b44ca                FlashAMD::Identify()
                0x500b3fae                FlashAMD::Erase(void*, int, void (*)(int, int))
                0x500b3f40                FlashAMD::FlashAMD(char*, unsigned int, int, int, int)
                0x500b3ebe                FlashAMD::Lock(void*, int)
                0x500b3e94                FlashAMD::UnlockChip()
                0x500b3ea4                FlashAMD::GetSectorSize(void*)
                0x500b3e9c                FlashAMD::LockChip()
                0x500b3f7a                FlashAMD::WaitFor(unsigned int, unsigned int)
 *fill*         0x500b44ee        0x2 00
 .text          0x500b44f0     0x151c C:/RTOS-WC/libRTOS-WC.a(BlkDev_BlockDevice_cpp.o)
                0x500b48c2                BlockDevice::ReadSectorIntoCache(int, int)
                0x500b4f64                BlockDevice::~BlockDevice()
                0x500b4dd8                BlockDevice::~BlockDevice()
                0x500b44f0                BlockDevice::FlushCacheBlock(CacheBlock*)
                0x500b4d1c                BlockDevice::ProbeDetectMedia()
                0x500b5004                BlockDevice::FlushCache()
                0x500b47cc                BlockDevice::WriteSectorIntoCache(int, int, unsigned char*)
                0x500b4ae0                BlockDevice::WriteSector(BlockDevice::Message&)
                0x500b4c16                BlockDevice::InitCache(int, int)
                0x500b4ec4                BlockDevice::BlockDevice(char*, int, bool)
                0x500b4a76                BlockDevice::DeleteCache()
                0x500b584e                BlockDevice::Run()
                0x500b4e24                BlockDevice::BlockDevice(char*, int, bool)
                0x500b4fb8                BlockDevice::~BlockDevice()
                0x500b577e                BlockDevice::FlushCacheBlock(BlockDevice::Message&)
                0x500b51a6                BlockDevice::WriteSector(int, void*)
                0x500b54f4                BlockDevice::ReadSector(BlockDevice::Message&)
                0x500b473c                BlockDevice::MakeMRU(int)
                0x500b499a                BlockDevice::Tick()
                0x500b534e                BlockDevice::ReadSector(int, void*)
                0x500b5676                BlockDevice::FlushCache(BlockDevice::Message&)
                0x500b4650                BlockDevice::FindCacheBlockContainingSector(int)
 .text          0x500b5a0c      0x158 C:/RTOS-WC/libRTOS-WC.a(BlkDev_CacheBlock_cpp.o)
                0x500b5a84                CacheBlock::~CacheBlock()
                0x500b5b10                CacheBlock::CacheBlock(int, int)
                0x500b5a0c                CacheBlock::Initialize(int)
                0x500b5aa0                CacheBlock::~CacheBlock()
                0x500b5abc                CacheBlock::CacheBlock(int, int)
                0x500b5a58                CacheBlock::~CacheBlock()
 .text          0x500b5b64      0x114 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXEndianess_cpp.o)
                0x500b5b64                cifXConvertEndianess(void*, int, CIFX_ENDIANESS_ENTRY_Ttag const*, int)
 .text          0x500b5c78      0x4ba C:/RTOS-WC/libRTOS-WC.a(54455_MII_cpp.o)
                0x500b5dc8                MII::ReadRegister(int)
                0x500b5f94                MII::WriteSMIRegister(int, int)
                0x500b5d20                MII::MII(int, int, int)
                0x500b610e                MII::~MII()
                0x500b5c78                MII::MII(int, int, int)
                0x500b6016                MII::PrintPartSpecificMiiRegisters(bool)
                0x500b6120                MII::~MII()
                0x500b5f04                MII::ReadSMIRegister(int)
                0x500b6034                MII::PrintMiiRegisters(bool, bool)
                0x500b60f8                MII::~MII()
                0x500b5e6c                MII::WriteRegister(int, int)
 *(.text.*)
 .text._ZN9InputTaskD0Ev
                0x500b6132       0x2a obj-WC/InputTask_cpp.o
                0x500b6132                InputTask::~InputTask()
 .text._ZN9InputTaskD1Ev
                0x500b615c       0x16 obj-WC/InputTask_cpp.o
                0x500b615c                InputTask::~InputTask()
 .text._ZN7MIATaskD0Ev
                0x500b6172       0x64 obj-WC/MIATask_cpp.o
                0x500b6172                MIATask::~MIATask()
 .text._ZN7MIATaskD1Ev
                0x500b61d6       0x5c obj-WC/MIATask_cpp.o
                0x500b61d6                MIATask::~MIATask()
 .text._ZN4FifoItED1Ev
                0x500b6232       0x2c obj-WC/WebSite_cpp.o
                0x500b6232                Fifo<unsigned short>::~Fifo()
 .text._ZN14UploadFirmwareD0Ev
                0x500b625e       0x44 obj-WC/UploadFirmWareTask_cpp.o
                0x500b625e                UploadFirmware::~UploadFirmware()
 .text._ZN14UploadFirmwareD1Ev
                0x500b62a2       0x3c obj-WC/UploadFirmWareTask_cpp.o
                0x500b62a2                UploadFirmware::~UploadFirmware()
 .text._ZN19FirmWareUpgradeTaskD1Ev
                0x500b62de       0x3c obj-WC/FirmWareUpgrade_cpp.o
                0x500b62de                FirmWareUpgradeTask::~FirmWareUpgradeTask()
 .text._ZN19FirmWareUpgradeTaskD0Ev
                0x500b631a       0x44 obj-WC/FirmWareUpgrade_cpp.o
                0x500b631a                FirmWareUpgradeTask::~FirmWareUpgradeTask()
 .text._ZN13ModBusRcvTaskD0Ev
                0x500b635e       0x2a obj-WC/ModBusRcvTask_cpp.o
                0x500b635e                ModBusRcvTask::~ModBusRcvTask()
 .text._ZN13ModBusRcvTaskD1Ev
                0x500b6388       0x16 obj-WC/ModBusRcvTask_cpp.o
                0x500b6388                ModBusRcvTask::~ModBusRcvTask()
 .text._ZN4FifoI9MBMessageED1Ev
                0x500b639e       0x2c obj-WC/ModBusRcvTask_cpp.o
                0x500b639e                Fifo<MBMessage>::~Fifo()
 .text._ZN21ReceiveCommandHandlerD0Ev
                0x500b63ca       0x2a obj-WC/ReceiveCommandHandler_cpp.o
                0x500b63ca                ReceiveCommandHandler::~ReceiveCommandHandler()
 .text._ZN21ReceiveCommandHandlerD1Ev
                0x500b63f4       0x16 obj-WC/ReceiveCommandHandler_cpp.o
                0x500b63f4                ReceiveCommandHandler::~ReceiveCommandHandler()
 .text._ZN14ModBusSendTaskD1Ev
                0x500b640a       0x5c obj-WC/ModBusSendTask_cpp.o
                0x500b640a                ModBusSendTask::~ModBusSendTask()
 .text._ZN14ModBusSendTaskD0Ev
                0x500b6466       0x64 obj-WC/ModBusSendTask_cpp.o
                0x500b6466                ModBusSendTask::~ModBusSendTask()
 .text._ZN9NRTModbusD1Ev
                0x500b64ca       0x3c obj-WC/NRTModbusTask_cpp.o
                0x500b64ca                NRTModbus::~NRTModbus()
 .text._ZN9NRTModbusD0Ev
                0x500b6506       0x44 obj-WC/NRTModbusTask_cpp.o
                0x500b6506                NRTModbus::~NRTModbus()
 .text._ZN16WelderSearchTaskD0Ev
                0x500b654a       0x2a obj-WC/WelderSearchTask_cpp.o
                0x500b654a                WelderSearchTask::~WelderSearchTask()
 .text._ZN16WelderSearchTaskD1Ev
                0x500b6574       0x16 obj-WC/WelderSearchTask_cpp.o
                0x500b6574                WelderSearchTask::~WelderSearchTask()
 .text._ZN12FieldbusTaskD1Ev
                0x500b658a       0x74 obj-WC/FieldbusTask_cpp.o
                0x500b658a                FieldbusTask::~FieldbusTask()
 .text._ZN12FieldbusTaskD0Ev
                0x500b65fe       0x7c obj-WC/FieldbusTask_cpp.o
                0x500b65fe                FieldbusTask::~FieldbusTask()
 .text._ZN12ShutDownTaskD0Ev
                0x500b667a       0x2a obj-WC/ShutDownTask_cpp.o
                0x500b667a                ShutDownTask::~ShutDownTask()
 .text._ZN12ShutDownTaskD1Ev
                0x500b66a4       0x16 obj-WC/ShutDownTask_cpp.o
                0x500b66a4                ShutDownTask::~ShutDownTask()
 .text._ZN18ExternalStatusTaskD1Ev
                0x500b66ba       0x3c obj-WC/ExternalStatusTask_cpp.o
                0x500b66ba                ExternalStatusTask::~ExternalStatusTask()
 .text._ZN18ExternalStatusTaskD0Ev
                0x500b66f6       0x44 obj-WC/ExternalStatusTask_cpp.o
                0x500b66f6                ExternalStatusTask::~ExternalStatusTask()
 .text._ZN12JSONWeldData7GetTypeEv
                0x500b673a        0xa obj-WC/DcxManagerHandler_cpp.o
                0x500b673a                JSONWeldData::GetType()
 .text._ZN10JSONPreset7GetTypeEv
                0x500b6744        0xa obj-WC/DcxManagerHandler_cpp.o
                0x500b6744                JSONPreset::GetType()
 .text._ZN14JSONWeldResult7GetTypeEv
                0x500b674e        0xa obj-WC/DcxManagerHandler_cpp.o
                0x500b674e                JSONWeldResult::GetType()
 .text._ZN9JSONAlarm7GetTypeEv
                0x500b6758        0xa obj-WC/DcxManagerHandler_cpp.o
                0x500b6758                JSONAlarm::GetType()
 .text._ZN15JSONCycleNumber7GetTypeEv
                0x500b6762        0xa obj-WC/DcxManagerHandler_cpp.o
                0x500b6762                JSONCycleNumber::GetType()
 .text._ZN7PtrListI4JSONED1Ev
                0x500b676c        0xc obj-WC/DcxManagerHandler_cpp.o
                0x500b676c                PtrList<JSON>::~PtrList()
 .text._ZN7PtrListI14HttpServerDescED1Ev
                0x500b6778        0xc C:/RTOS-WC/libRTOS-WC.a(API_HTTP_cpp.o)
                0x500b6778                PtrList<HttpServerDesc>::~PtrList()
 .text._ZN8IdleTaskD0Ev
                0x500b6784       0x2a C:/RTOS-WC/libRTOS-WC.a(RTOS_RTOS_cpp.o)
                0x500b6784                IdleTask::~IdleTask()
 .text._ZN8IdleTaskD1Ev
                0x500b67ae       0x16 C:/RTOS-WC/libRTOS-WC.a(RTOS_RTOS_cpp.o)
                0x500b67ae                IdleTask::~IdleTask()
 .text._ZN10PrintfTaskD0Ev
                0x500b67c4       0x44 C:/RTOS-WC/libRTOS-WC.a(RTOS_PrintfTask_cpp.o)
                0x500b67c4                PrintfTask::~PrintfTask()
 .text._ZN10PrintfTaskD1Ev
                0x500b6808       0x3c C:/RTOS-WC/libRTOS-WC.a(RTOS_PrintfTask_cpp.o)
                0x500b6808                PrintfTask::~PrintfTask()
 .text._ZN11TaskSlowLedD0Ev
                0x500b6844       0x2a C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
                0x500b6844                TaskSlowLed::~TaskSlowLed()
 .text._ZN11TaskSlowLedD1Ev
                0x500b686e       0x16 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
                0x500b686e                TaskSlowLed::~TaskSlowLed()
 .text._ZN11TaskFastLedD0Ev
                0x500b6884       0x2a C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
                0x500b6884                TaskFastLed::~TaskFastLed()
 .text._ZN11TaskFastLedD1Ev
                0x500b68ae       0x16 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
                0x500b68ae                TaskFastLed::~TaskFastLed()
 .text._ZN11TaskDispLedD0Ev
                0x500b68c4       0x2a C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
                0x500b68c4                TaskDispLed::~TaskDispLed()
 .text._ZN11TaskDispLedD1Ev
                0x500b68ee       0x16 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
                0x500b68ee                TaskDispLed::~TaskDispLed()
 .text._ZN11TaskManagerD0Ev
                0x500b6904       0x44 C:/RTOS-WC/libRTOS-WC.a(RTOS_TaskManager_cpp.o)
                0x500b6904                TaskManager::~TaskManager()
 .text._ZN11TaskManagerD1Ev
                0x500b6948       0x3c C:/RTOS-WC/libRTOS-WC.a(RTOS_TaskManager_cpp.o)
                0x500b6948                TaskManager::~TaskManager()
 .text._ZN7PtrListI8EthernetED1Ev
                0x500b6984        0xc C:/RTOS-WC/libRTOS-WC.a(Net_Ethernet_cpp.o)
                0x500b6984                PtrList<Ethernet>::~PtrList()
 .text._ZN7PtrListI14CustomProtocolED1Ev
                0x500b6990        0xc C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o)
                0x500b6990                PtrList<CustomProtocol>::~PtrList()
 .text._ZN7PtrListI10RouteTableED1Ev
                0x500b699c        0xc C:/RTOS-WC/libRTOS-WC.a(Net_IPv4_cpp.o)
                0x500b699c                PtrList<RouteTable>::~PtrList()
 .text._ZN10TftpClientD0Ev
                0x500b69a8       0x44 C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
                0x500b69a8                TftpClient::~TftpClient()
 .text._ZN7PtrListI10TftpClientED1Ev
                0x500b69ec        0xc C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
                0x500b69ec                PtrList<TftpClient>::~PtrList()
 .text._ZN10TftpClientD1Ev
                0x500b69f8       0x3c C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
                0x500b69f8                TftpClient::~TftpClient()
 .text._ZN10DhcpServerD0Ev
                0x500b6a34       0x2a C:/RTOS-WC/libRTOS-WC.a(Net_DhcpServer_cpp.o)
                0x500b6a34                DhcpServer::~DhcpServer()
 .text._ZN10DhcpServerD1Ev
                0x500b6a5e       0x16 C:/RTOS-WC/libRTOS-WC.a(Net_DhcpServer_cpp.o)
                0x500b6a5e                DhcpServer::~DhcpServer()
 .text._ZNK11BlockDevice13GetSectorSizeEv
                0x500b6a74        0xe C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o)
                0x500b6a74                BlockDevice::GetSectorSize() const
 .text._ZNK13RamDiskDevice12GetBlockSizeEv
                0x500b6a82        0xa C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o)
                0x500b6a82                RamDiskDevice::GetBlockSize() const
 .text._ZNK13RamDiskDevice19IsPartitionedDeviceEv
                0x500b6a8c        0xa C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o)
                0x500b6a8c                RamDiskDevice::IsPartitionedDevice() const
 .text._ZNK14FRAMDiskDevice12GetBlockSizeEv
                0x500b6a96        0xa C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
                0x500b6a96                FRAMDiskDevice::GetBlockSize() const
 .text._ZNK14FRAMDiskDevice13GetSectorSizeEv
                0x500b6aa0        0xe C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
                0x500b6aa0                FRAMDiskDevice::GetSectorSize() const
 .text._ZNK14FRAMDiskDevice19IsPartitionedDeviceEv
                0x500b6aae        0xa C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
                0x500b6aae                FRAMDiskDevice::IsPartitionedDevice() const
 .text._ZN4FileD0Ev
                0x500b6ab8       0x16 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
                0x500b6ab8                File::~File()
 .text._ZN4FileD1Ev
                0x500b6ace       0x12 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
                0x500b6ace                File::~File()
 .text._ZN13TarFileSystem7TarFileD1Ev
                0x500b6ae0       0x12 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
                0x500b6ae0                TarFileSystem::TarFile::~TarFile()
 .text._ZN13TarFileSystem7TarFileD0Ev
                0x500b6af2       0x16 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
                0x500b6af2                TarFileSystem::TarFile::~TarFile()
 .text._ZN14FRAMFileSystem8FRAMFileD1Ev
                0x500b6b08       0x12 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
                0x500b6b08                FRAMFileSystem::FRAMFile::~FRAMFile()
 .text._ZN14FRAMFileSystem8FRAMFileD0Ev
                0x500b6b1a       0x16 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
                0x500b6b1a                FRAMFileSystem::FRAMFile::~FRAMFile()
 .text._ZNK11BlockDevice14GetSectorCountEv
                0x500b6b30        0xa C:/RTOS-WC/libRTOS-WC.a(BlkDev_BlockDevice_cpp.o)
                0x500b6b30                BlockDevice::GetSectorCount() const
                0x500b6b3c                . = ALIGN (0x4)
 *fill*         0x500b6b3a        0x2 00
 *(.rodata)
 .rodata        0x500b6b3c      0x200 obj-WC/Main_cpp.o
 .rodata        0x500b6d3c       0x10 obj-WC/WCTask_cpp.o
 .rodata        0x500b6d4c      0x4b0 obj-WC/WebSite_cpp.o
 .rodata        0x500b71fc       0x3e obj-WC/UploadFirmWareTask_cpp.o
 .rodata        0x500b723a       0x22 obj-WC/ScanResDetect_cpp.o
 .rodata        0x500b725c      0x442 obj-WC/UserIO_cpp.o
                0x500b7272                AoutPins
                0x500b726f                AinPins
                0x500b725c                DigInPins
                0x500b7266                DigOutPins
 .rodata        0x500b769e       0x90 obj-WC/StateMachineDrv_cpp.o
 .rodata        0x500b772e      0x284 obj-WC/ReceiveCommandHandler_cpp.o
 .rodata        0x500b79b2       0x11 obj-WC/ModBusSendTask_cpp.o
 *fill*         0x500b79c3        0x1 00
 .rodata        0x500b79c4      0x55c obj-WC/StateTable_cpp.o
 .rodata        0x500b7f20       0x1d obj-WC/FieldbusTable_cpp.o
 *fill*         0x500b7f3d        0x1 00
 .rodata        0x500b7f3e        0x8 C:/RTOS-WC/libRTOS-WC.a(54455_CPU_cpp.o)
                0x500b7f3e                CPU::ResetD0
                0x500b7f42                CPU::ResetD1
 .rodata        0x500b7f46       0x50 C:/RTOS-WC/libRTOS-WC.a(54455_DSPI_cpp.o)
 .rodata        0x500b7f96       0x80 C:/RTOS-WC/libRTOS-WC.a(54455_I2C_cpp.o)
                0x500b7f96                I2C::divider
 .rodata        0x500b8016       0x88 C:/RTOS-WC/libRTOS-WC.a(API_SysLog_cpp.o)
 .rodata        0x500b809e        0xc C:/RTOS-WC/libRTOS-WC.a(Net_ARP_cpp.o)
                0x500b809e                ethbroadcast
                0x500b80a4                ethzero
 .rodata        0x500b80aa       0x20 C:/RTOS-WC/libRTOS-WC.a(Net_TCP_cpp.o)
 .rodata        0x500b80ca       0x3c C:/RTOS-WC/libRTOS-WC.a(Net_Socket_cpp.o)
 .rodata        0x500b8106        0x5 C:/RTOS-WC/libRTOS-WC.a(Net_TcpServer_cpp.o)
 *fill*         0x500b810b        0x1 00
 .rodata        0x500b810c       0x29 C:/RTOS-WC/libRTOS-WC.a(Net_HttpConnection_cpp.o)
 .rodata        0x500b8135        0xf C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
 .rodata        0x500b8144        0xf C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
 .rodata        0x500b8153        0x8 C:/RTOS-WC/libRTOS-WC.a(Dev_PCF8563_cpp.o)
 .rodata        0x500b815b       0x31 C:/RTOS-WC/libRTOS-WC.a(OS_OS_Custom_cpp.o)
 .rodata        0x500b818c      0x400 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXDownload_cpp.o)
 .rodata        0x500b858c      0x31c C:/RTOS-WC/libRTOS-WC.a(SRC_cifXFunctions_cpp.o)
 .rodata        0x500b88a8       0xb8 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXInit_cpp.o)
 .rodata        0x500b8960       0x44 C:/RTOS-WC/libRTOS-WC.a(SRC_md5_cpp.o)
 *(.rodata.*)
 .rodata.str1.1
                0x500b89a4      0x19b obj-WC/Main_cpp.o
                                0x19f (size before relaxing)
 .rodata.str1.1
                0x500b8b3f      0xf22 obj-WC/InputTask_cpp.o
                                0xf2f (size before relaxing)
 *fill*         0x500b9a61        0x3 00
 .rodata._ZTV9InputTask
                0x500b9a64       0x18 obj-WC/InputTask_cpp.o
                0x500b9a64                vtable for InputTask
 .rodata.str1.1
                0x500b9a7c      0x1b8 obj-WC/WCTask_cpp.o
                                0x1ca (size before relaxing)
 .rodata._ZTV6WCTask
                0x500b9c34       0x18 obj-WC/WCTask_cpp.o
                0x500b9c34                vtable for WCTask
 .rodata.str1.1
                0x500b9c4c       0x19 obj-WC/MIATask_cpp.o
                                 0x2b (size before relaxing)
 *fill*         0x500b9c65        0x3 00
 .rodata._ZTV7MIATask
                0x500b9c68       0x18 obj-WC/MIATask_cpp.o
                0x500b9c68                vtable for MIATask
 .rodata.str1.1
                0x500b9c80      0x54a obj-WC/LOG_cpp.o
                                0x58c (size before relaxing)
 .rodata.str1.1
                0x500ba1ca       0x4a obj-WC/PasscodeConfig_cpp.o
                                 0x4e (size before relaxing)
 .rodata.str1.1
                0x500ba214       0x18 obj-WC/preset_cpp.o
 .rodata.str1.1
                0x500ba22c       0x23 obj-WC/FRAM_cpp.o
 .rodata.str1.1
                0x500ba24f     0x374c obj-WC/WebSite_cpp.o
                               0x3802 (size before relaxing)
 .rodata.str1.1
                0x500bd99b      0x141 obj-WC/UploadFirmWareTask_cpp.o
                                0x1b0 (size before relaxing)
 .rodata._ZTV14UploadFirmware
                0x500bdadc       0x18 obj-WC/UploadFirmWareTask_cpp.o
                0x500bdadc                vtable for UploadFirmware
 .rodata.str1.1
                0x500bdaf4       0x14 obj-WC/ScanResDetect_cpp.o
 .rodata.str1.1
                0x500bdb08      0x145 obj-WC/FirmWareUpgrade_cpp.o
                                0x157 (size before relaxing)
 *fill*         0x500bdc4d        0x3 00
 .rodata._ZTV19FirmWareUpgradeTask
                0x500bdc50       0x18 obj-WC/FirmWareUpgrade_cpp.o
                0x500bdc50                vtable for FirmWareUpgradeTask
 .rodata.str1.1
                0x500bdc68        0xc obj-WC/RTClock_cpp.o
 .rodata.str1.1
                0x500bdc74      0x142 obj-WC/UserIO_cpp.o
 .rodata.str1.1
                0x500bddb6      0x100 obj-WC/StateMachineDrv_cpp.o
                                0x10f (size before relaxing)
 .rodata.str1.1
                0x500bdeb6       0x66 obj-WC/ModBusRcvTask_cpp.o
                                 0x81 (size before relaxing)
 .rodata._ZTV13ModBusRcvTask
                0x500bdf1c       0x18 obj-WC/ModBusRcvTask_cpp.o
                0x500bdf1c                vtable for ModBusRcvTask
 .rodata.str1.1
                0x500bdf34       0x7b obj-WC/ReceiveCommandHandler_cpp.o
                                 0x80 (size before relaxing)
 *fill*         0x500bdfaf        0x1 00
 .rodata._ZTV21ReceiveCommandHandler
                0x500bdfb0       0x18 obj-WC/ReceiveCommandHandler_cpp.o
                0x500bdfb0                vtable for ReceiveCommandHandler
 .rodata.str1.1
                0x500bdfc8       0x97 obj-WC/ModBusSendTask_cpp.o
                                 0xc0 (size before relaxing)
 *fill*         0x500be05f        0x1 00
 .rodata._ZTV14ModBusSendTask
                0x500be060       0x18 obj-WC/ModBusSendTask_cpp.o
                0x500be060                vtable for ModBusSendTask
 .rodata.str1.1
                0x500be078       0x48 obj-WC/FieldBus_cpp.o
 .rodata._ZTV8FieldBus
                0x500be0c0       0x28 obj-WC/FieldBus_cpp.o
                0x500be0c0                vtable for FieldBus
 .rodata.str1.1
                0x500be0e8       0x37 obj-WC/NRTModbusTask_cpp.o
                                 0x51 (size before relaxing)
 *fill*         0x500be11f        0x1 00
 .rodata._ZTV9NRTModbus
                0x500be120       0x18 obj-WC/NRTModbusTask_cpp.o
                0x500be120                vtable for NRTModbus
 .rodata._ZTV8ProfiBus
                0x500be138       0x28 obj-WC/ProfiBus_cpp.o
                0x500be138                vtable for ProfiBus
 .rodata.str1.1
                0x500be160       0x1f obj-WC/EthernetIP_cpp.o
 *fill*         0x500be17f        0x1 00
 .rodata._ZTV10EthernetIP
                0x500be180       0x28 obj-WC/EthernetIP_cpp.o
                0x500be180                vtable for EthernetIP
 .rodata.str1.1
                0x500be1a8       0xa7 obj-WC/WelderSearchTask_cpp.o
                                 0xbc (size before relaxing)
 *fill*         0x500be24f        0x1 00
 .rodata._ZTV16WelderSearchTask
                0x500be250       0x18 obj-WC/WelderSearchTask_cpp.o
                0x500be250                vtable for WelderSearchTask
 .rodata.str1.1
                0x500be268       0x1c obj-WC/ObjDictionary_cpp.o
 .rodata.str1.1
                0x500be284      0x235 obj-WC/FieldbusTask_cpp.o
                                0x23a (size before relaxing)
 *fill*         0x500be4b9        0x3 00
 .rodata._ZTV12FieldbusTask
                0x500be4bc       0x18 obj-WC/FieldbusTask_cpp.o
                0x500be4bc                vtable for FieldbusTask
 .rodata.str1.1
                0x500be4d4      0x8e6 obj-WC/Alarms_cpp.o
                                0x923 (size before relaxing)
 .rodata.str1.1
                0x500bedba       0x3e obj-WC/ShutDownTask_cpp.o
 .rodata._ZTV12ShutDownTask
                0x500bedf8       0x18 obj-WC/ShutDownTask_cpp.o
                0x500bedf8                vtable for ShutDownTask
 .rodata.str1.1
                0x500bee10       0x15 obj-WC/ExternalStatusTask_cpp.o
                                 0x27 (size before relaxing)
 *fill*         0x500bee25        0x3 00
 .rodata._ZTV18ExternalStatusTask
                0x500bee28       0x18 obj-WC/ExternalStatusTask_cpp.o
                0x500bee28                vtable for ExternalStatusTask
 .rodata.str1.1
                0x500bee40      0x18d obj-WC/BDMTask_cpp.o
                                0x193 (size before relaxing)
 .rodata.str1.1
                0x500befcd       0x1a obj-WC/BDM08_cpp.o
 .rodata.str1.1
                0x500befe7      0x37a obj-WC/DcxManagerHandler_cpp.o
                                0x399 (size before relaxing)
 *fill*         0x500bf361        0x3 00
 .rodata._ZTV15JSONCycleNumber
                0x500bf364       0x10 obj-WC/DcxManagerHandler_cpp.o
                0x500bf364                vtable for JSONCycleNumber
 .rodata._ZTV9JSONAlarm
                0x500bf374       0x10 obj-WC/DcxManagerHandler_cpp.o
                0x500bf374                vtable for JSONAlarm
 .rodata._ZTV14JSONWeldResult
                0x500bf384       0x10 obj-WC/DcxManagerHandler_cpp.o
                0x500bf384                vtable for JSONWeldResult
 .rodata._ZTV10JSONPreset
                0x500bf394       0x10 obj-WC/DcxManagerHandler_cpp.o
                0x500bf394                vtable for JSONPreset
 .rodata._ZTV12JSONWeldData
                0x500bf3a4       0x10 obj-WC/DcxManagerHandler_cpp.o
                0x500bf3a4                vtable for JSONWeldData
 .rodata._ZTV4JSON
                0x500bf3b4       0x10 obj-WC/DcxManagerHandler_cpp.o
                0x500bf3b4                vtable for JSON
 .rodata.str1.1
                0x500bf3c4      0x170 C:/RTOS-WC/libRTOS-WC.a(Board_cpp.o)
 .rodata.str1.1
                0x500bf534       0x78 C:/RTOS-WC/libRTOS-WC.a(54455_CPU_cpp.o)
                                 0x7a (size before relaxing)
 .rodata.str1.1
                0x500bf5ac      0x390 C:/RTOS-WC/libRTOS-WC.a(54455_Exception_cpp.o)
                                0x39e (size before relaxing)
 .rodata.str1.1
                0x500bf93c       0x25 C:/RTOS-WC/libRTOS-WC.a(54455_Terminal_cpp.o)
 .rodata.str1.1
                0x500bf961       0xe6 C:/RTOS-WC/libRTOS-WC.a(54455_PIT_cpp.o)
 .rodata.str1.1
                0x500bfa47      0x13e C:/RTOS-WC/libRTOS-WC.a(54455_Serial_cpp.o)
                                0x153 (size before relaxing)
 .rodata.str1.1
                0x500bfb85       0x53 C:/RTOS-WC/libRTOS-WC.a(54455_FEC_cpp.o)
 .rodata._ZTV3FEC
                0x500bfbd8       0x10 C:/RTOS-WC/libRTOS-WC.a(54455_FEC_cpp.o)
                0x500bfbd8                vtable for FEC
 .rodata.str1.1
                0x500bfbe8      0x11d C:/RTOS-WC/libRTOS-WC.a(54455_MMU_cpp.o)
                                0x120 (size before relaxing)
 .rodata.str1.1
                0x500bfd05      0x104 C:/RTOS-WC/libRTOS-WC.a(54455_DSPI_cpp.o)
                                0x118 (size before relaxing)
 *fill*         0x500bfe09        0x3 00
 .rodata._ZTV4DSPI
                0x500bfe0c       0x24 C:/RTOS-WC/libRTOS-WC.a(54455_DSPI_cpp.o)
                0x500bfe0c                vtable for DSPI
 .rodata._ZTV3SPI
                0x500bfe30       0x24 C:/RTOS-WC/libRTOS-WC.a(54455_DSPI_cpp.o)
                0x500bfe30                vtable for SPI
 .rodata.str1.1
                0x500bfe54       0x5b C:/RTOS-WC/libRTOS-WC.a(54455_I2C_cpp.o)
                                 0x6b (size before relaxing)
 .rodata.str1.1
                0x500bfeaf       0x32 C:/RTOS-WC/libRTOS-WC.a(MCF_ArchDefs_cpp.o)
 .rodata.str1.1
                0x500bfee1       0xde C:/RTOS-WC/libRTOS-WC.a(MCF_FecBase_cpp.o)
 *fill*         0x500bffbf        0x1 00
 .rodata._ZTV7FecBase
                0x500bffc0       0x10 C:/RTOS-WC/libRTOS-WC.a(MCF_FecBase_cpp.o)
                0x500bffc0                vtable for FecBase
 .rodata.str1.1
                0x500bffd0       0x4e C:/RTOS-WC/libRTOS-WC.a(stdlib_Assert_cpp.o)
 .rodata.str1.1
                0x500c001e      0x12c C:/RTOS-WC/libRTOS-WC.a(stdlib_Alloc_cpp.o)
                                0x14e (size before relaxing)
 .rodata.str1.1
                0x500c014a       0x1e C:/RTOS-WC/libRTOS-WC.a(stdlib_String_cpp.o)
 .rodata.str1.1
                0x500c0168       0x27 C:/RTOS-WC/libRTOS-WC.a(API_CyGOS_cpp.o)
 .rodata.str1.1
                0x500c018f       0x56 C:/RTOS-WC/libRTOS-WC.a(API_TCPIP_cpp.o)
                                 0x67 (size before relaxing)
 .rodata.str1.1
                0x500c01e5       0x23 C:/RTOS-WC/libRTOS-WC.a(API_LinkedList_cpp.o)
 .rodata.str1.1
                0x500c0208       0x6f C:/RTOS-WC/libRTOS-WC.a(API_FileSystems_cpp.o)
 .rodata.str1.1
                0x500c0277       0x19 C:/RTOS-WC/libRTOS-WC.a(API_TFTP_cpp.o)
                                 0x54 (size before relaxing)
 .rodata.str1.1
                0x500c0290       0x57 C:/RTOS-WC/libRTOS-WC.a(API_HTTP_cpp.o)
                                 0x92 (size before relaxing)
 .rodata.str1.1
                0x500c02e7       0xd9 C:/RTOS-WC/libRTOS-WC.a(API_SysLog_cpp.o)
                                 0xf2 (size before relaxing)
 .rodata.str1.1
                0x500c03c0       0x57 C:/RTOS-WC/libRTOS-WC.a(RTOS_FIFO_cpp.o)
 .rodata.str1.1
                0x500c0417      0x110 C:/RTOS-WC/libRTOS-WC.a(RTOS_RTOS_cpp.o)
                                0x11d (size before relaxing)
 *fill*         0x500c0527        0x1 00
 .rodata._ZTV8IdleTask
                0x500c0528       0x18 C:/RTOS-WC/libRTOS-WC.a(RTOS_RTOS_cpp.o)
                0x500c0528                vtable for IdleTask
 .rodata.str1.1
                0x500c0540       0x66 C:/RTOS-WC/libRTOS-WC.a(RTOS_Task_cpp.o)
 *fill*         0x500c05a6        0x2 00
 .rodata._ZTV4Task
                0x500c05a8       0x18 C:/RTOS-WC/libRTOS-WC.a(RTOS_Task_cpp.o)
                0x500c05a8                vtable for Task
 .rodata._ZTV8TaskBase
                0x500c05c0       0x18 C:/RTOS-WC/libRTOS-WC.a(RTOS_Task_cpp.o)
                0x500c05c0                vtable for TaskBase
 .rodata.str1.1
                0x500c05d8        0x7 C:/RTOS-WC/libRTOS-WC.a(RTOS_PrintfTask_cpp.o)
                                 0x1f (size before relaxing)
 *fill*         0x500c05df        0x1 00
 .rodata._ZTV10PrintfTask
                0x500c05e0       0x18 C:/RTOS-WC/libRTOS-WC.a(RTOS_PrintfTask_cpp.o)
                0x500c05e0                vtable for PrintfTask
 .rodata.str1.1
                0x500c05f8       0x4f C:/RTOS-WC/libRTOS-WC.a(RTOS_Debug_cpp.o)
                                 0x5a (size before relaxing)
 .rodata.str1.1
                0x500c0647       0x83 C:/RTOS-WC/libRTOS-WC.a(RTOS_Mutex_cpp.o)
 .rodata.str1.1
                0x500c06ca       0x30 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
                                 0x48 (size before relaxing)
 *fill*         0x500c06fa        0x2 00
 .rodata._ZTV11TaskDispLed
                0x500c06fc       0x18 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
                0x500c06fc                vtable for TaskDispLed
 .rodata._ZTV11TaskFastLed
                0x500c0714       0x18 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
                0x500c0714                vtable for TaskFastLed
 .rodata._ZTV11TaskSlowLed
                0x500c072c       0x18 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
                0x500c072c                vtable for TaskSlowLed
 .rodata.str1.1
                0x500c0744       0x29 C:/RTOS-WC/libRTOS-WC.a(RTOS_TaskManager_cpp.o)
                                 0x41 (size before relaxing)
 *fill*         0x500c076d        0x3 00
 .rodata._ZTV11TaskManager
                0x500c0770       0x18 C:/RTOS-WC/libRTOS-WC.a(RTOS_TaskManager_cpp.o)
                0x500c0770                vtable for TaskManager
 .rodata.str1.1
                0x500c0788       0xd1 C:/RTOS-WC/libRTOS-WC.a(Net_Ethernet_cpp.o)
                                 0xd5 (size before relaxing)
 *fill*         0x500c0859        0x3 00
 .rodata._ZTV8Ethernet
                0x500c085c       0x1c C:/RTOS-WC/libRTOS-WC.a(Net_Ethernet_cpp.o)
                0x500c085c                vtable for Ethernet
 .rodata.str1.1
                0x500c0878       0x43 C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o)
                                 0x5d (size before relaxing)
 *fill*         0x500c08bb        0x1 00
 .rodata._ZTV5TcpIp
                0x500c08bc       0x18 C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o)
                0x500c08bc                vtable for TcpIp
 .rodata.str1.1
                0x500c08d4      0x20a C:/RTOS-WC/libRTOS-WC.a(Net_PktBuf_cpp.o)
                                0x20e (size before relaxing)
 .rodata.str1.1
                0x500c0ade      0x17f C:/RTOS-WC/libRTOS-WC.a(Net_ARP_cpp.o)
                                0x185 (size before relaxing)
 .rodata.str1.1
                0x500c0c5d      0x122 C:/RTOS-WC/libRTOS-WC.a(Net_IPv4_cpp.o)
                                0x129 (size before relaxing)
 .rodata.str1.1
                0x500c0d7f       0x18 C:/RTOS-WC/libRTOS-WC.a(Net_Raw_cpp.o)
                                 0x1a (size before relaxing)
 .rodata.str1.1
                0x500c0d97      0x48d C:/RTOS-WC/libRTOS-WC.a(Net_TCP_cpp.o)
                                0x4af (size before relaxing)
 .rodata.str1.1
                0x500c1224      0x11c C:/RTOS-WC/libRTOS-WC.a(Net_UDP_cpp.o)
                                0x124 (size before relaxing)
 .rodata.str1.1
                0x500c1340      0x1e9 C:/RTOS-WC/libRTOS-WC.a(Net_ICMP_cpp.o)
                                0x1eb (size before relaxing)
 .rodata.str1.1
                0x500c1529      0x5c4 C:/RTOS-WC/libRTOS-WC.a(Net_IGMP_cpp.o)
                                0x5dc (size before relaxing)
 .rodata.str1.1
                0x500c1aed      0x48c C:/RTOS-WC/libRTOS-WC.a(Net_DhcpClient_cpp.o)
                                0x4ab (size before relaxing)
 .rodata.str1.1
                0x500c1f79      0x18b C:/RTOS-WC/libRTOS-WC.a(Net_AutoIP_cpp.o)
 .rodata.str1.1
                0x500c2104      0x4c0 C:/RTOS-WC/libRTOS-WC.a(Net_Socket_cpp.o)
                                0x4d8 (size before relaxing)
 .rodata.str1.1
                0x500c25c4       0x7a C:/RTOS-WC/libRTOS-WC.a(Net_NetBuf_cpp.o)
 .rodata.str1.1
                0x500c263e      0x30c C:/RTOS-WC/libRTOS-WC.a(Net_NetConn_cpp.o)
                                0x327 (size before relaxing)
 .rodata.str1.1
                0x500c294a       0xe0 C:/RTOS-WC/libRTOS-WC.a(Net_TcpServer_cpp.o)
                                0x105 (size before relaxing)
 *fill*         0x500c2a2a        0x2 00
 .rodata._ZTV9TcpServer
                0x500c2a2c       0x20 C:/RTOS-WC/libRTOS-WC.a(Net_TcpServer_cpp.o)
                0x500c2a2c                vtable for TcpServer
 .rodata.str1.1
                0x500c2a4c       0x56 C:/RTOS-WC/libRTOS-WC.a(Net_TcpConnection_cpp.o)
 *fill*         0x500c2aa2        0x2 00
 .rodata._ZTV13TcpConnection
                0x500c2aa4       0x1c C:/RTOS-WC/libRTOS-WC.a(Net_TcpConnection_cpp.o)
                0x500c2aa4                vtable for TcpConnection
 .rodata.str1.1
                0x500c2ac0       0x34 C:/RTOS-WC/libRTOS-WC.a(Net_HttpServer_cpp.o)
 .rodata._ZTV10HttpServer
                0x500c2af4       0x20 C:/RTOS-WC/libRTOS-WC.a(Net_HttpServer_cpp.o)
                0x500c2af4                vtable for HttpServer
 .rodata.str1.1
                0x500c2b14      0xba7 C:/RTOS-WC/libRTOS-WC.a(Net_HttpConnection_cpp.o)
                                0xbf1 (size before relaxing)
 *fill*         0x500c36bb        0x1 00
 .rodata._ZTV14HttpConnection
                0x500c36bc       0x1c C:/RTOS-WC/libRTOS-WC.a(Net_HttpConnection_cpp.o)
                0x500c36bc                vtable for HttpConnection
 .rodata.str1.1
                0x500c36d8      0x17d C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
                                0x1a7 (size before relaxing)
 *fill*         0x500c3855        0x3 00
 .rodata._ZTV10TftpClient
                0x500c3858       0x18 C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
                0x500c3858                vtable for TftpClient
 .rodata.str1.1
                0x500c3870       0x7c C:/RTOS-WC/libRTOS-WC.a(Net_DNSServer_cpp.o)
 .rodata._ZTV9DNSServer
                0x500c38ec       0x18 C:/RTOS-WC/libRTOS-WC.a(Net_DNSServer_cpp.o)
                0x500c38ec                vtable for DNSServer
 .rodata.str1.1
                0x500c3904       0x6c C:/RTOS-WC/libRTOS-WC.a(Net_DhcpServer_cpp.o)
                                 0x81 (size before relaxing)
 .rodata._ZTV10DhcpServer
                0x500c3970       0x18 C:/RTOS-WC/libRTOS-WC.a(Net_DhcpServer_cpp.o)
                0x500c3970                vtable for DhcpServer
 .rodata.str1.1
                0x500c3988       0x42 C:/RTOS-WC/libRTOS-WC.a(Flash_FlashM29W128G_cpp.o)
 *fill*         0x500c39ca        0x2 00
 .rodata._ZTV14FlashM29W128GL
                0x500c39cc       0x30 C:/RTOS-WC/libRTOS-WC.a(Flash_FlashM29W128G_cpp.o)
                0x500c39cc                vtable for FlashM29W128GL
 .rodata.str1.1
                0x500c39fc      0x2ce C:/RTOS-WC/libRTOS-WC.a(BlkDev_FileSystemManager_cpp.o)
                                0x2eb (size before relaxing)
 *fill*         0x500c3cca        0x2 00
 .rodata._ZTV17FileSystemManager
                0x500c3ccc       0x18 C:/RTOS-WC/libRTOS-WC.a(BlkDev_FileSystemManager_cpp.o)
                0x500c3ccc                vtable for FileSystemManager
 .rodata.str1.1
                0x500c3ce4       0x33 C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o)
 *fill*         0x500c3d17        0x1 00
 .rodata._ZTV13RamDiskDevice
                0x500c3d18       0x3c C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o)
                0x500c3d18                vtable for RamDiskDevice
 .rodata.str1.1
                0x500c3d54       0x96 C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
                                 0x9b (size before relaxing)
 *fill*         0x500c3dea        0x2 00
 .rodata._ZTV14FRAMDiskDevice
                0x500c3dec       0x3c C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
                0x500c3dec                vtable for FRAMDiskDevice
 .rodata.str1.1
                0x500c3e28       0xac C:/RTOS-WC/libRTOS-WC.a(FileSys_FileSystem_cpp.o)
                                 0xc4 (size before relaxing)
 .rodata._ZTV10FileSystem
                0x500c3ed4       0x4c C:/RTOS-WC/libRTOS-WC.a(FileSys_FileSystem_cpp.o)
                0x500c3ed4                vtable for FileSystem
 .rodata.str1.1
                0x500c3f20       0x65 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
                                 0x7d (size before relaxing)
 *fill*         0x500c3f85        0x3 00
 .rodata._ZTV13TarFileSystem
                0x500c3f88       0x4c C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
                0x500c3f88                vtable for TarFileSystem
 .rodata._ZTVN13TarFileSystem7TarFileE
                0x500c3fd4       0x10 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
                0x500c3fd4                vtable for TarFileSystem::TarFile
 .rodata._ZTV4File
                0x500c3fe4       0x10 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
                0x500c3fe4                vtable for File
 .rodata.str1.1
                0x500c3ff4       0xcc C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
                                0x10e (size before relaxing)
 .rodata._ZTV14FRAMFileSystem
                0x500c40c0       0x4c C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
                0x500c40c0                vtable for FRAMFileSystem
 .rodata._ZTVN14FRAMFileSystem8FRAMFileE
                0x500c410c       0x10 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
                0x500c410c                vtable for FRAMFileSystem::FRAMFile
 .rodata.str1.1
                0x500c411c       0x55 C:/RTOS-WC/libRTOS-WC.a(Dev_TLV5604_cpp.o)
 *fill*         0x500c4171        0x3 00
 .rodata._ZTV7TLV5604
                0x500c4174       0x18 C:/RTOS-WC/libRTOS-WC.a(Dev_TLV5604_cpp.o)
                0x500c4174                vtable for TLV5604
 .rodata._ZTV3DAC
                0x500c418c       0x10 C:/RTOS-WC/libRTOS-WC.a(Dev_TLV5604_cpp.o)
                0x500c418c                vtable for DAC
 .rodata.str1.1
                0x500c419c       0x4e C:/RTOS-WC/libRTOS-WC.a(Dev_MCP3208_cpp.o)
 *fill*         0x500c41ea        0x2 00
 .rodata._ZTV7MCP3208
                0x500c41ec       0x18 C:/RTOS-WC/libRTOS-WC.a(Dev_MCP3208_cpp.o)
                0x500c41ec                vtable for MCP3208
 .rodata._ZTV3ADC
                0x500c4204       0x10 C:/RTOS-WC/libRTOS-WC.a(Dev_MCP3208_cpp.o)
                0x500c4204                vtable for ADC
 .rodata.str1.1
                0x500c4214       0x3c C:/RTOS-WC/libRTOS-WC.a(Dev_24AA025E48_cpp.o)
 .rodata._ZTV14EUI_24AA025E48
                0x500c4250       0x10 C:/RTOS-WC/libRTOS-WC.a(Dev_24AA025E48_cpp.o)
                0x500c4250                vtable for EUI_24AA025E48
 .rodata._ZTV9I2CDevice
                0x500c4260       0x10 C:/RTOS-WC/libRTOS-WC.a(Dev_I2CDevice_cpp.o)
                0x500c4260                vtable for I2CDevice
 .rodata.str1.1
                0x500c4270       0x54 C:/RTOS-WC/libRTOS-WC.a(Dev_PCF8563_cpp.o)
                                 0x57 (size before relaxing)
 .rodata._ZTV7PCF8563
                0x500c42c4       0x10 C:/RTOS-WC/libRTOS-WC.a(Dev_PCF8563_cpp.o)
                0x500c42c4                vtable for PCF8563
 .rodata.str1.1
                0x500c42d4       0x34 C:/RTOS-WC/libRTOS-WC.a(OS_OS_Custom_cpp.o)
                                 0x3f (size before relaxing)
 .rodata.str1.1
                0x500c4308        0xf C:/RTOS-WC/libRTOS-WC.a(SRC_cifXDownload_cpp.o)
                                 0x14 (size before relaxing)
 .rodata.str1.1
                0x500c4317      0x854 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXFunctions_cpp.o)
 .rodata.str1.1
                0x500c4b6b      0x719 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXInit_cpp.o)
                                0x72c (size before relaxing)
 .rodata.str1.1
                0x500c5284       0x4b C:/RTOS-WC/libRTOS-WC.a(SRC_cifXHWFunctions_cpp.o)
                                 0x50 (size before relaxing)
 .rodata.str1.1
                0x500c52cf       0x1f C:/RTOS-WC/libRTOS-WC.a(BoardNet_cpp.o)
 .rodata.str1.1
                0x500c52ee       0x10 C:/RTOS-WC/libRTOS-WC.a(54455_WatchDog_cpp.o)
                                 0x12 (size before relaxing)
 *fill*         0x500c52fe        0x2 00
 .rodata._ZTV8WatchDog
                0x500c5300       0x10 C:/RTOS-WC/libRTOS-WC.a(54455_WatchDog_cpp.o)
                0x500c5300                vtable for WatchDog
 .rodata.str1.1
                0x500c5310       0x24 C:/RTOS-WC/libRTOS-WC.a(RTOS_Event_cpp.o)
 .rodata.str1.1
                0x500c5334        0x8 C:/RTOS-WC/libRTOS-WC.a(RTOS_MailBox_cpp.o)
                                 0x20 (size before relaxing)
 .rodata.str1.1
                0x500c533c       0x38 C:/RTOS-WC/libRTOS-WC.a(Net_LAN8701_cpp.o)
 .rodata._ZTV7LAN8701
                0x500c5374       0x30 C:/RTOS-WC/libRTOS-WC.a(Net_LAN8701_cpp.o)
                0x500c5374                vtable for LAN8701
 .rodata.str1.1
                0x500c53a4       0x4f C:/RTOS-WC/libRTOS-WC.a(Net_KSZ8863RLL_cpp.o)
 *fill*         0x500c53f3        0x1 00
 .rodata._ZTV10KSZ8863RLL
                0x500c53f4       0x30 C:/RTOS-WC/libRTOS-WC.a(Net_KSZ8863RLL_cpp.o)
                0x500c53f4                vtable for KSZ8863RLL
 .rodata._ZTV11FlashAccess
                0x500c5424       0x10 C:/RTOS-WC/libRTOS-WC.a(Flash_Flash_cpp.o)
                0x500c5424                vtable for FlashAccess
 .rodata._ZTV5Flash
                0x500c5434       0x28 C:/RTOS-WC/libRTOS-WC.a(Flash_Flash_cpp.o)
                0x500c5434                vtable for Flash
 .rodata.str1.1
                0x500c545c       0x2a C:/RTOS-WC/libRTOS-WC.a(Flash_FlashAMD_cpp.o)
 *fill*         0x500c5486        0x2 00
 .rodata._ZTV8FlashAMD
                0x500c5488       0x2c C:/RTOS-WC/libRTOS-WC.a(Flash_FlashAMD_cpp.o)
                0x500c5488                vtable for FlashAMD
 .rodata.str1.1
                0x500c54b4       0xbe C:/RTOS-WC/libRTOS-WC.a(BlkDev_BlockDevice_cpp.o)
                                 0xdb (size before relaxing)
 *fill*         0x500c5572        0x2 00
 .rodata._ZTV11BlockDevice
                0x500c5574       0x3c C:/RTOS-WC/libRTOS-WC.a(BlkDev_BlockDevice_cpp.o)
                0x500c5574                vtable for BlockDevice
 .rodata.str1.1
                0x500c55b0       0x28 C:/RTOS-WC/libRTOS-WC.a(BlkDev_CacheBlock_cpp.o)
 .rodata._ZTV10CacheBlock
                0x500c55d8       0x10 C:/RTOS-WC/libRTOS-WC.a(BlkDev_CacheBlock_cpp.o)
                0x500c55d8                vtable for CacheBlock
 .rodata.str1.1
                0x500c55e8        0xe C:/RTOS-WC/libRTOS-WC.a(54455_MII_cpp.o)
 *fill*         0x500c55f6        0x2 00
 .rodata._ZTV3MII
                0x500c55f8       0x30 C:/RTOS-WC/libRTOS-WC.a(54455_MII_cpp.o)
                0x500c55f8                vtable for MII
                0x500c5628                . = ALIGN (0x4)
                0x500c5628                __CTOR_START = .
 *(.ctors)
 .ctors         0x500c5628        0x4 obj-WC/WebSite_cpp.o
 .ctors         0x500c562c        0x4 obj-WC/ModBusRcvTask_cpp.o
 .ctors         0x500c5630        0x4 obj-WC/ModBusSendTask_cpp.o
 .ctors         0x500c5634        0x4 obj-WC/StateTable_cpp.o
 .ctors         0x500c5638        0x4 obj-WC/FieldbusTable_cpp.o
 .ctors         0x500c563c        0x4 obj-WC/DcxManagerHandler_cpp.o
 .ctors         0x500c5640        0x4 C:/RTOS-WC/libRTOS-WC.a(API_HTTP_cpp.o)
 .ctors         0x500c5644        0x4 C:/RTOS-WC/libRTOS-WC.a(Net_Ethernet_cpp.o)
 .ctors         0x500c5648        0x4 C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o)
 .ctors         0x500c564c        0x4 C:/RTOS-WC/libRTOS-WC.a(Net_IPv4_cpp.o)
 .ctors         0x500c5650        0x4 C:/RTOS-WC/libRTOS-WC.a(Net_Socket_cpp.o)
 .ctors         0x500c5654        0x4 C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
                0x500c5658                __CTOR_END = .
                0x500c5660                . = ALIGN (0x10)
 *fill*         0x500c5658        0x8 00
                0x500c5660                __TEXT_END = .

.data           0x51000000    0x36980 load address 0x500c5660
                0x51000000                . = ALIGN (0x10)
                0x51000000                __DATA_START = .
                0x51000000        0x4 LONG 0x12345678
                0x51000004        0x4 LONG 0x12345678
                0x51000008        0x4 LONG 0x12345678
                0x5100000c        0x4 LONG 0x12345678
 *(.data)
 .data          0x51000010        0x0 C:/RTOS-WC/Start.o
 .data          0x51000010        0x0 obj-WC/Main_cpp.o
 .data          0x51000010        0x1 obj-WC/InputTask_cpp.o
 *fill*         0x51000011        0x3 00
 .data          0x51000014        0x2 obj-WC/WCTask_cpp.o
 *fill*         0x51000016        0x2 00
 .data          0x51000018        0x0 obj-WC/MIATask_cpp.o
 .data          0x51000018        0x0 obj-WC/GLOBALS_cpp.o
 .data          0x51000018      0x250 obj-WC/LOG_cpp.o
                0x51000018                EventsDescription
 .data          0x51000268       0x6e obj-WC/PasscodeConfig_cpp.o
                0x51000268                DefaultUsers
 *fill*         0x510002d6        0x2 00
 .data          0x510002d8        0x0 obj-WC/preset_cpp.o
 .data          0x510002d8      0x10c obj-WC/FRAM_cpp.o
                0x510002ec                PasscodeConfig
                0x510002f4                ParameterSet
                0x51000304                AlarmLogFram
                0x51000300                EventLogFram
                0x5100030c                EthipnvData
                0x51000310                DebugSection
                0x510002f0                CurrentCycleParam
                0x510002d8                FramInfo
                0x510002e0                MFcycleResults
                0x51000308                WeldResFram
                0x510003cc                ConversionPointers
                0x510002f8                HsParameterSet
                0x510002e4                Alarmconfig
                0x51000314                SysCounters
                0x510002dc                Sysconfig
                0x510002e8                USERIOConfig
                0x51000318                Segment
                0x510002fc                AdvanceConfigData
 .data          0x510003e4        0x6 obj-WC/WebSite_cpp.o
                0x510003e4                TokenAvailable
 *fill*         0x510003ea        0x2 00
 .data          0x510003ec        0x0 obj-WC/UploadFirmWareTask_cpp.o
 .data          0x510003ec        0x0 obj-WC/WeldResultHistory_cpp.o
 .data          0x510003ec        0x0 obj-WC/ScanResDetect_cpp.o
 .data          0x510003ec        0x0 obj-WC/FirmWareUpgrade_cpp.o
 .data          0x510003ec        0x0 obj-WC/RTClock_cpp.o
 .data          0x510003ec      0x2b2 obj-WC/UserIO_cpp.o
                0x510003ec                OutPtr
                0x5100068c                OutBitsPosFANamdLED
 *fill*         0x5100069e        0x2 00
 .data          0x510006a0        0x2 obj-WC/StateMachineDrv_cpp.o
 *fill*         0x510006a2        0x2 00
 .data          0x510006a4        0x0 obj-WC/ModBusRcvTask_cpp.o
 .data          0x510006a4        0x4 obj-WC/ReceiveCommandHandler_cpp.o
                0x510006a4                RegUpdateCmdFlag
 .data          0x510006a8       0xdc obj-WC/ModBusSendTask_cpp.o
                0x510006a8                MODtable
 .data          0x51000784        0x0 obj-WC/FieldBus_cpp.o
 .data          0x51000784        0x2 obj-WC/NRTModbusTask_cpp.o
                0x51000784                DCPEventIndex
 *fill*         0x51000786        0x2 00
 .data          0x51000788       0x1b obj-WC/ProfiBus_cpp.o
                0x5100078e                LastSFCT
                0x51000788                LastSSCopied
                0x5100078d                LastHSSSStatus
                0x51000789                LastSSStatus
                0x51000790                LastSFCTInHSStatus
                0x5100078a                LastStatusSetNumber
                0x5100078f                SFCT
                0x510007a1                LastHSStatusSetNumber
                0x5100078b                StatusSetNumber
                0x5100078c                LastHSSSCopied
                0x510007a0                HSStatusSetNumber
 *fill*         0x510007a3        0x1 00
 .data          0x510007a4        0x0 obj-WC/EthernetIP_cpp.o
 .data          0x510007a4        0x0 obj-WC/WelderSearchTask_cpp.o
 .data          0x510007a4        0x0 obj-WC/VerifyPreset_cpp.o
 .data          0x510007a4        0x0 obj-WC/ObjDictionary_cpp.o
 .data          0x510007a4        0x0 obj-WC/counter_cpp.o
 .data          0x510007a4        0x0 obj-WC/FieldbusTask_cpp.o
 .data          0x510007a4       0x28 obj-WC/StateFunctions_cpp.o
                0x510007be                HoldOffTimePassFuncPtr
                0x510007ba                EnergyBrakePassFuncPtr
                0x510007c6                DigitalInputConfigured
                0x510007b6                UpdatePresetPassFuncPtr
                0x510007ae                SonicsEntryFuncPtr
                0x510007a4                SystemOK
                0x510007c2                ChecForSonicCompleteFun
                0x510007b2                SonicsPassFuncPtr
                0x510007a6                PreReadyPassFuncPtr
                0x510007aa                RdyPassFuncPtr
 .data          0x510007cc      0x168 obj-WC/StateTable_cpp.o
                0x510008bc                ErrorState
                0x51000880                ChkLimitState
                0x51000844                SonicOn
                0x5100090c                ManFCycleState
                0x510008d0                SeekState
                0x5100086c                HoldOffTimeState
                0x510007e0                PowerUpState
                0x5100081c                HandleUpdatePreset
                0x51000830                WaitforULSTRS
                0x510007cc                TopOfList
                0x51000920                EndOfList
                0x51000858                EnergyBrakeState
                0x510007f4                PreReadyState
                0x51000894                AfterBurstState
                0x510008e4                TestState
                0x510008f8                ScanState
                0x51000808                ReadyState
                0x510008a8                CycleAbortState
 .data          0x51000934      0x306 obj-WC/Alarms_cpp.o
                0x51000934                CycleCountFlag
                0x51000936                AlarmDescription
 *fill*         0x51000c3a        0x2 00
 .data          0x51000c3c     0x4cd2 obj-WC/FieldbusTable_cpp.o
                0x51000c3c                TestValuesRD
                0x51000c75                MaxPsID
                0x51000c74                MinPsID
                0x51000c4a                TestValuesWR
 *fill*         0x5100590e        0x2 00
 .data          0x51005910        0x0 obj-WC/ShutDownTask_cpp.o
 .data          0x51005910        0x0 obj-WC/ExternalStatusTask_cpp.o
 .data          0x51005910      0x154 obj-WC/BDMTask_cpp.o
                0x51005950                erase
                0x51005910                something
 .data          0x51005a64       0x9b obj-WC/BDM08_cpp.o
 *fill*         0x51005aff        0x1 00
 .data          0x51005b00       0x38 obj-WC/DcxManagerHandler_cpp.o
                0x51005b10                JsonGetCmdHandlers
                0x51005b04                KeyWeldDataUnassignedAIN
                0x51005b00                SampleRate
                0x51005b28                JsonSetCmdHandlers
 .data          0x51005b38        0x2 C:/RTOS-WC/libRTOS-WC.a(Board_cpp.o)
                0x51005b38                Board::VoltageonResistor3Flag
                0x51005b39                Board::VoltageonResistor4Flag
 *fill*         0x51005b3a        0x2 00
 .data          0x51005b3c        0x0 C:/RTOS-WC/libRTOS-WC.a(LED_cpp.o)
 .data          0x51005b3c        0x0 C:/RTOS-WC/libRTOS-WC.a(BoardFlash_cpp.o)
 .data          0x51005b3c        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_CPU_cpp.o)
 .data          0x51005b3c        0x4 C:/RTOS-WC/libRTOS-WC.a(54455_Exception_cpp.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_Terminal_cpp.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_PIT_cpp.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_Serial_cpp.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_FEC_cpp.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_Cache_cpp.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_MMU_cpp.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_DSPI_cpp.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_I2C_cpp.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_CPU_asm.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_Exception_asm.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_MCF5445xRTOS_asm.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(MCF_ArchDefs_cpp.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(MCF_FecBase_cpp.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(MCF_MemoryInit_asm.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(MCF_ArchDefs_asm.o)
 .data          0x51005b40        0x0 C:/RTOS-WC/libRTOS-WC.a(stdlib_Assert_cpp.o)
 .data          0x51005b40       0x10 C:/RTOS-WC/libRTOS-WC.a(stdlib_Alloc_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(stdlib_PrintF_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(stdlib_String_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(stdlib_StdLib_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(API_CyGOS_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(API_TCPIP_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(API_LinkedList_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(API_CRC_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(API_FileSystems_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(API_TFTP_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(API_HTTP_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(API_SysLog_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_FIFO_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_RTOS_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_Task_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_PrintfTask_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_Debug_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_Mutex_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_TaskManager_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_Ethernet_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_PktBuf_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_ARP_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_IPv4_cpp.o)
 .data          0x51005b50        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_Raw_cpp.o)
 .data          0x51005b50        0x8 C:/RTOS-WC/libRTOS-WC.a(Net_TCP_cpp.o)
 .data          0x51005b58        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_UDP_cpp.o)
 .data          0x51005b58        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_ICMP_cpp.o)
 .data          0x51005b58        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_IGMP_cpp.o)
 .data          0x51005b58        0x4 C:/RTOS-WC/libRTOS-WC.a(Net_DhcpClient_cpp.o)
 .data          0x51005b5c        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_AutoIP_cpp.o)
 .data          0x51005b5c        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_DnsClient_cpp.o)
 .data          0x51005b5c        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_Socket_cpp.o)
 .data          0x51005b5c        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_NetBuf_cpp.o)
 .data          0x51005b5c        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_NetConn_cpp.o)
 .data          0x51005b5c        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_TcpServer_cpp.o)
 .data          0x51005b5c        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_TcpConnection_cpp.o)
 .data          0x51005b5c        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_HttpServer_cpp.o)
 .data          0x51005b5c       0x34 C:/RTOS-WC/libRTOS-WC.a(Net_HttpConnection_cpp.o)
                0x51005b5c                HttpConnection::requestMethods
                0x51005b80                errorHtml1
                0x51005b8c                errorHtml4
                0x51005b84                errorHtml2
                0x51005b88                errorHtml3
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_DNSServer_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_DhcpServer_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(Flash_FlashM29W128G_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_FileSystemManager_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FileSystem_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_TLV5604_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_MCP3208_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_24AA025E48_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_I2CDevice_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_PCF8563_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(OS_OS_Custom_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXDownload_cpp.o)
 .data          0x51005b90        0x0 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXFunctions_cpp.o)
 .data          0x51005b90        0x4 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXInit_cpp.o)
                0x51005b90                g_ulTraceLevel
 .data          0x51005b94        0x0 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXHWFunctions_cpp.o)
 .data          0x51005b94        0x0 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXInterrupt_cpp.o)
 .data          0x51005b94        0x0 C:/RTOS-WC/libRTOS-WC.a(SRC_md5_cpp.o)
 .data          0x51005b94        0x0 C:/RTOS-WC/libRTOS-WC.a(USER_TKitUser_Custom_cpp.o)
 .data          0x51005b94        0x0 C:/RTOS-WC/libRTOS-WC.a(_double.o)
 .data          0x51005b94        0x0 C:/RTOS-WC/libRTOS-WC.a(_fixunsdfsi.o)
 .data          0x51005b94       0x1c C:/RTOS-WC/libRTOS-WC.a(_floatex.o)
                0x51005b94                _fpCCR
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(_gedf2.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(fpgnulib.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(BoardNet_cpp.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(Board_asm.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_MCF5445xTask_cpp.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_WatchDog_cpp.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_Event_cpp.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_MailBox_cpp.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_LAN8701_cpp.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_KSZ8863RLL_cpp.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(Flash_Flash_cpp.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(Flash_FlashAMD_cpp.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_BlockDevice_cpp.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_CacheBlock_cpp.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXEndianess_cpp.o)
 .data          0x51005bb0        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_MII_cpp.o)
 *(.data.*)
                0x51005bb0                . = ALIGN (0x4)
                0x51005bb0                __DATA_END = .
                0x51005bb0                __BSS_START = .
 *(.bss)
 .bss           0x51005bb0        0x0 C:/RTOS-WC/Start.o
 .bss           0x51005bb0     0x4a96 obj-WC/Main_cpp.o
                0x510065b6                CrashBufferRam
                0x51005bb0                CompressedWebPageCRC
                0x51005bb2                TPointsRam
 *fill*         0x5100a646        0x2 00
 .bss           0x5100a648        0xa obj-WC/InputTask_cpp.o
                0x5100a64a                TestReset
                0x5100a648                se
                0x5100a64b                PrintHighestTaskLoad
                0x5100a64c                PrintCurrentTaskLoad
 *fill*         0x5100a652        0x2 00
 .bss           0x5100a654       0x55 obj-WC/WCTask_cpp.o
                0x5100a65c                MacdevicePtr
                0x5100a655                WCTask::TempMcfSoftwareReset
                0x5100a68a                LCDDetect
                0x5100a689                MIARead
                0x5100a694                WCBootLoaderCRC
                0x5100a698                TimedSeekTimerTicks
                0x5100a656                WCTask::TempMcfSoftwareWatchdogReset
                0x5100a68b                DefaultFanStatus
                0x5100a658                WCTask::thisPtr
                0x5100a68c                WCBootLoaderVersionLabel
                0x5100a660                MacchipData
                0x5100a688                OverLoadAlarm
                0x5100a654                FramCsDone
 *fill*         0x5100a6a9        0x3 00
 .bss           0x5100a6ac        0x4 obj-WC/MIATask_cpp.o
                0x5100a6ac                MIATask::thisPtr
 .bss           0x5100a6b0     0x4b74 obj-WC/GLOBALS_cpp.o
                0x5100a6e2                MinCycleParam
                0x5100a714                SonicsOnCounter
                0x5100a71c                TempSonicsOnTimePerWeldCycle
                0x5100a6e0                MemoryReset
                0x5100a712                NoInput
                0x5100a746                OpMode
                0x5100a70e                ManFErrorCycleCounterInc
                0x5100a738                WeldBuffer
                0x5100f218                StackEnd
                0x5100b184                CrashBuffer
                0x5100a718                SonicsOffCounter
                0x5100b168                CrashValid
                0x5100f214                Stackbegin
                0x5100f220                MMUAR
                0x5100a6dc                MaxOffset
                0x5100a6b8                BoardTestOutput
                0x5100a720                MinPSNum
                0x5100a730                WeldBufferIndex
                0x5100a73c                DCXFunc
                0x5100a6ba                TempCurrentCycleParam
                0x5100a6d4                MinFrequency
                0x5100a728                MinHSPSNum
                0x5100a6b0                InputTemperature
                0x5100a732                NumScanPoints
                0x5100a70a                ManFCycleCounterInc
                0x5100a6ce                WeldBufferTime
                0x5100a742                CommIfcAccessToken
                0x5100a74a                DCPTimeControlParam
                0x5100a6d0                Midband
                0x5100a6d8                MaxFrequency
                0x5100a734                ScanBuffer
                0x5100a764                TPoints
                0x5100b16c                TaskName
                0x5100a6b4                BoardTestFrequency
                0x5100f210                CurrStackPtr
                0x5100a724                MaxPSNum
                0x5100f21c                CrashBuffPrintLen
                0x5100a72c                MaxHSPSNum
                0x5100a6f6                MaxCycleParam
                0x5100a6e1                WebIOEnabled
 .bss           0x5100f224       0x36 obj-WC/LOG_cpp.o
                0x5100f224                LogData2
 *fill*         0x5100f25a        0x2 00
 .bss           0x5100f25c        0x0 obj-WC/PasscodeConfig_cpp.o
 .bss           0x5100f25c    0x1b8e1 obj-WC/preset_cpp.o
                0x5100f54a                RunningHSPreset
                0x5100f696                PresetVerifyError
                0x5100f694                UpdateRPreset
                0x51020c0a                WeldStatusSet
                0x5100f25c                RunningPreset
                0x5102a942                FreqDependentParam
                0x5100f5c4                DcpParameterSet
                0x5100f69a                HsStatusSet
                0x5102aafe                SendToDCXM
 *fill*         0x5102ab3d        0x3 00
 .bss           0x5102ab40        0x0 obj-WC/FRAM_cpp.o
 .bss           0x5102ab40      0x1c7 obj-WC/WebSite_cpp.o
                0x5102abf0                WebSite::ScanAbortFlag
                0x5102abef                WebSite::ScanStartFlag
                0x5102ac0c                WebSite::mfBoardTestTimeOut
                0x5102ac00                WebSite::webtimeOutTest
                0x5102abf3                WebSite::diagStartFlag
                0x5102ab54                Object
                0x5102abf5                WebSite::mfBoardTestFlag
                0x5102ac14                DataformatWeb
                0x5102abf7                WebSite::mfTestFlag
                0x5102ac24                TempAnalogOutPutVals
                0x5102acfa                TempUserBuff
                0x5102abf1                WebSite::ScanFailedFlag
                0x5102ac47                RTCClocks
                0x5102abc4                WebSite::DcxWebUserID
                0x5102abf8                WebSite::PowerUpId
                0x5102abd2                WebSite::DcxLogUserID
                0x5102ac10                WebSite::mfTimeOut
                0x5102abf6                WebSite::mfFlag
                0x5102abea                WebSite::Interface
                0x5102ab5c                Response
                0x5102abde                WebEventdata
                0x5102abee                WebSite::TestStartFlag
                0x5102abda                WebAlarmdata
                0x5102abd6                WebSite::CurrNetworkConfig
                0x5102ab40                Inputs
                0x5102abf4                WebSite::resetFlag
                0x5102ac31                ACDInfoUpdated
                0x5102ac32                FbDiagQ
                0x5102abe6                WebSite::Port
                0x5102ac08                WebSite::StartDiagTimeOut
                0x5102ac16                WebSite::languageBuff
                0x5102ac04                WebSite::diagnosticTimeOut
                0x5102ac46                SendDiagCmd
                0x5102ac30                DefaultSelected
                0x5102abfc                WebSite::webtimeOutScan
                0x5102abf2                WebSite::diagFlag
                0x5102acf6                TempParameterSet
                0x5102ab60                LangString
                0x5102aca2                CustomDefaultUSERIOConfig
                0x5102ac1a                TempDigOutPutStatus
                0x5102abe2                WeldHistory
                0x5102ac4e                TempUSERIOConfig
 *fill*         0x5102ad07        0x1 00
 .bss           0x5102ad08        0x4 obj-WC/UploadFirmWareTask_cpp.o
                0x5102ad08                UploadFirmware::thisPtr
 .bss           0x5102ad0c        0x7 obj-WC/WeldResultHistory_cpp.o
 *fill*         0x5102ad13        0x1 00
 .bss           0x5102ad14       0x5c obj-WC/ScanResDetect_cpp.o
                0x5102ad58                ResFreqIndex
                0x5102ad1c                MemoryValue
                0x5102ad54                HornScanRawPhase
                0x5102ad20                ResonanceFreqs
                0x5102ad14                MainParallelResonanceFreq
                0x5102ad38                ResonanceFreqType
                0x5102ad18                MainSeriesResonanceFreq
                0x5102ad50                HornScanRawFrequency
 .bss           0x5102ad70        0x5 obj-WC/FirmWareUpgrade_cpp.o
                0x5102ad70                FirmWareUpgradeTask::thisPtr
                0x5102ad74                FirmwareFileSent
 *fill*         0x5102ad75        0x3 00
 .bss           0x5102ad78        0x4 obj-WC/RTClock_cpp.o
                0x5102ad78                RtcPtr
 .bss           0x5102ad7c     0x2136 obj-WC/UserIO_cpp.o
                0x5102add8                UserIO::InputMask
                0x5102ad8c                InValue
                0x5102adb4                OutValue
                0x5102ce12                AnalogOutValue
                0x5102ad82                UserIO::ADC
                0x5102ade6                UserIO::DigOutUseStatus
                0x5102ad7c                FanStatusFlag
                0x5102ad89                PartInPlaceConfigured
                0x5102cdf6                FreqIn
                0x5102ad86                CustomInput1Configured
                0x5102cdfa                AmplitudeIn
                0x5102adf6                ExtRawFreqToFreqOffset
                0x5102ad7d                CableDetectedPin
                0x5102adf2                UserIO::AnalogOutUseStatus
                0x5102adda                UserIO::OutputMask
                0x5102ad8a                CableFailure
                0x5102cdfe                CustomInput1
                0x5102ce02                CustomInput2
                0x5102ad7e                UserIO::DAC
                0x5102addc                UserIO::DigInUseStatus
                0x5102adef                UserIO::AnalogInUseStatus
                0x5102ce06                AnalogInValue
                0x5102ad88                InterlockConfigured
                0x5102ad87                CustomInput2Configured
 *fill*         0x5102ceb2        0x2 00
 .bss           0x5102ceb4       0x5a obj-WC/StateMachineDrv_cpp.o
                0x5102ceb8                CurrentIndex
                0x5102cebe                WCSequence
                0x5102ceba                SonicsOffPeriod
                0x5102ceb4                WeldState
 *fill*         0x5102cf0e        0x2 00
 .bss           0x5102cf10      0x139 obj-WC/ModBusRcvTask_cpp.o
                0x5102d034                MBwriteAddrLocal
                0x5102cf2c                CrashMBRcvPktbuf
                0x5102cf10                TotalMissedPkt
                0x5102cf14                LastTID
                0x5102cf18                MBMsgQ
                0x5102d048                ModBusErrorFlag
 *fill*         0x5102d049        0x3 00
 .bss           0x5102d04c      0x6a4 obj-WC/ReceiveCommandHandler_cpp.o
                0x5102d694                ReceiveCommandHandler::LcdDataLast
                0x5102d6d4                ReceiveCommandHandler::SeekBeforeTest
                0x5102d6d0                ReceiveCommandHandler::LCDSWVersion
                0x5102d6d2                ReceiveCommandHandler::LCDCodeCRCLow
                0x5102d65a                ReceiveCommandHandler::LcdData
                0x5102d254                RegAmplitudeUpdateFlag
                0x5102d257                SerialRecBuff
                0x5102d6ce                ReceiveCommandHandler::DCXStatus
                0x5102d6d6                TempPeakPower
                0x5102d6da                MacAddress
                0x5102d252                CurrentAlarm
                0x5102d255                RegMaxUpdateFlag
                0x5102d24e                ReceiveCommandHandler::thisptr
                0x5102d658                LCDKeyStatus
                0x5102d6d9                DebugLCD
                0x5102d6d3                ReceiveCommandHandler::LCDCodeCRCHigh
                0x5102d457                SerialTxBuff
                0x5102d256                RegMinUpdateFlag
                0x5102d04d                CrashSerialRecBuff
                0x5102d04c                OldLinkStat
                0x5102d6d8                LcdCommunicationLost
 .bss           0x5102d6f0      0x194 obj-WC/ModBusSendTask_cpp.o
                0x5102d770                OdHoldingRegisters
                0x5102d74c                RtReceiveData
                0x5102d77a                MBHold
                0x5102d774                ModBusSendTask::thisptr
                0x5102d6f0                SocketImplementation
                0x5102d730                SendRtc
                0x5102d72e                MBack
                0x5102d778                PowerupCommunicationDone
                0x5102d6f2                PowerUpData
                0x5102d736                RtSendData
 .bss           0x5102d884       0x8a obj-WC/FieldBus_cpp.o
                0x5102d8ce                FBCmd
                0x5102d8f6                FbusIO
                0x5102d8cc                RegApp
                0x5102d8c6                Controlword2
                0x5102d884                CStat
                0x5102d8c8                Statusword1
                0x5102d8f4                FieldBusType
                0x5102d8de                FBStat
                0x5102d8f2                HilscherSlaveCardDetected
                0x5102d8c4                Controlword1
                0x5102d8ca                Statusword2
 *fill*         0x5102d90e        0x2 00
 .bss           0x5102d910     0x1a72 obj-WC/NRTModbusTask_cpp.o
                0x5102da74                DCPEventLogs
                0x5102f37e                DCPTimeSyncCounter
                0x5102d914                NRTDatabuffer
                0x5102da72                NRTResponse
                0x5102d910                NRTModbus::thisPtr
                0x5102da40                WeldHistoryData
                0x5102f376                SeekData
                0x5102da76                DCPEventobj
 *fill*         0x5102f382        0x2 00
 .bss           0x5102f384      0x26b obj-WC/ProfiBus_cpp.o
                0x5102f385                ConfigurationFault
                0x5102f47a                CurrentUserParam
                0x5102f5a6                OutPZDZVSelectUserPara
                0x5102f567                ConfigLen
                0x5102f57a                SSOverRunIndication
                0x5102f386                CurrentConfig
                0x5102f582                HSSSOverRunIndication
                0x5102f56a                EStat
                0x5102f57e                LastSSOverRunIndication
                0x5102f568                UserParamLen
                0x5102f5a2                InPZDSVSelectUserPara
                0x5102f384                ParameterFault
                0x5102f592                LastHSSSOverRunIndication
                0x5102f5aa                ContIO
 *fill*         0x5102f5ef        0x1 00
 .bss           0x5102f5f0      0x498 obj-WC/EthernetIP_cpp.o
                0x5102f82c                LastCl3ResPkt
                0x5102fa78                EthIPConfig
                0x5102f5f0                LastCl3IndPkt
                0x5102fa74                ServiceDataSizeOut
                0x5102fa70                ServiceDataSizeIn
                0x5102fa84                FBCurrNetworkConfig
 .bss           0x5102fa88        0x1 obj-WC/WelderSearchTask_cpp.o
                0x5102fa88                ClearJSONObjects
 *fill*         0x5102fa89        0x3 00
 .bss           0x5102fa8c        0x0 obj-WC/VerifyPreset_cpp.o
 .bss           0x5102fa8c        0x0 obj-WC/ObjDictionary_cpp.o
 .bss           0x5102fa8c        0x0 obj-WC/counter_cpp.o
 .bss           0x5102fa8c      0x692 obj-WC/FieldbusTask_cpp.o
                0x5102fa8c                FieldbusTask::thisPtr
                0x5102fade                CrashMailBoxbuff
                0x5102fad8                kitInitDone
                0x5102fad4                DiagCntr2
                0x5102fada                PtDevInstance
                0x5102fad0                DiagCntr1
                0x5102fa90                CrashFBRecvBuffer
 *fill*         0x5103011e        0x2 00
 .bss           0x51030120      0x125 obj-WC/StateFunctions_cpp.o
                0x51030202                RFFeedBackTimer
                0x510301f2                CurrentStatus
                0x51030146                TestData1
                0x51030198                ResetTimer
                0x51030208                SelectRFRelayFun
                0x510301fe                RFSwitchTimeOut
                0x51030194                TestTime
                0x51030187                SeekAlarmFlag
                0x5103018a                TestAlarmFlag
                0x510301a4                ScanFailed
                0x51030156                SonicDelayTimeOut
                0x51030164                ScanTime
                0x51030227                DelaytheSonics
                0x51030237                ActuatorPresentAtPwrUp
                0x5103015a                EQAlarmTimer
                0x51030224                DCPEventsRcvd
                0x5103017d                GotoCycleStart
                0x5103016d                DummyFlag
                0x5103018c                SeekAccumAmplitude
                0x51030230                SendCmdAfterACLineRestore
                0x51030130                RampTime
                0x51030218                TempABTimer
                0x5103017c                WaitForPresetACK
                0x51030124                WarningFlag
                0x51030226                EventsReceivedAtPowerUp
                0x51030182                HistoryValid
                0x5103016f                TempSonicAbortFlag
                0x51030185                SeekStarted
                0x51030144                CheckForFBLoadNewPreset
                0x51030138                ABTimer
                0x5103012a                MFTimeoutEnable
                0x51030140                AvgPower
                0x5103017e                GotoWeldStart
                0x51030172                DCPReadyFlag
                0x510301b0                AvgWeldAmplitude
                0x5103017f                GotToSeek
                0x510301ab                WeldDoneWithAlarm
                0x51030238                NRTcmd
                0x51030188                TestStarted
                0x5103014c                PresetUpdateDone
                0x51030177                WeldComplete
                0x51030214                TempABDly
                0x51030175                WeldStopFlag
                0x510301f8                RFDelayRequired
                0x51030125                AmpStepReachedFlag
                0x510301a6                ScrubTimer
                0x51030145                FBLoadPresetNumber
                0x51030179                LoadPresetToDCP
                0x5103014e                ULSTimeOutTimer
                0x51030160                PowerUpScan
                0x51030126                ABDelayFlag
                0x5103022c                ControlVariable
                0x5103017b                StartScan
                0x51030134                RampRunningTime
                0x51030170                AlarmCycleAbort
                0x51030129                ScrubTimeActive
                0x51030120                AbortReason
                0x51030163                ScanAborted
                0x51030161                ScanStarted
                0x51030176                SonicsComplete
                0x510301a5                GroundDetectFlag
                0x51030184                MFAlarmFlag
                0x51030235                CheckCustomInput1
                0x5103019c                AvgAmplitude
                0x5103014a                FBWeldFunction
                0x5103012c                EnergyBrakeTimer
                0x5103016c                ReadyOK
                0x51030186                SeekDone
                0x5103016e                PowerUpDone
                0x5103020c                SonicsDisableTime
                0x51030171                SonicsAbortFlag
                0x510301ac                TimeOut
                0x51030128                AbCompleted
                0x5103021c                TestComplete
                0x51030162                ScanDone
                0x510301f4                SwitchStatus
                0x51030228                LastCmd
                0x51030207                SonicsDisableFlag
                0x51030174                CycleAbortFlag
                0x5103012b                MemoryClearAtRst
                0x510301f3                AlarmFlag
                0x51030220                ULSInitialTimeOut
                0x51030206                RFSwitchingRequired
                0x51030178                ResetDone
                0x510301fa                RelayNumber
                0x51030121                TimeExpiredFlag
                0x510301ee                AlarmPtr
                0x5103021e                NRTCommand
                0x51030236                CheckCustomInput2
                0x51030168                PowerUpTimer
                0x51030152                TRSTimeOutTimer
                0x51030122                EnergyBrakeFlag
                0x5103015e                WaitForTRS
                0x510301aa                NRTcmdFlag
                0x51030210                WeldStopFrequency
                0x51030189                TestDone
                0x5103017a                StartTest
                0x5103014b                FBHornFunction
                0x51030183                MFSonicsON
                0x51030240                PresetScrubTime
                0x51030190                SeekTime
                0x5103013c                AvgPowerCount
                0x51030123                AfterBurstFlag
                0x51030127                ABTimeFlag
                0x51030173                ResetFlag
                0x510301a0                SeekAmpCount
                0x510301b2                TempAlarmDataObj
                0x51030234                ACLineResetFlag
                0x51030181                GoToScan
                0x51030180                GoToTEST
                0x5103015f                ULSFailFlag
 *fill*         0x51030245        0x3 00
 .bss           0x51030248        0x0 obj-WC/StateTable_cpp.o
 .bss           0x51030248       0xeb obj-WC/Alarms_cpp.o
                0x51030270                AlarmIndex
                0x51030272                FBAlarms
                0x51030248                AlarmsArray
                0x51030332                ResetReqFlag
                0x51030271                AlarmLogIndx
 *fill*         0x51030333        0x1 00
 .bss           0x51030334     0x1ab4 obj-WC/FieldbusTable_cpp.o
                0x510319ca                FbMinPs
                0x51030334                ExternalControl
                0x510312d4                CommWeldSS
                0x510316dc                FbMaxPs
                0x51030358                RTTime
                0x51030354                RTDate
                0x51031d32                FbMinHsPs
                0x5103035c                CommPS
                0x51031cb8                FbMaxHsPs
                0x5103064a                CommHSPS
                0x510306c4                CommHSSS
 .bss           0x51031de8        0x1 obj-WC/ShutDownTask_cpp.o
                0x51031de8                ShutDownTask::RTOSShutDown
 *fill*         0x51031de9        0x3 00
 .bss           0x51031dec       0x12 obj-WC/ExternalStatusTask_cpp.o
                0x51031df0                AlarmStatus
                0x51031df4                PulseCount
                0x51031dec                ExternalStatusTask::thisPtr
                0x51031df2                PulseOnOffFlag
                0x51031df1                TriggerStatus
 *fill*         0x51031dfe        0x2 00
 .bss           0x51031e00       0x28 obj-WC/BDMTask_cpp.o
 .bss           0x51031e28       0x3c obj-WC/BDM08_cpp.o
                0x51031e2e                ReadData
                0x51031e28                LoopCount
                0x51031e2d                WriteData
                0x51031e30                Address
                0x51031e2c                BDMExitFlag
 .bss           0x51031e64       0x3a obj-WC/DcxManagerHandler_cpp.o
                0x51031e96                ResLen
                0x51031e92                ActPresetCycleCount
                0x51031e78                KeyPreset
                0x51031e8e                MultipleCyleAdded
                0x51031e70                JSonServiceTimeOut
                0x51031e7c                KeyWeldResult
                0x51031e74                KeyWeldData
                0x51031e64                JsonDataList
                0x51031e82                JsonWeldBuffTime
                0x51031e6c                ConnectedDcxmAddr
                0x51031e80                EnableJSONLogging
                0x51031e8a                LastPsCycleSent
                0x51031e86                LastCycleSent
                0x51031e9a                EndWeldData
                0x51031e8f                ObjAdded
                0x51031e90                UpdateLastCycleSent
                0x51031e81                SendPresetToDCXM
 *fill*         0x51031e9e        0x2 00
 .bss           0x51031ea0        0xc C:/RTOS-WC/libRTOS-WC.a(Board_cpp.o)
                0x51031ea4                Board::i2c
                0x51031ea8                Board::dmaTimers
                0x51031ea0                Board::spi
 .bss           0x51031eac        0x4 C:/RTOS-WC/libRTOS-WC.a(LED_cpp.o)
                0x51031eac                LED::lptr
 .bss           0x51031eb0        0x0 C:/RTOS-WC/libRTOS-WC.a(BoardFlash_cpp.o)
 .bss           0x51031eb0        0x4 C:/RTOS-WC/libRTOS-WC.a(54455_CPU_cpp.o)
                0x51031eb0                CPU::rtosPit
 .bss           0x51031eb4      0x418 C:/RTOS-WC/libRTOS-WC.a(54455_Exception_cpp.o)
                0x510322c0                ExStkPtr
                0x51031eb4                Exception::ExceptionHandlerArray
                0x510322c4                ExStkSize
                0x510322b8                ExTaskPtr
                0x510322b4                LastInterruptLevel
                0x510322c8                ExIndx
                0x510322bc                ExStkBegin
 .bss           0x510322cc        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_Terminal_cpp.o)
 .bss           0x510322cc       0x10 C:/RTOS-WC/libRTOS-WC.a(54455_PIT_cpp.o)
                0x510322cc                PIT::pit
 .bss           0x510322dc        0xc C:/RTOS-WC/libRTOS-WC.a(54455_Serial_cpp.o)
                0x510322dc                Serial::serial
 .bss           0x510322e8        0x8 C:/RTOS-WC/libRTOS-WC.a(54455_FEC_cpp.o)
                0x510322e8                FEC::fecs
 .bss           0x510322f0        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_Cache_cpp.o)
 .bss           0x510322f0       0x20 C:/RTOS-WC/libRTOS-WC.a(54455_MMU_cpp.o)
                0x510322f0                MMU::mapped
 .bss           0x51032310        0x4 C:/RTOS-WC/libRTOS-WC.a(54455_DSPI_cpp.o)
                0x51032310                DSPI::thisPtr
 .bss           0x51032314        0x8 C:/RTOS-WC/libRTOS-WC.a(54455_I2C_cpp.o)
                0x51032318                I2CRetries
                0x51032314                I2C::i2c
 .bss           0x5103231c        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_CPU_asm.o)
 .bss           0x5103231c        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_Exception_asm.o)
 .bss           0x5103231c        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_MCF5445xRTOS_asm.o)
 .bss           0x5103231c        0x4 C:/RTOS-WC/libRTOS-WC.a(MCF_ArchDefs_cpp.o)
                0x5103231c                __dso_handle
 .bss           0x51032320        0x0 C:/RTOS-WC/libRTOS-WC.a(MCF_FecBase_cpp.o)
 .bss           0x51032320        0x0 C:/RTOS-WC/libRTOS-WC.a(MCF_MemoryInit_asm.o)
 .bss           0x51032320        0x0 C:/RTOS-WC/libRTOS-WC.a(MCF_ArchDefs_asm.o)
 .bss           0x51032320        0x0 C:/RTOS-WC/libRTOS-WC.a(stdlib_Assert_cpp.o)
 .bss           0x51032320        0x8 C:/RTOS-WC/libRTOS-WC.a(stdlib_Alloc_cpp.o)
 .bss           0x51032328        0x0 C:/RTOS-WC/libRTOS-WC.a(stdlib_PrintF_cpp.o)
 .bss           0x51032328        0x0 C:/RTOS-WC/libRTOS-WC.a(stdlib_String_cpp.o)
 .bss           0x51032328        0x0 C:/RTOS-WC/libRTOS-WC.a(stdlib_StdLib_cpp.o)
 .bss           0x51032328        0x8 C:/RTOS-WC/libRTOS-WC.a(API_CyGOS_cpp.o)
                0x51032328                LoadLogCallBack
                0x5103232c                AppCrashCallBackFun
 .bss           0x51032330        0x0 C:/RTOS-WC/libRTOS-WC.a(API_TCPIP_cpp.o)
 .bss           0x51032330        0x0 C:/RTOS-WC/libRTOS-WC.a(API_LinkedList_cpp.o)
 .bss           0x51032330        0x0 C:/RTOS-WC/libRTOS-WC.a(API_CRC_cpp.o)
 .bss           0x51032330        0x4 C:/RTOS-WC/libRTOS-WC.a(API_FileSystems_cpp.o)
                0x51032330                fsManager
 .bss           0x51032334        0x0 C:/RTOS-WC/libRTOS-WC.a(API_TFTP_cpp.o)
 .bss           0x51032334        0x8 C:/RTOS-WC/libRTOS-WC.a(API_HTTP_cpp.o)
 .bss           0x5103233c       0x3a C:/RTOS-WC/libRTOS-WC.a(API_SysLog_cpp.o)
                0x51032340                BoardTestCallBack
                0x5103233c                sysLogCallBack
 *fill*         0x51032376        0x2 00
 .bss           0x51032378        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_FIFO_cpp.o)
 .bss           0x51032378      0x122 C:/RTOS-WC/libRTOS-WC.a(RTOS_RTOS_cpp.o)
                0x5103237e                RTOS::taskCurrent
                0x5103248e                RTOS::ticking
                0x51032382                RTOS::taskHighest
                0x51032378                RTOS::running
                0x5103248a                RTOS::taskPrintf
                0x51032492                RTOS::timestamp
                0x5103238a                RTOS::tasks
                0x5103237a                RTOS::intNesting
                0x51032386                RTOS::taskIdle
 *fill*         0x5103249a        0x2 00
 .bss           0x5103249c        0x4 C:/RTOS-WC/libRTOS-WC.a(RTOS_Task_cpp.o)
                0x5103249c                Task::usecPerTick
 .bss           0x510324a0        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_PrintfTask_cpp.o)
 .bss           0x510324a0        0x8 C:/RTOS-WC/libRTOS-WC.a(RTOS_Debug_cpp.o)
                0x510324a0                Debug::stack
                0x510324a4                Debug::debug
 .bss           0x510324a8        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_Mutex_cpp.o)
 .bss           0x510324a8       0x10 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
 .bss           0x510324b8     0x2204 C:/RTOS-WC/libRTOS-WC.a(RTOS_TaskManager_cpp.o)
                0x51033cb8                TaskManager::lastTime
                0x510342bc                TaskManager::intrTimesHighest
                0x510328b8                TaskManager::intrData
                0x51033dbc                TaskManager::TaskTimesHighest
                0x510338b8                TaskManager::intCount
                0x51033cbc                TaskManager::taskTimes
                0x510324b8                TaskManager::taskData
                0x51033ebc                TaskManager::intrTimes
 .bss           0x510346bc        0x8 C:/RTOS-WC/libRTOS-WC.a(Net_Ethernet_cpp.o)
                0x510346bc                netif_list
 .bss           0x510346c4       0x20 C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o)
                0x510346c8                customProtocols
                0x510346c4                tcpip
 .bss           0x510346e4        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_PktBuf_cpp.o)
 .bss           0x510346e4      0x961 C:/RTOS-WC/libRTOS-WC.a(Net_ARP_cpp.o)
 *fill*         0x51035045        0x3 00
 .bss           0x51035048       0x30 C:/RTOS-WC/libRTOS-WC.a(Net_IPv4_cpp.o)
                0x51035048                ip_addr_any
                0x5103504c                ip_addr_broadcast
                0x51035050                ip_addr::address
 .bss           0x51035078        0x4 C:/RTOS-WC/libRTOS-WC.a(Net_Raw_cpp.o)
                0x51035078                raw_pcbs
 .bss           0x5103507c       0x4e C:/RTOS-WC/libRTOS-WC.a(Net_TCP_cpp.o)
                0x51035094                static_tcphdr
                0x510350ba                tcp_active_pcbs
                0x51035098                static_iphdr
                0x510350b2                tcp_listen_pcbs
                0x510350a4                static_flags
                0x510350ae                static_tcp_ticks
                0x510350c2                tcp_input_pcb
                0x510350aa                static_recv_data
                0x510350b6                tcp_bound_pcbs
                0x510350a8                static_recv_flags
                0x5103509c                static_seqno
                0x510350a6                static_tcplen
                0x510350a0                static_ackno
                0x5103507c                static_inseg
                0x510350be                tcp_tw_pcbs
 *fill*         0x510350ca        0x2 00
 .bss           0x510350cc        0x4 C:/RTOS-WC/libRTOS-WC.a(Net_UDP_cpp.o)
                0x510350cc                udp_pcbs
 .bss           0x510350d0        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_ICMP_cpp.o)
 .bss           0x510350d0        0xc C:/RTOS-WC/libRTOS-WC.a(Net_IGMP_cpp.o)
 .bss           0x510350dc        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_DhcpClient_cpp.o)
 .bss           0x510350dc        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_AutoIP_cpp.o)
 .bss           0x510350dc        0xc C:/RTOS-WC/libRTOS-WC.a(Net_DnsClient_cpp.o)
                0x510350e4                dns_pcb
                0x510350dc                dns_servers
 .bss           0x510350e8     0x1814 C:/RTOS-WC/libRTOS-WC.a(Net_Socket_cpp.o)
 .bss           0x510368fc        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_NetBuf_cpp.o)
 .bss           0x510368fc        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_NetConn_cpp.o)
 .bss           0x510368fc        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_TcpServer_cpp.o)
 .bss           0x510368fc        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_TcpConnection_cpp.o)
 .bss           0x510368fc        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_HttpServer_cpp.o)
 .bss           0x510368fc        0x1 C:/RTOS-WC/libRTOS-WC.a(Net_HttpConnection_cpp.o)
                0x510368fc                fileUploadInitiated
 *fill*         0x510368fd        0x3 00
 .bss           0x51036900        0x8 C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
                0x51036900                TftpClient::clients
 .bss           0x51036908        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_DNSServer_cpp.o)
 .bss           0x51036908        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_DhcpServer_cpp.o)
 .bss           0x51036908        0x0 C:/RTOS-WC/libRTOS-WC.a(Flash_FlashM29W128G_cpp.o)
 .bss           0x51036908        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_FileSystemManager_cpp.o)
 .bss           0x51036908        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o)
 .bss           0x51036908        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
 .bss           0x51036908        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FileSystem_cpp.o)
 .bss           0x51036908        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
 .bss           0x51036908        0x0 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
 .bss           0x51036908        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_TLV5604_cpp.o)
 .bss           0x51036908        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_MCP3208_cpp.o)
 .bss           0x51036908        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_24AA025E48_cpp.o)
 .bss           0x51036908        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_I2CDevice_cpp.o)
 .bss           0x51036908        0x0 C:/RTOS-WC/libRTOS-WC.a(Dev_PCF8563_cpp.o)
 .bss           0x51036908        0x8 C:/RTOS-WC/libRTOS-WC.a(OS_OS_Custom_cpp.o)
                0x51036908                s_ulTime
 .bss           0x51036910        0x0 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXDownload_cpp.o)
 .bss           0x51036910        0x0 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXFunctions_cpp.o)
 .bss           0x51036910       0x14 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXInit_cpp.o)
                0x51036918                g_tDriverInfo
                0x51036914                g_pptDevices
                0x51036910                g_ulDeviceCount
                0x51036920                g_pvTkitLock
 .bss           0x51036924       0x20 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXHWFunctions_cpp.o)
                0x51036940                FbLastErrorReason
                0x51036924                FbFailCounter
 .bss           0x51036944        0x0 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXInterrupt_cpp.o)
 .bss           0x51036944        0x0 C:/RTOS-WC/libRTOS-WC.a(SRC_md5_cpp.o)
 .bss           0x51036944        0x0 C:/RTOS-WC/libRTOS-WC.a(USER_TKitUser_Custom_cpp.o)
 .bss           0x51036944        0x0 C:/RTOS-WC/libRTOS-WC.a(_double.o)
 .bss           0x51036944        0x0 C:/RTOS-WC/libRTOS-WC.a(_fixunsdfsi.o)
 .bss           0x51036944        0x0 C:/RTOS-WC/libRTOS-WC.a(_floatex.o)
 .bss           0x51036944        0x0 C:/RTOS-WC/libRTOS-WC.a(_gedf2.o)
 .bss           0x51036944        0x0 C:/RTOS-WC/libRTOS-WC.a(fpgnulib.o)
 .bss           0x51036944        0xa C:/RTOS-WC/libRTOS-WC.a(BoardNet_cpp.o)
                0x51036944                Board::rmii
                0x51036946                Board::eth
 *fill*         0x5103694e        0x2 00
 .bss           0x51036950        0x0 C:/RTOS-WC/libRTOS-WC.a(Board_asm.o)
 .bss           0x51036950        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_MCF5445xTask_cpp.o)
 .bss           0x51036950       0x10 C:/RTOS-WC/libRTOS-WC.a(54455_WatchDog_cpp.o)
                0x51036950                TaskPriority
                0x51036958                MaxTaskTime
                0x5103695c                MaxVectorTime
                0x51036954                VectorNumber
 .bss           0x51036960        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_Event_cpp.o)
 .bss           0x51036960        0x0 C:/RTOS-WC/libRTOS-WC.a(RTOS_MailBox_cpp.o)
 .bss           0x51036960        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_LAN8701_cpp.o)
 .bss           0x51036960        0x0 C:/RTOS-WC/libRTOS-WC.a(Net_KSZ8863RLL_cpp.o)
 .bss           0x51036960        0x4 C:/RTOS-WC/libRTOS-WC.a(Flash_Flash_cpp.o)
                0x51036960                Flash::access
 .bss           0x51036964        0x0 C:/RTOS-WC/libRTOS-WC.a(Flash_FlashAMD_cpp.o)
 .bss           0x51036964        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_BlockDevice_cpp.o)
 .bss           0x51036964        0x0 C:/RTOS-WC/libRTOS-WC.a(BlkDev_CacheBlock_cpp.o)
 .bss           0x51036964        0x0 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXEndianess_cpp.o)
 .bss           0x51036964        0x0 C:/RTOS-WC/libRTOS-WC.a(54455_MII_cpp.o)
 *(.bss.*)
                0x51036980                . = ALIGN (0x20)
 *fill*         0x51036964       0x1c 00
                0x51036980                __BSS_END = .
                0x00036980                ___DATA_SIZE = (__BSS_END - __DATA_START)

.fram           0x0b000000       0x10 load address 0x500fbfe0
                0x0b000000                __FRAM_START = .
                0x0b000000        0x4 LONG 0x12345678
                0x0b000004        0x4 LONG 0x12345678
                0x0b000008        0x4 LONG 0x12345678
                0x0b00000c        0x4 LONG 0x12345678
 *(.FRAM)
                0x0b000010                . = ALIGN (0x10)
                0x0b000010                __FRAM_END = .
                0x51036980                __FLASH_END = __BSS_END
                0x40000000                __SDRAM = 0x40000000
                0x08000000                __SDRAM_SIZE = 0x8000000
                0x58000000                __SP_INIT = (__SDRAM_BASE + __SDRAM_SIZE)
                0x57fff000                __SP_END = (__SP_INIT - 0x1000)
                0x51036980                __HEAP_START = __FLASH_END
                0x57fff000                __HEAP_END = __SP_END
                0x40000000                __VECTOR_RAM = __SDRAM
                0x00040000                __BOOTLOADER_SIZE = 0x40000
                0x00040000                __FLASH_ROM = (__FLASH_BASE + __BOOTLOADER_SIZE)
                0x00200000                __FLASH_SIZE = ((0x800000 - __BOOTLOADER_SIZE) - __TAR_SIZE)
                0x80000000                __CORE_SRAM = 0x80000000
                0x00008000                __CORE_SRAM_SIZE = 0x8000
                0x80008000                __SRAM_SP = (__CORE_SRAM + __CORE_SRAM_SIZE)
                0x5000040c                __SERIAL_NUMBER = 0x5000040c
                0x50000410                __ETHERNET_MAC0 = 0x50000410
                0x50000410                __ETHERNET_MAC1 = 0x50000410
                0x50000410                __ETHERNET_MAC = __ETHERNET_MAC0
                0x50000000                __SDRAM_BASE = 0x50000000
                0x00000000                __FLASH_BASE = 0x0
                0xb0000000                __FLASH_DIFF = (__FLASH_BASE - __SDRAM_BASE)
                0xe1000000                __MMU_BAR = 0xe1000000
                0x005c0000                __TAR_SIZE = 0x5c0000
                0x00800000                __TAR_END = (__FLASH_BASE + 0x800000)
                0x00240000                __TAR_START = (__TAR_END - __TAR_SIZE)
OUTPUT(obj-WC/WC.elf elf32-m68k)

.comment        0x00000000     0x13ce
 .comment       0x00000000       0x27 obj-WC/Main_cpp.o
 .comment       0x00000027       0x27 obj-WC/InputTask_cpp.o
 .comment       0x0000004e       0x27 obj-WC/WCTask_cpp.o
 .comment       0x00000075       0x27 obj-WC/MIATask_cpp.o
 .comment       0x0000009c       0x27 obj-WC/GLOBALS_cpp.o
 .comment       0x000000c3       0x27 obj-WC/LOG_cpp.o
 .comment       0x000000ea       0x27 obj-WC/PasscodeConfig_cpp.o
 .comment       0x00000111       0x27 obj-WC/preset_cpp.o
 .comment       0x00000138       0x27 obj-WC/FRAM_cpp.o
 .comment       0x0000015f       0x27 obj-WC/WebSite_cpp.o
 .comment       0x00000186       0x27 obj-WC/UploadFirmWareTask_cpp.o
 .comment       0x000001ad       0x27 obj-WC/WeldResultHistory_cpp.o
 .comment       0x000001d4       0x27 obj-WC/ScanResDetect_cpp.o
 .comment       0x000001fb       0x27 obj-WC/FirmWareUpgrade_cpp.o
 .comment       0x00000222       0x27 obj-WC/RTClock_cpp.o
 .comment       0x00000249       0x27 obj-WC/UserIO_cpp.o
 .comment       0x00000270       0x27 obj-WC/StateMachineDrv_cpp.o
 .comment       0x00000297       0x27 obj-WC/ModBusRcvTask_cpp.o
 .comment       0x000002be       0x27 obj-WC/ReceiveCommandHandler_cpp.o
 .comment       0x000002e5       0x27 obj-WC/ModBusSendTask_cpp.o
 .comment       0x0000030c       0x27 obj-WC/FieldBus_cpp.o
 .comment       0x00000333       0x27 obj-WC/NRTModbusTask_cpp.o
 .comment       0x0000035a       0x27 obj-WC/ProfiBus_cpp.o
 .comment       0x00000381       0x27 obj-WC/EthernetIP_cpp.o
 .comment       0x000003a8       0x27 obj-WC/WelderSearchTask_cpp.o
 .comment       0x000003cf       0x27 obj-WC/VerifyPreset_cpp.o
 .comment       0x000003f6       0x27 obj-WC/ObjDictionary_cpp.o
 .comment       0x0000041d       0x27 obj-WC/counter_cpp.o
 .comment       0x00000444       0x27 obj-WC/FieldbusTask_cpp.o
 .comment       0x0000046b       0x27 obj-WC/StateFunctions_cpp.o
 .comment       0x00000492       0x27 obj-WC/StateTable_cpp.o
 .comment       0x000004b9       0x27 obj-WC/Alarms_cpp.o
 .comment       0x000004e0       0x27 obj-WC/FieldbusTable_cpp.o
 .comment       0x00000507       0x27 obj-WC/ShutDownTask_cpp.o
 .comment       0x0000052e       0x27 obj-WC/ExternalStatusTask_cpp.o
 .comment       0x00000555       0x27 obj-WC/BDMTask_cpp.o
 .comment       0x0000057c       0x27 obj-WC/BDM08_cpp.o
 .comment       0x000005a3       0x27 obj-WC/DcxManagerHandler_cpp.o
 .comment       0x000005ca       0x27 C:/RTOS-WC/libRTOS-WC.a(Board_cpp.o)
 .comment       0x000005f1       0x27 C:/RTOS-WC/libRTOS-WC.a(LED_cpp.o)
 .comment       0x00000618       0x27 C:/RTOS-WC/libRTOS-WC.a(BoardFlash_cpp.o)
 .comment       0x0000063f       0x27 C:/RTOS-WC/libRTOS-WC.a(54455_CPU_cpp.o)
 .comment       0x00000666       0x27 C:/RTOS-WC/libRTOS-WC.a(54455_Exception_cpp.o)
 .comment       0x0000068d       0x27 C:/RTOS-WC/libRTOS-WC.a(54455_Terminal_cpp.o)
 .comment       0x000006b4       0x27 C:/RTOS-WC/libRTOS-WC.a(54455_PIT_cpp.o)
 .comment       0x000006db       0x27 C:/RTOS-WC/libRTOS-WC.a(54455_Serial_cpp.o)
 .comment       0x00000702       0x27 C:/RTOS-WC/libRTOS-WC.a(54455_FEC_cpp.o)
 .comment       0x00000729       0x27 C:/RTOS-WC/libRTOS-WC.a(54455_Cache_cpp.o)
 .comment       0x00000750       0x27 C:/RTOS-WC/libRTOS-WC.a(54455_MMU_cpp.o)
 .comment       0x00000777       0x27 C:/RTOS-WC/libRTOS-WC.a(54455_DSPI_cpp.o)
 .comment       0x0000079e       0x27 C:/RTOS-WC/libRTOS-WC.a(54455_I2C_cpp.o)
 .comment       0x000007c5       0x27 C:/RTOS-WC/libRTOS-WC.a(MCF_ArchDefs_cpp.o)
 .comment       0x000007ec       0x27 C:/RTOS-WC/libRTOS-WC.a(MCF_FecBase_cpp.o)
 .comment       0x00000813       0x27 C:/RTOS-WC/libRTOS-WC.a(stdlib_Assert_cpp.o)
 .comment       0x0000083a       0x27 C:/RTOS-WC/libRTOS-WC.a(stdlib_Alloc_cpp.o)
 .comment       0x00000861       0x27 C:/RTOS-WC/libRTOS-WC.a(stdlib_PrintF_cpp.o)
 .comment       0x00000888       0x27 C:/RTOS-WC/libRTOS-WC.a(stdlib_String_cpp.o)
 .comment       0x000008af       0x27 C:/RTOS-WC/libRTOS-WC.a(stdlib_StdLib_cpp.o)
 .comment       0x000008d6       0x27 C:/RTOS-WC/libRTOS-WC.a(API_CyGOS_cpp.o)
 .comment       0x000008fd       0x27 C:/RTOS-WC/libRTOS-WC.a(API_TCPIP_cpp.o)
 .comment       0x00000924       0x27 C:/RTOS-WC/libRTOS-WC.a(API_LinkedList_cpp.o)
 .comment       0x0000094b       0x27 C:/RTOS-WC/libRTOS-WC.a(API_CRC_cpp.o)
 .comment       0x00000972       0x27 C:/RTOS-WC/libRTOS-WC.a(API_FileSystems_cpp.o)
 .comment       0x00000999       0x27 C:/RTOS-WC/libRTOS-WC.a(API_TFTP_cpp.o)
 .comment       0x000009c0       0x27 C:/RTOS-WC/libRTOS-WC.a(API_HTTP_cpp.o)
 .comment       0x000009e7       0x27 C:/RTOS-WC/libRTOS-WC.a(API_SysLog_cpp.o)
 .comment       0x00000a0e       0x27 C:/RTOS-WC/libRTOS-WC.a(RTOS_FIFO_cpp.o)
 .comment       0x00000a35       0x27 C:/RTOS-WC/libRTOS-WC.a(RTOS_RTOS_cpp.o)
 .comment       0x00000a5c       0x27 C:/RTOS-WC/libRTOS-WC.a(RTOS_Task_cpp.o)
 .comment       0x00000a83       0x27 C:/RTOS-WC/libRTOS-WC.a(RTOS_PrintfTask_cpp.o)
 .comment       0x00000aaa       0x27 C:/RTOS-WC/libRTOS-WC.a(RTOS_Debug_cpp.o)
 .comment       0x00000ad1       0x27 C:/RTOS-WC/libRTOS-WC.a(RTOS_Mutex_cpp.o)
 .comment       0x00000af8       0x27 C:/RTOS-WC/libRTOS-WC.a(RTOS_LedTasks_cpp.o)
 .comment       0x00000b1f       0x27 C:/RTOS-WC/libRTOS-WC.a(RTOS_TaskManager_cpp.o)
 .comment       0x00000b46       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_Ethernet_cpp.o)
 .comment       0x00000b6d       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_TcpIp_cpp.o)
 .comment       0x00000b94       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_PktBuf_cpp.o)
 .comment       0x00000bbb       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_ARP_cpp.o)
 .comment       0x00000be2       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_IPv4_cpp.o)
 .comment       0x00000c09       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_Raw_cpp.o)
 .comment       0x00000c30       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_TCP_cpp.o)
 .comment       0x00000c57       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_UDP_cpp.o)
 .comment       0x00000c7e       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_ICMP_cpp.o)
 .comment       0x00000ca5       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_IGMP_cpp.o)
 .comment       0x00000ccc       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_DhcpClient_cpp.o)
 .comment       0x00000cf3       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_AutoIP_cpp.o)
 .comment       0x00000d1a       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_DnsClient_cpp.o)
 .comment       0x00000d41       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_Socket_cpp.o)
 .comment       0x00000d68       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_NetBuf_cpp.o)
 .comment       0x00000d8f       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_NetConn_cpp.o)
 .comment       0x00000db6       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_TcpServer_cpp.o)
 .comment       0x00000ddd       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_TcpConnection_cpp.o)
 .comment       0x00000e04       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_HttpServer_cpp.o)
 .comment       0x00000e2b       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_HttpConnection_cpp.o)
 .comment       0x00000e52       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_TftpClient_cpp.o)
 .comment       0x00000e79       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_DNSServer_cpp.o)
 .comment       0x00000ea0       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_DhcpServer_cpp.o)
 .comment       0x00000ec7       0x27 C:/RTOS-WC/libRTOS-WC.a(Flash_FlashM29W128G_cpp.o)
 .comment       0x00000eee       0x27 C:/RTOS-WC/libRTOS-WC.a(BlkDev_FileSystemManager_cpp.o)
 .comment       0x00000f15       0x27 C:/RTOS-WC/libRTOS-WC.a(BlkDev_RamDiskDevice_cpp.o)
 .comment       0x00000f3c       0x27 C:/RTOS-WC/libRTOS-WC.a(BlkDev_FRAMDiskDevice_cpp.o)
 .comment       0x00000f63       0x27 C:/RTOS-WC/libRTOS-WC.a(FileSys_FileSystem_cpp.o)
 .comment       0x00000f8a       0x27 C:/RTOS-WC/libRTOS-WC.a(FileSys_TarFileSystem_cpp.o)
 .comment       0x00000fb1       0x27 C:/RTOS-WC/libRTOS-WC.a(FileSys_FRAMFileSystem_cpp.o)
 .comment       0x00000fd8       0x27 C:/RTOS-WC/libRTOS-WC.a(Dev_TLV5604_cpp.o)
 .comment       0x00000fff       0x27 C:/RTOS-WC/libRTOS-WC.a(Dev_MCP3208_cpp.o)
 .comment       0x00001026       0x27 C:/RTOS-WC/libRTOS-WC.a(Dev_24AA025E48_cpp.o)
 .comment       0x0000104d       0x27 C:/RTOS-WC/libRTOS-WC.a(Dev_I2CDevice_cpp.o)
 .comment       0x00001074       0x27 C:/RTOS-WC/libRTOS-WC.a(Dev_PCF8563_cpp.o)
 .comment       0x0000109b       0x27 C:/RTOS-WC/libRTOS-WC.a(OS_OS_Custom_cpp.o)
 .comment       0x000010c2       0x27 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXDownload_cpp.o)
 .comment       0x000010e9       0x27 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXFunctions_cpp.o)
 .comment       0x00001110       0x27 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXInit_cpp.o)
 .comment       0x00001137       0x27 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXHWFunctions_cpp.o)
 .comment       0x0000115e       0x27 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXInterrupt_cpp.o)
 .comment       0x00001185       0x27 C:/RTOS-WC/libRTOS-WC.a(SRC_md5_cpp.o)
 .comment       0x000011ac       0x27 C:/RTOS-WC/libRTOS-WC.a(USER_TKitUser_Custom_cpp.o)
 .comment       0x000011d3       0x27 C:/RTOS-WC/libRTOS-WC.a(BoardNet_cpp.o)
 .comment       0x000011fa       0x27 C:/RTOS-WC/libRTOS-WC.a(54455_MCF5445xTask_cpp.o)
 .comment       0x00001221       0x27 C:/RTOS-WC/libRTOS-WC.a(54455_WatchDog_cpp.o)
 .comment       0x00001248       0x27 C:/RTOS-WC/libRTOS-WC.a(RTOS_Event_cpp.o)
 .comment       0x0000126f       0x27 C:/RTOS-WC/libRTOS-WC.a(RTOS_MailBox_cpp.o)
 .comment       0x00001296       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_LAN8701_cpp.o)
 .comment       0x000012bd       0x27 C:/RTOS-WC/libRTOS-WC.a(Net_KSZ8863RLL_cpp.o)
 .comment       0x000012e4       0x27 C:/RTOS-WC/libRTOS-WC.a(Flash_Flash_cpp.o)
 .comment       0x0000130b       0x27 C:/RTOS-WC/libRTOS-WC.a(Flash_FlashAMD_cpp.o)
 .comment       0x00001332       0x27 C:/RTOS-WC/libRTOS-WC.a(BlkDev_BlockDevice_cpp.o)
 .comment       0x00001359       0x27 C:/RTOS-WC/libRTOS-WC.a(BlkDev_CacheBlock_cpp.o)
 .comment       0x00001380       0x27 C:/RTOS-WC/libRTOS-WC.a(SRC_cifXEndianess_cpp.o)
 .comment       0x000013a7       0x27 C:/RTOS-WC/libRTOS-WC.a(54455_MII_cpp.o)

.debug_line     0x00000000      0x777
 .debug_line    0x00000000      0x468 C:/RTOS-WC/libRTOS-WC.a(_double.o)
 .debug_line    0x00000468       0x85 C:/RTOS-WC/libRTOS-WC.a(_fixunsdfsi.o)
 .debug_line    0x000004ed       0x96 C:/RTOS-WC/libRTOS-WC.a(_floatex.o)
 .debug_line    0x00000583       0x81 C:/RTOS-WC/libRTOS-WC.a(_gedf2.o)
 .debug_line    0x00000604      0x173 C:/RTOS-WC/libRTOS-WC.a(fpgnulib.o)

.debug_info     0x00000000      0x6ba
 .debug_info    0x00000000       0xb6 C:/RTOS-WC/libRTOS-WC.a(_double.o)
 .debug_info    0x000000b6       0xd1 C:/RTOS-WC/libRTOS-WC.a(_fixunsdfsi.o)
 .debug_info    0x00000187       0xb6 C:/RTOS-WC/libRTOS-WC.a(_floatex.o)
 .debug_info    0x0000023d       0xb6 C:/RTOS-WC/libRTOS-WC.a(_gedf2.o)
 .debug_info    0x000002f3      0x3c7 C:/RTOS-WC/libRTOS-WC.a(fpgnulib.o)

.debug_abbrev   0x00000000      0x202
 .debug_abbrev  0x00000000       0x14 C:/RTOS-WC/libRTOS-WC.a(_double.o)
 .debug_abbrev  0x00000014       0x66 C:/RTOS-WC/libRTOS-WC.a(_fixunsdfsi.o)
 .debug_abbrev  0x0000007a       0x14 C:/RTOS-WC/libRTOS-WC.a(_floatex.o)
 .debug_abbrev  0x0000008e       0x14 C:/RTOS-WC/libRTOS-WC.a(_gedf2.o)
 .debug_abbrev  0x000000a2      0x160 C:/RTOS-WC/libRTOS-WC.a(fpgnulib.o)

.debug_aranges  0x00000000       0xa0
 .debug_aranges
                0x00000000       0x20 C:/RTOS-WC/libRTOS-WC.a(_double.o)
 .debug_aranges
                0x00000020       0x20 C:/RTOS-WC/libRTOS-WC.a(_fixunsdfsi.o)
 .debug_aranges
                0x00000040       0x20 C:/RTOS-WC/libRTOS-WC.a(_floatex.o)
 .debug_aranges
                0x00000060       0x20 C:/RTOS-WC/libRTOS-WC.a(_gedf2.o)
 .debug_aranges
                0x00000080       0x20 C:/RTOS-WC/libRTOS-WC.a(fpgnulib.o)

.debug_frame    0x00000000      0x178
 .debug_frame   0x00000000       0x3c C:/RTOS-WC/libRTOS-WC.a(_fixunsdfsi.o)
 .debug_frame   0x0000003c      0x13c C:/RTOS-WC/libRTOS-WC.a(fpgnulib.o)

.debug_loc      0x00000000      0x64f
 .debug_loc     0x00000000       0x40 C:/RTOS-WC/libRTOS-WC.a(_fixunsdfsi.o)
 .debug_loc     0x00000040      0x60f C:/RTOS-WC/libRTOS-WC.a(fpgnulib.o)

.debug_pubnames
                0x00000000       0xd6
 .debug_pubnames
                0x00000000       0x23 C:/RTOS-WC/libRTOS-WC.a(_fixunsdfsi.o)
 .debug_pubnames
                0x00000023       0xb3 C:/RTOS-WC/libRTOS-WC.a(fpgnulib.o)

.debug_str      0x00000000      0x1f6
 .debug_str     0x00000000      0x114 C:/RTOS-WC/libRTOS-WC.a(_fixunsdfsi.o)
                                0x15a (size before relaxing)
 .debug_str     0x00000114       0xe2 C:/RTOS-WC/libRTOS-WC.a(fpgnulib.o)
                                0x15a (size before relaxing)

.debug_ranges   0x00000000       0x30
 .debug_ranges  0x00000000       0x30 C:/RTOS-WC/libRTOS-WC.a(fpgnulib.o)
